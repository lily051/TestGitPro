[update] v2.2.13 
1. 修正回滚失败的问题
2. 去除utils库依赖, 减少跨平台移植的工作量
[warn] 回滚失败的问题已经解决, 因为相同 (推测) 原因造成的文件压缩失败依然存在, 目前在vag服务比较容易出现 (其他服务暂时未见或罕见), 对于压缩失败的文件, 在重启服务后会自动删除

v2.2.12
1. 日志压缩前，将原始日志拷贝为新命名的文件
2. 日志压缩使用一个独立的线程来等待压缩进程，并完成后续的处理

v2.2.11
1. 在创建压缩进程失败的情况下，还原修改的日志文件名，保证原始的日志回滚机制能够正常执行

v2.2.10
1. 增加接口hlog_set_immediate_flush以及hlog_flush_and_finalize
2. hlog_fini依然保持空实现
3. 同步linux编译Makefile
4. 设置宏暂不启用log4cxx的错误写入到hlog2.log文件，等这部分也做好文件回滚等机制以后，才能再次开启

v2.2.9
1. 修改log4cxx的日志压缩回滚逻辑，在压缩之前先将日志重命名为以日期时间为后缀的日志文件
2. 修改hlog默认加密和显示配置，两项均为默认启用，避免在读取日志配置文件中hlog加密和显示配置项不成功时无法加密或无法显示密文的问题
3. 实现hlog反初始化接口，在反初始化过程中会尝试关闭所有的logger并以此来刷新在缓冲区中的日志数据到磁盘，可以通过在配置文件中使用log4j.appender.DEMO.ImmediateFlush=false来配置使用log4cxx的日志缓冲区，以提升磁盘IO效率
4. 当没有指定日志模块名时，使用root logger

v2.2.8
1. 修正中文路径下无法读取配置文件hlog自定义配置的问题
2. 加密和显示配置默认为开启，且不再允许在未加密的情况下以明文打印需要加密的日志，默认将会修改配置为加密

v2.2.7
1. 修正在linux下不能正确解析hlog专有配置（是否异步，是否显示密文，是否加密）的问题

v2.2.6
1. 增加参数类型更加一般化的接口hlog_format_ex，以便于其他组件在提供动态库时能够更加容易去除对hlog的构建依赖，又能够在运行期通过函数地址调用hlog的功能

v2.2.5
1. 隐藏压缩日志文件时创建的压缩程序进程的窗口

v2.2.4
1. 对日志加密密文增加标记，以便于开发解密工具对日志中的密文进行统一解密

v2.2.3
1. 修正在Linux下日志单条输出最多为1KB的问题，因为微软和GNU对C语言的标准不同,导致vsnprintf以及va_list,va_copy等行为/支持不同,需要分别对这两个平台实现单条超过1KB日志的支持

v2.2.2
1. 将2.2.1定制版本的内容设置预编译宏控制，主线版本默认不启用

v2.2.1
1. 定制版本，增加对匹配的关键字日志加密功能（用于现场项目hlog升级替换）

v2.2.0
1. 增加日志压缩功能

hlog v2.1.1 check layout 2014/12/09
1. 对log4cxx的缺陷LOGCXX-249进行处理，在WriterAppender::checkEntryConditions中增加对layout的检查，如果配置文件中没有配置layout，那么在该步检查将会输出错误信息到日志库的错误日志输出文件hlog2.log，而不会使用layout输出使用者的日志导致引用空指针崩溃

v2.1.1 2014/05/05
1. 增加接口hlog_message_ex，直接输出message内容到日志，而不处理message中的格式化字符
2. 暂时规避一处HLOG内部日志，该处会导致链接错误
3. 修正hlog1.h中的注释说明错误，格式化注释说明

v2.1.0
1. 内部接口调用时，减少调用接口时的参数变量类型隐式强制转换（ 入参" "改为std::string(" ") ）