// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "alarmclient.UnhandleAlarmInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace alarmclient {

namespace {

const ::google::protobuf::Descriptor* UnhandleAlarmInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnhandleAlarmInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnhandleAlarmInfo_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnhandleAlarmInfo_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnhandleAlarmInfo_Item_Camera_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnhandleAlarmInfo_Item_Camera_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_alarmclient_2eUnhandleAlarmInfo_2eproto() {
  protobuf_AddDesc_alarmclient_2eUnhandleAlarmInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "alarmclient.UnhandleAlarmInfo.proto");
  GOOGLE_CHECK(file != NULL);
  UnhandleAlarmInfo_descriptor_ = file->message_type(0);
  static const int UnhandleAlarmInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo, uaitem_),
  };
  UnhandleAlarmInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnhandleAlarmInfo_descriptor_,
      UnhandleAlarmInfo::default_instance_,
      UnhandleAlarmInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnhandleAlarmInfo));
  UnhandleAlarmInfo_Item_descriptor_ = UnhandleAlarmInfo_descriptor_->nested_type(0);
  static const int UnhandleAlarmInfo_Item_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, typedesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, plan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, contact_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, camera_),
  };
  UnhandleAlarmInfo_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnhandleAlarmInfo_Item_descriptor_,
      UnhandleAlarmInfo_Item::default_instance_,
      UnhandleAlarmInfo_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnhandleAlarmInfo_Item));
  UnhandleAlarmInfo_Item_Camera_descriptor_ = UnhandleAlarmInfo_Item_descriptor_->nested_type(0);
  static const int UnhandleAlarmInfo_Item_Camera_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item_Camera, id_),
  };
  UnhandleAlarmInfo_Item_Camera_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnhandleAlarmInfo_Item_Camera_descriptor_,
      UnhandleAlarmInfo_Item_Camera::default_instance_,
      UnhandleAlarmInfo_Item_Camera_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item_Camera, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnhandleAlarmInfo_Item_Camera, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnhandleAlarmInfo_Item_Camera));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_alarmclient_2eUnhandleAlarmInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnhandleAlarmInfo_descriptor_, &UnhandleAlarmInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnhandleAlarmInfo_Item_descriptor_, &UnhandleAlarmInfo_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnhandleAlarmInfo_Item_Camera_descriptor_, &UnhandleAlarmInfo_Item_Camera::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_alarmclient_2eUnhandleAlarmInfo_2eproto() {
  delete UnhandleAlarmInfo::default_instance_;
  delete UnhandleAlarmInfo_reflection_;
  delete UnhandleAlarmInfo_Item::default_instance_;
  delete UnhandleAlarmInfo_Item_reflection_;
  delete UnhandleAlarmInfo_Item_Camera::default_instance_;
  delete UnhandleAlarmInfo_Item_Camera_reflection_;
}

void protobuf_AddDesc_alarmclient_2eUnhandleAlarmInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#alarmclient.UnhandleAlarmInfo.proto\022\013a"
    "larmclient\"\251\002\n\021UnhandleAlarmInfo\0223\n\006uaIt"
    "em\030\001 \003(\0132#.alarmclient.UnhandleAlarmInfo"
    ".Item\032\336\001\n\004Item\022\014\n\004name\030\001 \002(\t\022\r\n\005level\030\002 "
    "\002(\005\022\020\n\010typeDesc\030\003 \002(\t\022\014\n\004plan\030\004 \002(\t\022\013\n\003m"
    "sg\030\005 \002(\t\022\014\n\004addr\030\006 \002(\t\022\017\n\007contact\030\007 \002(\t\022"
    "\r\n\005index\030\010 \002(\t\022\014\n\004time\030\t \002(\t\022:\n\006camera\030\n"
    " \003(\0132*.alarmclient.UnhandleAlarmInfo.Ite"
    "m.Camera\032\024\n\006Camera\022\n\n\002id\030\001 \002(\005", 350);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "alarmclient.UnhandleAlarmInfo.proto", &protobuf_RegisterTypes);
  UnhandleAlarmInfo::default_instance_ = new UnhandleAlarmInfo();
  UnhandleAlarmInfo_Item::default_instance_ = new UnhandleAlarmInfo_Item();
  UnhandleAlarmInfo_Item_Camera::default_instance_ = new UnhandleAlarmInfo_Item_Camera();
  UnhandleAlarmInfo::default_instance_->InitAsDefaultInstance();
  UnhandleAlarmInfo_Item::default_instance_->InitAsDefaultInstance();
  UnhandleAlarmInfo_Item_Camera::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_alarmclient_2eUnhandleAlarmInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_alarmclient_2eUnhandleAlarmInfo_2eproto {
  StaticDescriptorInitializer_alarmclient_2eUnhandleAlarmInfo_2eproto() {
    protobuf_AddDesc_alarmclient_2eUnhandleAlarmInfo_2eproto();
  }
} static_descriptor_initializer_alarmclient_2eUnhandleAlarmInfo_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int UnhandleAlarmInfo_Item_Camera::kIdFieldNumber;
#endif  // !_MSC_VER

UnhandleAlarmInfo_Item_Camera::UnhandleAlarmInfo_Item_Camera()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UnhandleAlarmInfo_Item_Camera::InitAsDefaultInstance() {
}

UnhandleAlarmInfo_Item_Camera::UnhandleAlarmInfo_Item_Camera(const UnhandleAlarmInfo_Item_Camera& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UnhandleAlarmInfo_Item_Camera::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnhandleAlarmInfo_Item_Camera::~UnhandleAlarmInfo_Item_Camera() {
  SharedDtor();
}

void UnhandleAlarmInfo_Item_Camera::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnhandleAlarmInfo_Item_Camera::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnhandleAlarmInfo_Item_Camera::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnhandleAlarmInfo_Item_Camera_descriptor_;
}

const UnhandleAlarmInfo_Item_Camera& UnhandleAlarmInfo_Item_Camera::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_alarmclient_2eUnhandleAlarmInfo_2eproto();  return *default_instance_;
}

UnhandleAlarmInfo_Item_Camera* UnhandleAlarmInfo_Item_Camera::default_instance_ = NULL;

UnhandleAlarmInfo_Item_Camera* UnhandleAlarmInfo_Item_Camera::New() const {
  return new UnhandleAlarmInfo_Item_Camera;
}

void UnhandleAlarmInfo_Item_Camera::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnhandleAlarmInfo_Item_Camera::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UnhandleAlarmInfo_Item_Camera::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UnhandleAlarmInfo_Item_Camera::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UnhandleAlarmInfo_Item_Camera::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnhandleAlarmInfo_Item_Camera::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnhandleAlarmInfo_Item_Camera* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnhandleAlarmInfo_Item_Camera*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnhandleAlarmInfo_Item_Camera::MergeFrom(const UnhandleAlarmInfo_Item_Camera& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnhandleAlarmInfo_Item_Camera::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnhandleAlarmInfo_Item_Camera::CopyFrom(const UnhandleAlarmInfo_Item_Camera& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnhandleAlarmInfo_Item_Camera::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void UnhandleAlarmInfo_Item_Camera::Swap(UnhandleAlarmInfo_Item_Camera* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnhandleAlarmInfo_Item_Camera::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnhandleAlarmInfo_Item_Camera_descriptor_;
  metadata.reflection = UnhandleAlarmInfo_Item_Camera_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UnhandleAlarmInfo_Item::kNameFieldNumber;
const int UnhandleAlarmInfo_Item::kLevelFieldNumber;
const int UnhandleAlarmInfo_Item::kTypeDescFieldNumber;
const int UnhandleAlarmInfo_Item::kPlanFieldNumber;
const int UnhandleAlarmInfo_Item::kMsgFieldNumber;
const int UnhandleAlarmInfo_Item::kAddrFieldNumber;
const int UnhandleAlarmInfo_Item::kContactFieldNumber;
const int UnhandleAlarmInfo_Item::kIndexFieldNumber;
const int UnhandleAlarmInfo_Item::kTimeFieldNumber;
const int UnhandleAlarmInfo_Item::kCameraFieldNumber;
#endif  // !_MSC_VER

UnhandleAlarmInfo_Item::UnhandleAlarmInfo_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UnhandleAlarmInfo_Item::InitAsDefaultInstance() {
}

UnhandleAlarmInfo_Item::UnhandleAlarmInfo_Item(const UnhandleAlarmInfo_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UnhandleAlarmInfo_Item::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0;
  typedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  plan_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  contact_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  index_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnhandleAlarmInfo_Item::~UnhandleAlarmInfo_Item() {
  SharedDtor();
}

void UnhandleAlarmInfo_Item::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (typedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete typedesc_;
  }
  if (plan_ != &::google::protobuf::internal::kEmptyString) {
    delete plan_;
  }
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (addr_ != &::google::protobuf::internal::kEmptyString) {
    delete addr_;
  }
  if (contact_ != &::google::protobuf::internal::kEmptyString) {
    delete contact_;
  }
  if (index_ != &::google::protobuf::internal::kEmptyString) {
    delete index_;
  }
  if (time_ != &::google::protobuf::internal::kEmptyString) {
    delete time_;
  }
  if (this != default_instance_) {
  }
}

void UnhandleAlarmInfo_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnhandleAlarmInfo_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnhandleAlarmInfo_Item_descriptor_;
}

const UnhandleAlarmInfo_Item& UnhandleAlarmInfo_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_alarmclient_2eUnhandleAlarmInfo_2eproto();  return *default_instance_;
}

UnhandleAlarmInfo_Item* UnhandleAlarmInfo_Item::default_instance_ = NULL;

UnhandleAlarmInfo_Item* UnhandleAlarmInfo_Item::New() const {
  return new UnhandleAlarmInfo_Item;
}

void UnhandleAlarmInfo_Item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    level_ = 0;
    if (has_typedesc()) {
      if (typedesc_ != &::google::protobuf::internal::kEmptyString) {
        typedesc_->clear();
      }
    }
    if (has_plan()) {
      if (plan_ != &::google::protobuf::internal::kEmptyString) {
        plan_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::kEmptyString) {
        msg_->clear();
      }
    }
    if (has_addr()) {
      if (addr_ != &::google::protobuf::internal::kEmptyString) {
        addr_->clear();
      }
    }
    if (has_contact()) {
      if (contact_ != &::google::protobuf::internal::kEmptyString) {
        contact_->clear();
      }
    }
    if (has_index()) {
      if (index_ != &::google::protobuf::internal::kEmptyString) {
        index_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_time()) {
      if (time_ != &::google::protobuf::internal::kEmptyString) {
        time_->clear();
      }
    }
  }
  camera_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnhandleAlarmInfo_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }
      
      // required int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_typeDesc;
        break;
      }
      
      // required string typeDesc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_typeDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_typedesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->typedesc().data(), this->typedesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_plan;
        break;
      }
      
      // required string plan = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_plan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->plan().data(), this->plan().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_msg;
        break;
      }
      
      // required string msg = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_addr;
        break;
      }
      
      // required string addr = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_contact;
        break;
      }
      
      // required string contact = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_contact:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->contact().data(), this->contact().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_index;
        break;
      }
      
      // required string index = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_index:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->index().data(), this->index().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_time;
        break;
      }
      
      // required string time = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_camera;
        break;
      }
      
      // repeated .alarmclient.UnhandleAlarmInfo.Item.Camera camera = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_camera:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_camera()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_camera;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UnhandleAlarmInfo_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }
  
  // required string typeDesc = 3;
  if (has_typedesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->typedesc().data(), this->typedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->typedesc(), output);
  }
  
  // required string plan = 4;
  if (has_plan()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->plan().data(), this->plan().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->plan(), output);
  }
  
  // required string msg = 5;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->msg(), output);
  }
  
  // required string addr = 6;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->addr(), output);
  }
  
  // required string contact = 7;
  if (has_contact()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->contact(), output);
  }
  
  // required string index = 8;
  if (has_index()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->index().data(), this->index().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->index(), output);
  }
  
  // required string time = 9;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->time(), output);
  }
  
  // repeated .alarmclient.UnhandleAlarmInfo.Item.Camera camera = 10;
  for (int i = 0; i < this->camera_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->camera(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UnhandleAlarmInfo_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }
  
  // required string typeDesc = 3;
  if (has_typedesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->typedesc().data(), this->typedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->typedesc(), target);
  }
  
  // required string plan = 4;
  if (has_plan()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->plan().data(), this->plan().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->plan(), target);
  }
  
  // required string msg = 5;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }
  
  // required string addr = 6;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->addr(), target);
  }
  
  // required string contact = 7;
  if (has_contact()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->contact(), target);
  }
  
  // required string index = 8;
  if (has_index()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->index().data(), this->index().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->index(), target);
  }
  
  // required string time = 9;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->time(), target);
  }
  
  // repeated .alarmclient.UnhandleAlarmInfo.Item.Camera camera = 10;
  for (int i = 0; i < this->camera_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->camera(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UnhandleAlarmInfo_Item::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // required string typeDesc = 3;
    if (has_typedesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->typedesc());
    }
    
    // required string plan = 4;
    if (has_plan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->plan());
    }
    
    // required string msg = 5;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }
    
    // required string addr = 6;
    if (has_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addr());
    }
    
    // required string contact = 7;
    if (has_contact()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contact());
    }
    
    // required string index = 8;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->index());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string time = 9;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }
    
  }
  // repeated .alarmclient.UnhandleAlarmInfo.Item.Camera camera = 10;
  total_size += 1 * this->camera_size();
  for (int i = 0; i < this->camera_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->camera(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnhandleAlarmInfo_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnhandleAlarmInfo_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnhandleAlarmInfo_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnhandleAlarmInfo_Item::MergeFrom(const UnhandleAlarmInfo_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  camera_.MergeFrom(from.camera_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_typedesc()) {
      set_typedesc(from.typedesc());
    }
    if (from.has_plan()) {
      set_plan(from.plan());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
    if (from.has_addr()) {
      set_addr(from.addr());
    }
    if (from.has_contact()) {
      set_contact(from.contact());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnhandleAlarmInfo_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnhandleAlarmInfo_Item::CopyFrom(const UnhandleAlarmInfo_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnhandleAlarmInfo_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  
  for (int i = 0; i < camera_size(); i++) {
    if (!this->camera(i).IsInitialized()) return false;
  }
  return true;
}

void UnhandleAlarmInfo_Item::Swap(UnhandleAlarmInfo_Item* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(level_, other->level_);
    std::swap(typedesc_, other->typedesc_);
    std::swap(plan_, other->plan_);
    std::swap(msg_, other->msg_);
    std::swap(addr_, other->addr_);
    std::swap(contact_, other->contact_);
    std::swap(index_, other->index_);
    std::swap(time_, other->time_);
    camera_.Swap(&other->camera_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnhandleAlarmInfo_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnhandleAlarmInfo_Item_descriptor_;
  metadata.reflection = UnhandleAlarmInfo_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UnhandleAlarmInfo::kUaItemFieldNumber;
#endif  // !_MSC_VER

UnhandleAlarmInfo::UnhandleAlarmInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UnhandleAlarmInfo::InitAsDefaultInstance() {
}

UnhandleAlarmInfo::UnhandleAlarmInfo(const UnhandleAlarmInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UnhandleAlarmInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnhandleAlarmInfo::~UnhandleAlarmInfo() {
  SharedDtor();
}

void UnhandleAlarmInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnhandleAlarmInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnhandleAlarmInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnhandleAlarmInfo_descriptor_;
}

const UnhandleAlarmInfo& UnhandleAlarmInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_alarmclient_2eUnhandleAlarmInfo_2eproto();  return *default_instance_;
}

UnhandleAlarmInfo* UnhandleAlarmInfo::default_instance_ = NULL;

UnhandleAlarmInfo* UnhandleAlarmInfo::New() const {
  return new UnhandleAlarmInfo;
}

void UnhandleAlarmInfo::Clear() {
  uaitem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnhandleAlarmInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .alarmclient.UnhandleAlarmInfo.Item uaItem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uaItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_uaitem()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_uaItem;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UnhandleAlarmInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .alarmclient.UnhandleAlarmInfo.Item uaItem = 1;
  for (int i = 0; i < this->uaitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->uaitem(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UnhandleAlarmInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .alarmclient.UnhandleAlarmInfo.Item uaItem = 1;
  for (int i = 0; i < this->uaitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->uaitem(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UnhandleAlarmInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .alarmclient.UnhandleAlarmInfo.Item uaItem = 1;
  total_size += 1 * this->uaitem_size();
  for (int i = 0; i < this->uaitem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->uaitem(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnhandleAlarmInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnhandleAlarmInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnhandleAlarmInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnhandleAlarmInfo::MergeFrom(const UnhandleAlarmInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  uaitem_.MergeFrom(from.uaitem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnhandleAlarmInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnhandleAlarmInfo::CopyFrom(const UnhandleAlarmInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnhandleAlarmInfo::IsInitialized() const {
  
  for (int i = 0; i < uaitem_size(); i++) {
    if (!this->uaitem(i).IsInitialized()) return false;
  }
  return true;
}

void UnhandleAlarmInfo::Swap(UnhandleAlarmInfo* other) {
  if (other != this) {
    uaitem_.Swap(&other->uaitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnhandleAlarmInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnhandleAlarmInfo_descriptor_;
  metadata.reflection = UnhandleAlarmInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace alarmclient

// @@protoc_insertion_point(global_scope)
