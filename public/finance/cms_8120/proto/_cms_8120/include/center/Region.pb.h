// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center/Region.proto

#ifndef PROTOBUF_center_2fRegion_2eproto__INCLUDED
#define PROTOBUF_center_2fRegion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "type/cmd.pb.h"
// @@protoc_insertion_point(includes)

namespace cms_8120 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_center_2fRegion_2eproto();
void protobuf_AssignDesc_center_2fRegion_2eproto();
void protobuf_ShutdownFile_center_2fRegion_2eproto();

class Region;
class ReqRegion;
class RegionList;

// ===================================================================

class Region : public ::google::protobuf::Message {
 public:
  Region();
  virtual ~Region();
  
  Region(const Region& from);
  
  inline Region& operator=(const Region& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Region& default_instance();
  
  void Swap(Region* other);
  
  // implements Message ----------------------------------------------
  
  Region* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Region& from);
  void MergeFrom(const Region& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 nParentId = 2;
  inline bool has_nparentid() const;
  inline void clear_nparentid();
  static const int kNParentIdFieldNumber = 2;
  inline ::google::protobuf::int32 nparentid() const;
  inline void set_nparentid(::google::protobuf::int32 value);
  
  // optional string strName = 3;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 3;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  
  // optional string strCode = 4;
  inline bool has_strcode() const;
  inline void clear_strcode();
  static const int kStrCodeFieldNumber = 4;
  inline const ::std::string& strcode() const;
  inline void set_strcode(const ::std::string& value);
  inline void set_strcode(const char* value);
  inline void set_strcode(const char* value, size_t size);
  inline ::std::string* mutable_strcode();
  inline ::std::string* release_strcode();
  
  // optional string strInterAreaCode = 5;
  inline bool has_strinterareacode() const;
  inline void clear_strinterareacode();
  static const int kStrInterAreaCodeFieldNumber = 5;
  inline const ::std::string& strinterareacode() const;
  inline void set_strinterareacode(const ::std::string& value);
  inline void set_strinterareacode(const char* value);
  inline void set_strinterareacode(const char* value, size_t size);
  inline ::std::string* mutable_strinterareacode();
  inline ::std::string* release_strinterareacode();
  
  // optional string strPath = 6;
  inline bool has_strpath() const;
  inline void clear_strpath();
  static const int kStrPathFieldNumber = 6;
  inline const ::std::string& strpath() const;
  inline void set_strpath(const ::std::string& value);
  inline void set_strpath(const char* value);
  inline void set_strpath(const char* value, size_t size);
  inline ::std::string* mutable_strpath();
  inline ::std::string* release_strpath();
  
  // optional int32 nSortId = 7;
  inline bool has_nsortid() const;
  inline void clear_nsortid();
  static const int kNSortIdFieldNumber = 7;
  inline ::google::protobuf::int32 nsortid() const;
  inline void set_nsortid(::google::protobuf::int32 value);
  
  // optional string strTxt = 8;
  inline bool has_strtxt() const;
  inline void clear_strtxt();
  static const int kStrTxtFieldNumber = 8;
  inline const ::std::string& strtxt() const;
  inline void set_strtxt(const ::std::string& value);
  inline void set_strtxt(const char* value);
  inline void set_strtxt(const char* value, size_t size);
  inline ::std::string* mutable_strtxt();
  inline ::std::string* release_strtxt();
  
  // @@protoc_insertion_point(class_scope:cms_8120.Region)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_nparentid();
  inline void clear_has_nparentid();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_strcode();
  inline void clear_has_strcode();
  inline void set_has_strinterareacode();
  inline void clear_has_strinterareacode();
  inline void set_has_strpath();
  inline void clear_has_strpath();
  inline void set_has_nsortid();
  inline void clear_has_nsortid();
  inline void set_has_strtxt();
  inline void clear_has_strtxt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 nparentid_;
  ::std::string* strname_;
  ::std::string* strcode_;
  ::std::string* strinterareacode_;
  ::std::string* strpath_;
  ::std::string* strtxt_;
  ::google::protobuf::int32 nsortid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_center_2fRegion_2eproto();
  friend void protobuf_AssignDesc_center_2fRegion_2eproto();
  friend void protobuf_ShutdownFile_center_2fRegion_2eproto();
  
  void InitAsDefaultInstance();
  static Region* default_instance_;
};
// -------------------------------------------------------------------

class ReqRegion : public ::google::protobuf::Message {
 public:
  ReqRegion();
  virtual ~ReqRegion();
  
  ReqRegion(const ReqRegion& from);
  
  inline ReqRegion& operator=(const ReqRegion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRegion& default_instance();
  
  void Swap(ReqRegion* other);
  
  // implements Message ----------------------------------------------
  
  ReqRegion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRegion& from);
  void MergeFrom(const ReqRegion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);
  
  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 nParentId = 3;
  inline bool has_nparentid() const;
  inline void clear_nparentid();
  static const int kNParentIdFieldNumber = 3;
  inline ::google::protobuf::int32 nparentid() const;
  inline void set_nparentid(::google::protobuf::int32 value);
  
  // optional string strName = 4;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 4;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  
  // optional string strCode = 5;
  inline bool has_strcode() const;
  inline void clear_strcode();
  static const int kStrCodeFieldNumber = 5;
  inline const ::std::string& strcode() const;
  inline void set_strcode(const ::std::string& value);
  inline void set_strcode(const char* value);
  inline void set_strcode(const char* value, size_t size);
  inline ::std::string* mutable_strcode();
  inline ::std::string* release_strcode();
  
  // optional string strInterAreaCode = 6;
  inline bool has_strinterareacode() const;
  inline void clear_strinterareacode();
  static const int kStrInterAreaCodeFieldNumber = 6;
  inline const ::std::string& strinterareacode() const;
  inline void set_strinterareacode(const ::std::string& value);
  inline void set_strinterareacode(const char* value);
  inline void set_strinterareacode(const char* value, size_t size);
  inline ::std::string* mutable_strinterareacode();
  inline ::std::string* release_strinterareacode();
  
  // optional string strPath = 7;
  inline bool has_strpath() const;
  inline void clear_strpath();
  static const int kStrPathFieldNumber = 7;
  inline const ::std::string& strpath() const;
  inline void set_strpath(const ::std::string& value);
  inline void set_strpath(const char* value);
  inline void set_strpath(const char* value, size_t size);
  inline ::std::string* mutable_strpath();
  inline ::std::string* release_strpath();
  
  // optional int32 nSortId = 8;
  inline bool has_nsortid() const;
  inline void clear_nsortid();
  static const int kNSortIdFieldNumber = 8;
  inline ::google::protobuf::int32 nsortid() const;
  inline void set_nsortid(::google::protobuf::int32 value);
  
  // optional string strTxt = 9;
  inline bool has_strtxt() const;
  inline void clear_strtxt();
  static const int kStrTxtFieldNumber = 9;
  inline const ::std::string& strtxt() const;
  inline void set_strtxt(const ::std::string& value);
  inline void set_strtxt(const char* value);
  inline void set_strtxt(const char* value, size_t size);
  inline ::std::string* mutable_strtxt();
  inline ::std::string* release_strtxt();
  
  // @@protoc_insertion_point(class_scope:cms_8120.ReqRegion)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_nparentid();
  inline void clear_has_nparentid();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_strcode();
  inline void clear_has_strcode();
  inline void set_has_strinterareacode();
  inline void clear_has_strinterareacode();
  inline void set_has_strpath();
  inline void clear_has_strpath();
  inline void set_has_nsortid();
  inline void clear_has_nsortid();
  inline void set_has_strtxt();
  inline void clear_has_strtxt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 id_;
  ::std::string* strname_;
  ::std::string* strcode_;
  ::google::protobuf::int32 nparentid_;
  ::google::protobuf::int32 nsortid_;
  ::std::string* strinterareacode_;
  ::std::string* strpath_;
  ::std::string* strtxt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_center_2fRegion_2eproto();
  friend void protobuf_AssignDesc_center_2fRegion_2eproto();
  friend void protobuf_ShutdownFile_center_2fRegion_2eproto();
  
  void InitAsDefaultInstance();
  static ReqRegion* default_instance_;
};
// -------------------------------------------------------------------

class RegionList : public ::google::protobuf::Message {
 public:
  RegionList();
  virtual ~RegionList();
  
  RegionList(const RegionList& from);
  
  inline RegionList& operator=(const RegionList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionList& default_instance();
  
  void Swap(RegionList* other);
  
  // implements Message ----------------------------------------------
  
  RegionList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegionList& from);
  void MergeFrom(const RegionList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);
  
  // repeated .cms_8120.Region region = 2;
  inline int region_size() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 2;
  inline const ::cms_8120::Region& region(int index) const;
  inline ::cms_8120::Region* mutable_region(int index);
  inline ::cms_8120::Region* add_region();
  inline const ::google::protobuf::RepeatedPtrField< ::cms_8120::Region >&
      region() const;
  inline ::google::protobuf::RepeatedPtrField< ::cms_8120::Region >*
      mutable_region();
  
  // @@protoc_insertion_point(class_scope:cms_8120.RegionList)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::cms_8120::Region > region_;
  ::google::protobuf::int32 cmd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_center_2fRegion_2eproto();
  friend void protobuf_AssignDesc_center_2fRegion_2eproto();
  friend void protobuf_ShutdownFile_center_2fRegion_2eproto();
  
  void InitAsDefaultInstance();
  static RegionList* default_instance_;
};
// ===================================================================


// ===================================================================

// Region

// optional int32 id = 1;
inline bool Region::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Region::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Region::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Region::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Region::id() const {
  return id_;
}
inline void Region::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 nParentId = 2;
inline bool Region::has_nparentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Region::set_has_nparentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Region::clear_has_nparentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Region::clear_nparentid() {
  nparentid_ = 0;
  clear_has_nparentid();
}
inline ::google::protobuf::int32 Region::nparentid() const {
  return nparentid_;
}
inline void Region::set_nparentid(::google::protobuf::int32 value) {
  set_has_nparentid();
  nparentid_ = value;
}

// optional string strName = 3;
inline bool Region::has_strname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Region::set_has_strname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Region::clear_has_strname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Region::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& Region::strname() const {
  return *strname_;
}
inline void Region::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void Region::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void Region::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Region::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* Region::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strCode = 4;
inline bool Region::has_strcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Region::set_has_strcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Region::clear_has_strcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Region::clear_strcode() {
  if (strcode_ != &::google::protobuf::internal::kEmptyString) {
    strcode_->clear();
  }
  clear_has_strcode();
}
inline const ::std::string& Region::strcode() const {
  return *strcode_;
}
inline void Region::set_strcode(const ::std::string& value) {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  strcode_->assign(value);
}
inline void Region::set_strcode(const char* value) {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  strcode_->assign(value);
}
inline void Region::set_strcode(const char* value, size_t size) {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  strcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Region::mutable_strcode() {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  return strcode_;
}
inline ::std::string* Region::release_strcode() {
  clear_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcode_;
    strcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strInterAreaCode = 5;
inline bool Region::has_strinterareacode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Region::set_has_strinterareacode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Region::clear_has_strinterareacode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Region::clear_strinterareacode() {
  if (strinterareacode_ != &::google::protobuf::internal::kEmptyString) {
    strinterareacode_->clear();
  }
  clear_has_strinterareacode();
}
inline const ::std::string& Region::strinterareacode() const {
  return *strinterareacode_;
}
inline void Region::set_strinterareacode(const ::std::string& value) {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  strinterareacode_->assign(value);
}
inline void Region::set_strinterareacode(const char* value) {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  strinterareacode_->assign(value);
}
inline void Region::set_strinterareacode(const char* value, size_t size) {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  strinterareacode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Region::mutable_strinterareacode() {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  return strinterareacode_;
}
inline ::std::string* Region::release_strinterareacode() {
  clear_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strinterareacode_;
    strinterareacode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strPath = 6;
inline bool Region::has_strpath() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Region::set_has_strpath() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Region::clear_has_strpath() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Region::clear_strpath() {
  if (strpath_ != &::google::protobuf::internal::kEmptyString) {
    strpath_->clear();
  }
  clear_has_strpath();
}
inline const ::std::string& Region::strpath() const {
  return *strpath_;
}
inline void Region::set_strpath(const ::std::string& value) {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  strpath_->assign(value);
}
inline void Region::set_strpath(const char* value) {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  strpath_->assign(value);
}
inline void Region::set_strpath(const char* value, size_t size) {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  strpath_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Region::mutable_strpath() {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  return strpath_;
}
inline ::std::string* Region::release_strpath() {
  clear_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpath_;
    strpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 nSortId = 7;
inline bool Region::has_nsortid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Region::set_has_nsortid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Region::clear_has_nsortid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Region::clear_nsortid() {
  nsortid_ = 0;
  clear_has_nsortid();
}
inline ::google::protobuf::int32 Region::nsortid() const {
  return nsortid_;
}
inline void Region::set_nsortid(::google::protobuf::int32 value) {
  set_has_nsortid();
  nsortid_ = value;
}

// optional string strTxt = 8;
inline bool Region::has_strtxt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Region::set_has_strtxt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Region::clear_has_strtxt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Region::clear_strtxt() {
  if (strtxt_ != &::google::protobuf::internal::kEmptyString) {
    strtxt_->clear();
  }
  clear_has_strtxt();
}
inline const ::std::string& Region::strtxt() const {
  return *strtxt_;
}
inline void Region::set_strtxt(const ::std::string& value) {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  strtxt_->assign(value);
}
inline void Region::set_strtxt(const char* value) {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  strtxt_->assign(value);
}
inline void Region::set_strtxt(const char* value, size_t size) {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  strtxt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Region::mutable_strtxt() {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  return strtxt_;
}
inline ::std::string* Region::release_strtxt() {
  clear_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtxt_;
    strtxt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqRegion

// optional int32 cmd = 1;
inline bool ReqRegion::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqRegion::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqRegion::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqRegion::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 ReqRegion::cmd() const {
  return cmd_;
}
inline void ReqRegion::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional int32 id = 2;
inline bool ReqRegion::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqRegion::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqRegion::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqRegion::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReqRegion::id() const {
  return id_;
}
inline void ReqRegion::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 nParentId = 3;
inline bool ReqRegion::has_nparentid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqRegion::set_has_nparentid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqRegion::clear_has_nparentid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqRegion::clear_nparentid() {
  nparentid_ = 0;
  clear_has_nparentid();
}
inline ::google::protobuf::int32 ReqRegion::nparentid() const {
  return nparentid_;
}
inline void ReqRegion::set_nparentid(::google::protobuf::int32 value) {
  set_has_nparentid();
  nparentid_ = value;
}

// optional string strName = 4;
inline bool ReqRegion::has_strname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqRegion::set_has_strname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqRegion::clear_has_strname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqRegion::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& ReqRegion::strname() const {
  return *strname_;
}
inline void ReqRegion::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ReqRegion::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ReqRegion::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRegion::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* ReqRegion::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strCode = 5;
inline bool ReqRegion::has_strcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqRegion::set_has_strcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqRegion::clear_has_strcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqRegion::clear_strcode() {
  if (strcode_ != &::google::protobuf::internal::kEmptyString) {
    strcode_->clear();
  }
  clear_has_strcode();
}
inline const ::std::string& ReqRegion::strcode() const {
  return *strcode_;
}
inline void ReqRegion::set_strcode(const ::std::string& value) {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  strcode_->assign(value);
}
inline void ReqRegion::set_strcode(const char* value) {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  strcode_->assign(value);
}
inline void ReqRegion::set_strcode(const char* value, size_t size) {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  strcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRegion::mutable_strcode() {
  set_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    strcode_ = new ::std::string;
  }
  return strcode_;
}
inline ::std::string* ReqRegion::release_strcode() {
  clear_has_strcode();
  if (strcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcode_;
    strcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strInterAreaCode = 6;
inline bool ReqRegion::has_strinterareacode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqRegion::set_has_strinterareacode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqRegion::clear_has_strinterareacode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqRegion::clear_strinterareacode() {
  if (strinterareacode_ != &::google::protobuf::internal::kEmptyString) {
    strinterareacode_->clear();
  }
  clear_has_strinterareacode();
}
inline const ::std::string& ReqRegion::strinterareacode() const {
  return *strinterareacode_;
}
inline void ReqRegion::set_strinterareacode(const ::std::string& value) {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  strinterareacode_->assign(value);
}
inline void ReqRegion::set_strinterareacode(const char* value) {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  strinterareacode_->assign(value);
}
inline void ReqRegion::set_strinterareacode(const char* value, size_t size) {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  strinterareacode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRegion::mutable_strinterareacode() {
  set_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    strinterareacode_ = new ::std::string;
  }
  return strinterareacode_;
}
inline ::std::string* ReqRegion::release_strinterareacode() {
  clear_has_strinterareacode();
  if (strinterareacode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strinterareacode_;
    strinterareacode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strPath = 7;
inline bool ReqRegion::has_strpath() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReqRegion::set_has_strpath() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReqRegion::clear_has_strpath() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReqRegion::clear_strpath() {
  if (strpath_ != &::google::protobuf::internal::kEmptyString) {
    strpath_->clear();
  }
  clear_has_strpath();
}
inline const ::std::string& ReqRegion::strpath() const {
  return *strpath_;
}
inline void ReqRegion::set_strpath(const ::std::string& value) {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  strpath_->assign(value);
}
inline void ReqRegion::set_strpath(const char* value) {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  strpath_->assign(value);
}
inline void ReqRegion::set_strpath(const char* value, size_t size) {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  strpath_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRegion::mutable_strpath() {
  set_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    strpath_ = new ::std::string;
  }
  return strpath_;
}
inline ::std::string* ReqRegion::release_strpath() {
  clear_has_strpath();
  if (strpath_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpath_;
    strpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 nSortId = 8;
inline bool ReqRegion::has_nsortid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReqRegion::set_has_nsortid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReqRegion::clear_has_nsortid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReqRegion::clear_nsortid() {
  nsortid_ = 0;
  clear_has_nsortid();
}
inline ::google::protobuf::int32 ReqRegion::nsortid() const {
  return nsortid_;
}
inline void ReqRegion::set_nsortid(::google::protobuf::int32 value) {
  set_has_nsortid();
  nsortid_ = value;
}

// optional string strTxt = 9;
inline bool ReqRegion::has_strtxt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReqRegion::set_has_strtxt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReqRegion::clear_has_strtxt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReqRegion::clear_strtxt() {
  if (strtxt_ != &::google::protobuf::internal::kEmptyString) {
    strtxt_->clear();
  }
  clear_has_strtxt();
}
inline const ::std::string& ReqRegion::strtxt() const {
  return *strtxt_;
}
inline void ReqRegion::set_strtxt(const ::std::string& value) {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  strtxt_->assign(value);
}
inline void ReqRegion::set_strtxt(const char* value) {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  strtxt_->assign(value);
}
inline void ReqRegion::set_strtxt(const char* value, size_t size) {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  strtxt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRegion::mutable_strtxt() {
  set_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    strtxt_ = new ::std::string;
  }
  return strtxt_;
}
inline ::std::string* ReqRegion::release_strtxt() {
  clear_has_strtxt();
  if (strtxt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtxt_;
    strtxt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RegionList

// optional int32 cmd = 1;
inline bool RegionList::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegionList::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegionList::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegionList::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 RegionList::cmd() const {
  return cmd_;
}
inline void RegionList::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// repeated .cms_8120.Region region = 2;
inline int RegionList::region_size() const {
  return region_.size();
}
inline void RegionList::clear_region() {
  region_.Clear();
}
inline const ::cms_8120::Region& RegionList::region(int index) const {
  return region_.Get(index);
}
inline ::cms_8120::Region* RegionList::mutable_region(int index) {
  return region_.Mutable(index);
}
inline ::cms_8120::Region* RegionList::add_region() {
  return region_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cms_8120::Region >&
RegionList::region() const {
  return region_;
}
inline ::google::protobuf::RepeatedPtrField< ::cms_8120::Region >*
RegionList::mutable_region() {
  return &region_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_center_2fRegion_2eproto__INCLUDED
