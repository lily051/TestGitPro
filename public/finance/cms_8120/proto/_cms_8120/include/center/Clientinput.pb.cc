// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "center/Clientinput.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cms_8120 {

namespace {

const ::google::protobuf::Descriptor* Clientinput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Clientinput_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_center_2fClientinput_2eproto() {
  protobuf_AddDesc_center_2fClientinput_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "center/Clientinput.proto");
  GOOGLE_CHECK(file != NULL);
  Clientinput_descriptor_ = file->message_type(0);
  static const int Clientinput_offsets_[32] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, nproid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, creditid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, producttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, inputtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, inputuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, inputregionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, inputregionname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, proname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, prouserno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, businesstime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, productname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, productcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, productsavemonth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, guaranteeyears_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strvideoenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, delaydays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, saveflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, tipflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, markdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, creditcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strrisklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strbankno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strbuymoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strremarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, nisupload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, nispay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, strcreditphone_),
  };
  Clientinput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Clientinput_descriptor_,
      Clientinput::default_instance_,
      Clientinput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Clientinput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Clientinput));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_center_2fClientinput_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Clientinput_descriptor_, &Clientinput::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_center_2fClientinput_2eproto() {
  delete Clientinput::default_instance_;
  delete Clientinput_reflection_;
}

void protobuf_AddDesc_center_2fClientinput_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030center/Clientinput.proto\022\010cms_8120\"\227\005\n"
    "\013Clientinput\022\n\n\002id\030\001 \001(\005\022\016\n\006nProId\030\002 \001(\t"
    "\022\014\n\004name\030\003 \001(\t\022\020\n\010creditId\030\004 \001(\t\022\016\n\006stat"
    "us\030\005 \001(\005\022\023\n\013productType\030\006 \001(\005\022\021\n\tinputTi"
    "me\030\007 \001(\t\022\021\n\tinputUser\030\010 \001(\t\022\025\n\rinputRegi"
    "onId\030\t \001(\005\022\027\n\017inputRegionName\030\n \001(\t\022\017\n\007p"
    "roName\030\013 \001(\t\022\021\n\tproUserNo\030\014 \001(\t\022)\n\014busin"
    "essTime\030\r \001(\t:\0231970-01-01 00:00:00\022\023\n\013pr"
    "oductName\030\016 \001(\t\022\023\n\013productCode\030\017 \001(\t\022\030\n\020"
    "productSaveMonth\030\020 \001(\005\022\022\n\nstrEndDate\030\021 \001"
    "(\t\022\026\n\016guaranteeYears\030\022 \001(\005\022\027\n\017strVideoEn"
    "dDate\030\023 \001(\t\022\021\n\tdelaydays\030\024 \001(\005\022\020\n\010savefl"
    "ag\030\025 \001(\005\022\017\n\007tipflag\030\026 \001(\005\022\020\n\010markDate\030\027 "
    "\001(\t\022\022\n\ncreditCode\030\030 \001(\t\022\020\n\010strGrade\030\031 \001("
    "\t\022\024\n\014strRisklevel\030\032 \001(\t\022\021\n\tstrBankNo\030\033 \001"
    "(\t\022\023\n\013strBuyMoney\030\034 \001(\t\022\022\n\nstrRemarks\030\035 "
    "\001(\t\022\021\n\tnisUpload\030\036 \001(\005\022\016\n\006nisPay\030\037 \001(\005\022\026"
    "\n\016strCreditPhone\030  \001(\tB<\n(com.hikvision."
    "finance.fms.cms.hpp.centerB\020ClientinputP"
    "roto", 764);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "center/Clientinput.proto", &protobuf_RegisterTypes);
  Clientinput::default_instance_ = new Clientinput();
  Clientinput::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_center_2fClientinput_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_center_2fClientinput_2eproto {
  StaticDescriptorInitializer_center_2fClientinput_2eproto() {
    protobuf_AddDesc_center_2fClientinput_2eproto();
  }
} static_descriptor_initializer_center_2fClientinput_2eproto_;


// ===================================================================

const ::std::string Clientinput::_default_businesstime_("1970-01-01 00:00:00");
#ifndef _MSC_VER
const int Clientinput::kIdFieldNumber;
const int Clientinput::kNProIdFieldNumber;
const int Clientinput::kNameFieldNumber;
const int Clientinput::kCreditIdFieldNumber;
const int Clientinput::kStatusFieldNumber;
const int Clientinput::kProductTypeFieldNumber;
const int Clientinput::kInputTimeFieldNumber;
const int Clientinput::kInputUserFieldNumber;
const int Clientinput::kInputRegionIdFieldNumber;
const int Clientinput::kInputRegionNameFieldNumber;
const int Clientinput::kProNameFieldNumber;
const int Clientinput::kProUserNoFieldNumber;
const int Clientinput::kBusinessTimeFieldNumber;
const int Clientinput::kProductNameFieldNumber;
const int Clientinput::kProductCodeFieldNumber;
const int Clientinput::kProductSaveMonthFieldNumber;
const int Clientinput::kStrEndDateFieldNumber;
const int Clientinput::kGuaranteeYearsFieldNumber;
const int Clientinput::kStrVideoEndDateFieldNumber;
const int Clientinput::kDelaydaysFieldNumber;
const int Clientinput::kSaveflagFieldNumber;
const int Clientinput::kTipflagFieldNumber;
const int Clientinput::kMarkDateFieldNumber;
const int Clientinput::kCreditCodeFieldNumber;
const int Clientinput::kStrGradeFieldNumber;
const int Clientinput::kStrRisklevelFieldNumber;
const int Clientinput::kStrBankNoFieldNumber;
const int Clientinput::kStrBuyMoneyFieldNumber;
const int Clientinput::kStrRemarksFieldNumber;
const int Clientinput::kNisUploadFieldNumber;
const int Clientinput::kNisPayFieldNumber;
const int Clientinput::kStrCreditPhoneFieldNumber;
#endif  // !_MSC_VER

Clientinput::Clientinput()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Clientinput::InitAsDefaultInstance() {
}

Clientinput::Clientinput(const Clientinput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Clientinput::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  nproid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creditid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  status_ = 0;
  producttype_ = 0;
  inputtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inputuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inputregionid_ = 0;
  inputregionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  proname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  prouserno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  businesstime_ = const_cast< ::std::string*>(&_default_businesstime_);
  productname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  productcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  productsavemonth_ = 0;
  strenddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  guaranteeyears_ = 0;
  strvideoenddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  delaydays_ = 0;
  saveflag_ = 0;
  tipflag_ = 0;
  markdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creditcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strgrade_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrisklevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbankno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbuymoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strremarks_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nisupload_ = 0;
  nispay_ = 0;
  strcreditphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Clientinput::~Clientinput() {
  SharedDtor();
}

void Clientinput::SharedDtor() {
  if (nproid_ != &::google::protobuf::internal::kEmptyString) {
    delete nproid_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (creditid_ != &::google::protobuf::internal::kEmptyString) {
    delete creditid_;
  }
  if (inputtime_ != &::google::protobuf::internal::kEmptyString) {
    delete inputtime_;
  }
  if (inputuser_ != &::google::protobuf::internal::kEmptyString) {
    delete inputuser_;
  }
  if (inputregionname_ != &::google::protobuf::internal::kEmptyString) {
    delete inputregionname_;
  }
  if (proname_ != &::google::protobuf::internal::kEmptyString) {
    delete proname_;
  }
  if (prouserno_ != &::google::protobuf::internal::kEmptyString) {
    delete prouserno_;
  }
  if (businesstime_ != &_default_businesstime_) {
    delete businesstime_;
  }
  if (productname_ != &::google::protobuf::internal::kEmptyString) {
    delete productname_;
  }
  if (productcode_ != &::google::protobuf::internal::kEmptyString) {
    delete productcode_;
  }
  if (strenddate_ != &::google::protobuf::internal::kEmptyString) {
    delete strenddate_;
  }
  if (strvideoenddate_ != &::google::protobuf::internal::kEmptyString) {
    delete strvideoenddate_;
  }
  if (markdate_ != &::google::protobuf::internal::kEmptyString) {
    delete markdate_;
  }
  if (creditcode_ != &::google::protobuf::internal::kEmptyString) {
    delete creditcode_;
  }
  if (strgrade_ != &::google::protobuf::internal::kEmptyString) {
    delete strgrade_;
  }
  if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
    delete strrisklevel_;
  }
  if (strbankno_ != &::google::protobuf::internal::kEmptyString) {
    delete strbankno_;
  }
  if (strbuymoney_ != &::google::protobuf::internal::kEmptyString) {
    delete strbuymoney_;
  }
  if (strremarks_ != &::google::protobuf::internal::kEmptyString) {
    delete strremarks_;
  }
  if (strcreditphone_ != &::google::protobuf::internal::kEmptyString) {
    delete strcreditphone_;
  }
  if (this != default_instance_) {
  }
}

void Clientinput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Clientinput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Clientinput_descriptor_;
}

const Clientinput& Clientinput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_center_2fClientinput_2eproto();  return *default_instance_;
}

Clientinput* Clientinput::default_instance_ = NULL;

Clientinput* Clientinput::New() const {
  return new Clientinput;
}

void Clientinput::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_nproid()) {
      if (nproid_ != &::google::protobuf::internal::kEmptyString) {
        nproid_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_creditid()) {
      if (creditid_ != &::google::protobuf::internal::kEmptyString) {
        creditid_->clear();
      }
    }
    status_ = 0;
    producttype_ = 0;
    if (has_inputtime()) {
      if (inputtime_ != &::google::protobuf::internal::kEmptyString) {
        inputtime_->clear();
      }
    }
    if (has_inputuser()) {
      if (inputuser_ != &::google::protobuf::internal::kEmptyString) {
        inputuser_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    inputregionid_ = 0;
    if (has_inputregionname()) {
      if (inputregionname_ != &::google::protobuf::internal::kEmptyString) {
        inputregionname_->clear();
      }
    }
    if (has_proname()) {
      if (proname_ != &::google::protobuf::internal::kEmptyString) {
        proname_->clear();
      }
    }
    if (has_prouserno()) {
      if (prouserno_ != &::google::protobuf::internal::kEmptyString) {
        prouserno_->clear();
      }
    }
    if (has_businesstime()) {
      if (businesstime_ != &_default_businesstime_) {
        businesstime_->assign(_default_businesstime_);
      }
    }
    if (has_productname()) {
      if (productname_ != &::google::protobuf::internal::kEmptyString) {
        productname_->clear();
      }
    }
    if (has_productcode()) {
      if (productcode_ != &::google::protobuf::internal::kEmptyString) {
        productcode_->clear();
      }
    }
    productsavemonth_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_strenddate()) {
      if (strenddate_ != &::google::protobuf::internal::kEmptyString) {
        strenddate_->clear();
      }
    }
    guaranteeyears_ = 0;
    if (has_strvideoenddate()) {
      if (strvideoenddate_ != &::google::protobuf::internal::kEmptyString) {
        strvideoenddate_->clear();
      }
    }
    delaydays_ = 0;
    saveflag_ = 0;
    tipflag_ = 0;
    if (has_markdate()) {
      if (markdate_ != &::google::protobuf::internal::kEmptyString) {
        markdate_->clear();
      }
    }
    if (has_creditcode()) {
      if (creditcode_ != &::google::protobuf::internal::kEmptyString) {
        creditcode_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_strgrade()) {
      if (strgrade_ != &::google::protobuf::internal::kEmptyString) {
        strgrade_->clear();
      }
    }
    if (has_strrisklevel()) {
      if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
        strrisklevel_->clear();
      }
    }
    if (has_strbankno()) {
      if (strbankno_ != &::google::protobuf::internal::kEmptyString) {
        strbankno_->clear();
      }
    }
    if (has_strbuymoney()) {
      if (strbuymoney_ != &::google::protobuf::internal::kEmptyString) {
        strbuymoney_->clear();
      }
    }
    if (has_strremarks()) {
      if (strremarks_ != &::google::protobuf::internal::kEmptyString) {
        strremarks_->clear();
      }
    }
    nisupload_ = 0;
    nispay_ = 0;
    if (has_strcreditphone()) {
      if (strcreditphone_ != &::google::protobuf::internal::kEmptyString) {
        strcreditphone_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Clientinput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_nProId;
        break;
      }
      
      // optional string nProId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nProId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nproid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nproid().data(), this->nproid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }
      
      // optional string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_creditId;
        break;
      }
      
      // optional string creditId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creditId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creditid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creditid().data(), this->creditid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }
      
      // optional int32 status = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_productType;
        break;
      }
      
      // optional int32 productType = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_productType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttype_)));
          set_has_producttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_inputTime;
        break;
      }
      
      // optional string inputTime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inputTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inputtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inputtime().data(), this->inputtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_inputUser;
        break;
      }
      
      // optional string inputUser = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inputUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inputuser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inputuser().data(), this->inputuser().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_inputRegionId;
        break;
      }
      
      // optional int32 inputRegionId = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inputRegionId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inputregionid_)));
          set_has_inputregionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_inputRegionName;
        break;
      }
      
      // optional string inputRegionName = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inputRegionName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inputregionname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inputregionname().data(), this->inputregionname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_proName;
        break;
      }
      
      // optional string proName = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_proName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->proname().data(), this->proname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_proUserNo;
        break;
      }
      
      // optional string proUserNo = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_proUserNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prouserno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->prouserno().data(), this->prouserno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_businessTime;
        break;
      }
      
      // optional string businessTime = 13 [default = "1970-01-01 00:00:00"];
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_businessTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_businesstime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->businesstime().data(), this->businesstime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_productName;
        break;
      }
      
      // optional string productName = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_productName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->productname().data(), this->productname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_productCode;
        break;
      }
      
      // optional string productCode = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_productCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->productcode().data(), this->productcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_productSaveMonth;
        break;
      }
      
      // optional int32 productSaveMonth = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_productSaveMonth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &productsavemonth_)));
          set_has_productsavemonth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_strEndDate;
        break;
      }
      
      // optional string strEndDate = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_guaranteeYears;
        break;
      }
      
      // optional int32 guaranteeYears = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guaranteeYears:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guaranteeyears_)));
          set_has_guaranteeyears();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_strVideoEndDate;
        break;
      }
      
      // optional string strVideoEndDate = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strVideoEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvideoenddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strvideoenddate().data(), this->strvideoenddate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_delaydays;
        break;
      }
      
      // optional int32 delaydays = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_delaydays:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaydays_)));
          set_has_delaydays();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_saveflag;
        break;
      }
      
      // optional int32 saveflag = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_saveflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &saveflag_)));
          set_has_saveflag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_tipflag;
        break;
      }
      
      // optional int32 tipflag = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tipflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tipflag_)));
          set_has_tipflag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_markDate;
        break;
      }
      
      // optional string markDate = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_markDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_markdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->markdate().data(), this->markdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_creditCode;
        break;
      }
      
      // optional string creditCode = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creditCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creditcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creditcode().data(), this->creditcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_strGrade;
        break;
      }
      
      // optional string strGrade = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strGrade:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strgrade()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strgrade().data(), this->strgrade().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_strRisklevel;
        break;
      }
      
      // optional string strRisklevel = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRisklevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrisklevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrisklevel().data(), this->strrisklevel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_strBankNo;
        break;
      }
      
      // optional string strBankNo = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBankNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbankno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbankno().data(), this->strbankno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_strBuyMoney;
        break;
      }
      
      // optional string strBuyMoney = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBuyMoney:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbuymoney()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbuymoney().data(), this->strbuymoney().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_strRemarks;
        break;
      }
      
      // optional string strRemarks = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRemarks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strremarks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strremarks().data(), this->strremarks().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_nisUpload;
        break;
      }
      
      // optional int32 nisUpload = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nisUpload:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nisupload_)));
          set_has_nisupload();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_nisPay;
        break;
      }
      
      // optional int32 nisPay = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nisPay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nispay_)));
          set_has_nispay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_strCreditPhone;
        break;
      }
      
      // optional string strCreditPhone = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCreditPhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreditphone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcreditphone().data(), this->strcreditphone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Clientinput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional string nProId = 2;
  if (has_nproid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nproid().data(), this->nproid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nproid(), output);
  }
  
  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }
  
  // optional string creditId = 4;
  if (has_creditid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creditid().data(), this->creditid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->creditid(), output);
  }
  
  // optional int32 status = 5;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->status(), output);
  }
  
  // optional int32 productType = 6;
  if (has_producttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->producttype(), output);
  }
  
  // optional string inputTime = 7;
  if (has_inputtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inputtime().data(), this->inputtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->inputtime(), output);
  }
  
  // optional string inputUser = 8;
  if (has_inputuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inputuser().data(), this->inputuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->inputuser(), output);
  }
  
  // optional int32 inputRegionId = 9;
  if (has_inputregionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->inputregionid(), output);
  }
  
  // optional string inputRegionName = 10;
  if (has_inputregionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inputregionname().data(), this->inputregionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->inputregionname(), output);
  }
  
  // optional string proName = 11;
  if (has_proname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->proname().data(), this->proname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->proname(), output);
  }
  
  // optional string proUserNo = 12;
  if (has_prouserno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->prouserno().data(), this->prouserno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->prouserno(), output);
  }
  
  // optional string businessTime = 13 [default = "1970-01-01 00:00:00"];
  if (has_businesstime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->businesstime().data(), this->businesstime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->businesstime(), output);
  }
  
  // optional string productName = 14;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->productname(), output);
  }
  
  // optional string productCode = 15;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->productcode(), output);
  }
  
  // optional int32 productSaveMonth = 16;
  if (has_productsavemonth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->productsavemonth(), output);
  }
  
  // optional string strEndDate = 17;
  if (has_strenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->strenddate(), output);
  }
  
  // optional int32 guaranteeYears = 18;
  if (has_guaranteeyears()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->guaranteeyears(), output);
  }
  
  // optional string strVideoEndDate = 19;
  if (has_strvideoenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvideoenddate().data(), this->strvideoenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->strvideoenddate(), output);
  }
  
  // optional int32 delaydays = 20;
  if (has_delaydays()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->delaydays(), output);
  }
  
  // optional int32 saveflag = 21;
  if (has_saveflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->saveflag(), output);
  }
  
  // optional int32 tipflag = 22;
  if (has_tipflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->tipflag(), output);
  }
  
  // optional string markDate = 23;
  if (has_markdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->markdate().data(), this->markdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->markdate(), output);
  }
  
  // optional string creditCode = 24;
  if (has_creditcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creditcode().data(), this->creditcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->creditcode(), output);
  }
  
  // optional string strGrade = 25;
  if (has_strgrade()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strgrade().data(), this->strgrade().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->strgrade(), output);
  }
  
  // optional string strRisklevel = 26;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->strrisklevel(), output);
  }
  
  // optional string strBankNo = 27;
  if (has_strbankno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbankno().data(), this->strbankno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->strbankno(), output);
  }
  
  // optional string strBuyMoney = 28;
  if (has_strbuymoney()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbuymoney().data(), this->strbuymoney().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->strbuymoney(), output);
  }
  
  // optional string strRemarks = 29;
  if (has_strremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strremarks().data(), this->strremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->strremarks(), output);
  }
  
  // optional int32 nisUpload = 30;
  if (has_nisupload()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->nisupload(), output);
  }
  
  // optional int32 nisPay = 31;
  if (has_nispay()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->nispay(), output);
  }
  
  // optional string strCreditPhone = 32;
  if (has_strcreditphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcreditphone().data(), this->strcreditphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      32, this->strcreditphone(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Clientinput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional string nProId = 2;
  if (has_nproid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nproid().data(), this->nproid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nproid(), target);
  }
  
  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }
  
  // optional string creditId = 4;
  if (has_creditid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creditid().data(), this->creditid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->creditid(), target);
  }
  
  // optional int32 status = 5;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->status(), target);
  }
  
  // optional int32 productType = 6;
  if (has_producttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->producttype(), target);
  }
  
  // optional string inputTime = 7;
  if (has_inputtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inputtime().data(), this->inputtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->inputtime(), target);
  }
  
  // optional string inputUser = 8;
  if (has_inputuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inputuser().data(), this->inputuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->inputuser(), target);
  }
  
  // optional int32 inputRegionId = 9;
  if (has_inputregionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->inputregionid(), target);
  }
  
  // optional string inputRegionName = 10;
  if (has_inputregionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inputregionname().data(), this->inputregionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->inputregionname(), target);
  }
  
  // optional string proName = 11;
  if (has_proname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->proname().data(), this->proname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->proname(), target);
  }
  
  // optional string proUserNo = 12;
  if (has_prouserno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->prouserno().data(), this->prouserno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->prouserno(), target);
  }
  
  // optional string businessTime = 13 [default = "1970-01-01 00:00:00"];
  if (has_businesstime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->businesstime().data(), this->businesstime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->businesstime(), target);
  }
  
  // optional string productName = 14;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->productname(), target);
  }
  
  // optional string productCode = 15;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->productcode(), target);
  }
  
  // optional int32 productSaveMonth = 16;
  if (has_productsavemonth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->productsavemonth(), target);
  }
  
  // optional string strEndDate = 17;
  if (has_strenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->strenddate(), target);
  }
  
  // optional int32 guaranteeYears = 18;
  if (has_guaranteeyears()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->guaranteeyears(), target);
  }
  
  // optional string strVideoEndDate = 19;
  if (has_strvideoenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvideoenddate().data(), this->strvideoenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strvideoenddate(), target);
  }
  
  // optional int32 delaydays = 20;
  if (has_delaydays()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->delaydays(), target);
  }
  
  // optional int32 saveflag = 21;
  if (has_saveflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->saveflag(), target);
  }
  
  // optional int32 tipflag = 22;
  if (has_tipflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->tipflag(), target);
  }
  
  // optional string markDate = 23;
  if (has_markdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->markdate().data(), this->markdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->markdate(), target);
  }
  
  // optional string creditCode = 24;
  if (has_creditcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creditcode().data(), this->creditcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->creditcode(), target);
  }
  
  // optional string strGrade = 25;
  if (has_strgrade()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strgrade().data(), this->strgrade().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->strgrade(), target);
  }
  
  // optional string strRisklevel = 26;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->strrisklevel(), target);
  }
  
  // optional string strBankNo = 27;
  if (has_strbankno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbankno().data(), this->strbankno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->strbankno(), target);
  }
  
  // optional string strBuyMoney = 28;
  if (has_strbuymoney()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbuymoney().data(), this->strbuymoney().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->strbuymoney(), target);
  }
  
  // optional string strRemarks = 29;
  if (has_strremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strremarks().data(), this->strremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->strremarks(), target);
  }
  
  // optional int32 nisUpload = 30;
  if (has_nisupload()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->nisupload(), target);
  }
  
  // optional int32 nisPay = 31;
  if (has_nispay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->nispay(), target);
  }
  
  // optional string strCreditPhone = 32;
  if (has_strcreditphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcreditphone().data(), this->strcreditphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->strcreditphone(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Clientinput::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional string nProId = 2;
    if (has_nproid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nproid());
    }
    
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string creditId = 4;
    if (has_creditid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creditid());
    }
    
    // optional int32 status = 5;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 productType = 6;
    if (has_producttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->producttype());
    }
    
    // optional string inputTime = 7;
    if (has_inputtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inputtime());
    }
    
    // optional string inputUser = 8;
    if (has_inputuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inputuser());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 inputRegionId = 9;
    if (has_inputregionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inputregionid());
    }
    
    // optional string inputRegionName = 10;
    if (has_inputregionname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inputregionname());
    }
    
    // optional string proName = 11;
    if (has_proname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->proname());
    }
    
    // optional string proUserNo = 12;
    if (has_prouserno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prouserno());
    }
    
    // optional string businessTime = 13 [default = "1970-01-01 00:00:00"];
    if (has_businesstime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->businesstime());
    }
    
    // optional string productName = 14;
    if (has_productname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productname());
    }
    
    // optional string productCode = 15;
    if (has_productcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productcode());
    }
    
    // optional int32 productSaveMonth = 16;
    if (has_productsavemonth()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->productsavemonth());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string strEndDate = 17;
    if (has_strenddate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strenddate());
    }
    
    // optional int32 guaranteeYears = 18;
    if (has_guaranteeyears()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guaranteeyears());
    }
    
    // optional string strVideoEndDate = 19;
    if (has_strvideoenddate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strvideoenddate());
    }
    
    // optional int32 delaydays = 20;
    if (has_delaydays()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaydays());
    }
    
    // optional int32 saveflag = 21;
    if (has_saveflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->saveflag());
    }
    
    // optional int32 tipflag = 22;
    if (has_tipflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tipflag());
    }
    
    // optional string markDate = 23;
    if (has_markdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->markdate());
    }
    
    // optional string creditCode = 24;
    if (has_creditcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creditcode());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string strGrade = 25;
    if (has_strgrade()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strgrade());
    }
    
    // optional string strRisklevel = 26;
    if (has_strrisklevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrisklevel());
    }
    
    // optional string strBankNo = 27;
    if (has_strbankno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbankno());
    }
    
    // optional string strBuyMoney = 28;
    if (has_strbuymoney()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbuymoney());
    }
    
    // optional string strRemarks = 29;
    if (has_strremarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strremarks());
    }
    
    // optional int32 nisUpload = 30;
    if (has_nisupload()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nisupload());
    }
    
    // optional int32 nisPay = 31;
    if (has_nispay()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nispay());
    }
    
    // optional string strCreditPhone = 32;
    if (has_strcreditphone()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcreditphone());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Clientinput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Clientinput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Clientinput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Clientinput::MergeFrom(const Clientinput& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_nproid()) {
      set_nproid(from.nproid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_creditid()) {
      set_creditid(from.creditid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_producttype()) {
      set_producttype(from.producttype());
    }
    if (from.has_inputtime()) {
      set_inputtime(from.inputtime());
    }
    if (from.has_inputuser()) {
      set_inputuser(from.inputuser());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_inputregionid()) {
      set_inputregionid(from.inputregionid());
    }
    if (from.has_inputregionname()) {
      set_inputregionname(from.inputregionname());
    }
    if (from.has_proname()) {
      set_proname(from.proname());
    }
    if (from.has_prouserno()) {
      set_prouserno(from.prouserno());
    }
    if (from.has_businesstime()) {
      set_businesstime(from.businesstime());
    }
    if (from.has_productname()) {
      set_productname(from.productname());
    }
    if (from.has_productcode()) {
      set_productcode(from.productcode());
    }
    if (from.has_productsavemonth()) {
      set_productsavemonth(from.productsavemonth());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_strenddate()) {
      set_strenddate(from.strenddate());
    }
    if (from.has_guaranteeyears()) {
      set_guaranteeyears(from.guaranteeyears());
    }
    if (from.has_strvideoenddate()) {
      set_strvideoenddate(from.strvideoenddate());
    }
    if (from.has_delaydays()) {
      set_delaydays(from.delaydays());
    }
    if (from.has_saveflag()) {
      set_saveflag(from.saveflag());
    }
    if (from.has_tipflag()) {
      set_tipflag(from.tipflag());
    }
    if (from.has_markdate()) {
      set_markdate(from.markdate());
    }
    if (from.has_creditcode()) {
      set_creditcode(from.creditcode());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_strgrade()) {
      set_strgrade(from.strgrade());
    }
    if (from.has_strrisklevel()) {
      set_strrisklevel(from.strrisklevel());
    }
    if (from.has_strbankno()) {
      set_strbankno(from.strbankno());
    }
    if (from.has_strbuymoney()) {
      set_strbuymoney(from.strbuymoney());
    }
    if (from.has_strremarks()) {
      set_strremarks(from.strremarks());
    }
    if (from.has_nisupload()) {
      set_nisupload(from.nisupload());
    }
    if (from.has_nispay()) {
      set_nispay(from.nispay());
    }
    if (from.has_strcreditphone()) {
      set_strcreditphone(from.strcreditphone());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Clientinput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Clientinput::CopyFrom(const Clientinput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Clientinput::IsInitialized() const {
  
  return true;
}

void Clientinput::Swap(Clientinput* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(nproid_, other->nproid_);
    std::swap(name_, other->name_);
    std::swap(creditid_, other->creditid_);
    std::swap(status_, other->status_);
    std::swap(producttype_, other->producttype_);
    std::swap(inputtime_, other->inputtime_);
    std::swap(inputuser_, other->inputuser_);
    std::swap(inputregionid_, other->inputregionid_);
    std::swap(inputregionname_, other->inputregionname_);
    std::swap(proname_, other->proname_);
    std::swap(prouserno_, other->prouserno_);
    std::swap(businesstime_, other->businesstime_);
    std::swap(productname_, other->productname_);
    std::swap(productcode_, other->productcode_);
    std::swap(productsavemonth_, other->productsavemonth_);
    std::swap(strenddate_, other->strenddate_);
    std::swap(guaranteeyears_, other->guaranteeyears_);
    std::swap(strvideoenddate_, other->strvideoenddate_);
    std::swap(delaydays_, other->delaydays_);
    std::swap(saveflag_, other->saveflag_);
    std::swap(tipflag_, other->tipflag_);
    std::swap(markdate_, other->markdate_);
    std::swap(creditcode_, other->creditcode_);
    std::swap(strgrade_, other->strgrade_);
    std::swap(strrisklevel_, other->strrisklevel_);
    std::swap(strbankno_, other->strbankno_);
    std::swap(strbuymoney_, other->strbuymoney_);
    std::swap(strremarks_, other->strremarks_);
    std::swap(nisupload_, other->nisupload_);
    std::swap(nispay_, other->nispay_);
    std::swap(strcreditphone_, other->strcreditphone_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Clientinput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Clientinput_descriptor_;
  metadata.reflection = Clientinput_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

// @@protoc_insertion_point(global_scope)
