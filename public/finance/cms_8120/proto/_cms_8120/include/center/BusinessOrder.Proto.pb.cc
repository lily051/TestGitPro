// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "center/BusinessOrder.Proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cms_8120 {

namespace {

const ::google::protobuf::Descriptor* BusinessOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusinessOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusinessOrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusinessOrderInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_center_2fBusinessOrder_2eProto() {
  protobuf_AddDesc_center_2fBusinessOrder_2eProto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "center/BusinessOrder.Proto");
  GOOGLE_CHECK(file != NULL);
  BusinessOrder_descriptor_ = file->message_type(0);
  static const int BusinessOrder_offsets_[28] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, inputregionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, nuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, producttypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, creditcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, nproid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, businesstime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, customername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, creditid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, producttypename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, productname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, productcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, strenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, guaranteeyears_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, productsavemonth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, strgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, strrisklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, strbankno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, strbuymoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, strcreditphone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, strremarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, compreason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, complaintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, proname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, prouserno_),
  };
  BusinessOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusinessOrder_descriptor_,
      BusinessOrder::default_instance_,
      BusinessOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusinessOrder));
  BusinessOrderInfo_descriptor_ = file->message_type(1);
  static const int BusinessOrderInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrderInfo, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrderInfo, businessorder_),
  };
  BusinessOrderInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusinessOrderInfo_descriptor_,
      BusinessOrderInfo::default_instance_,
      BusinessOrderInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrderInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessOrderInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusinessOrderInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_center_2fBusinessOrder_2eProto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusinessOrder_descriptor_, &BusinessOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusinessOrderInfo_descriptor_, &BusinessOrderInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_center_2fBusinessOrder_2eProto() {
  delete BusinessOrder::default_instance_;
  delete BusinessOrder_reflection_;
  delete BusinessOrderInfo::default_instance_;
  delete BusinessOrderInfo_reflection_;
}

void protobuf_AddDesc_center_2fBusinessOrder_2eProto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032center/BusinessOrder.Proto\022\010cms_8120\"\304"
    "\004\n\rBusinessOrder\022\n\n\002id\030\001 \001(\005\022\025\n\rinputReg"
    "ionId\030\002 \001(\005\022\017\n\007nUserId\030\003 \001(\005\022\020\n\010clientId"
    "\030\004 \001(\005\022\025\n\rproductTypeId\030\005 \001(\005\022\021\n\tproduct"
    "Id\030\006 \001(\005\022\022\n\ncreditCode\030\007 \001(\005\022\016\n\006status\030\010"
    " \001(\005\022\016\n\006nProId\030\t \001(\t\022\024\n\014businessTime\030\n \001"
    "(\t\022\024\n\014customerName\030\013 \001(\t\022\020\n\010creditId\030\014 \001"
    "(\t\022\027\n\017productTypeName\030\r \001(\005\022\023\n\013productNa"
    "me\030\016 \001(\t\022\023\n\013productCode\030\017 \001(\t\022\022\n\nstrEndD"
    "ate\030\020 \001(\t\022\026\n\016guaranteeYears\030\021 \001(\005\022\030\n\020pro"
    "ductSaveMonth\030\022 \001(\005\022\020\n\010strGrade\030\023 \001(\t\022\024\n"
    "\014strRisklevel\030\024 \001(\t\022\021\n\tstrBankNo\030\025 \001(\t\022\023"
    "\n\013strBuyMoney\030\026 \001(\t\022\026\n\016strCreditPhone\030\027 "
    "\001(\t\022\022\n\nstrRemarks\030! \001(\t\022\022\n\ncompReason\030\" "
    "\001(\t\022\024\n\014complainTime\030# \001(\t\022\017\n\007proName\030$ \001"
    "(\t\022\021\n\tproUserNo\030% \001(\t\"P\n\021BusinessOrderIn"
    "fo\022\013\n\003cmd\030\001 \001(\005\022.\n\rbusinessOrder\030\002 \001(\0132\027"
    ".cms_8120.BusinessOrderB>\n(com.hikvision"
    ".finance.fms.cms.hpp.centerB\022BusinessOrd"
    "erProto", 767);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "center/BusinessOrder.Proto", &protobuf_RegisterTypes);
  BusinessOrder::default_instance_ = new BusinessOrder();
  BusinessOrderInfo::default_instance_ = new BusinessOrderInfo();
  BusinessOrder::default_instance_->InitAsDefaultInstance();
  BusinessOrderInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_center_2fBusinessOrder_2eProto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_center_2fBusinessOrder_2eProto {
  StaticDescriptorInitializer_center_2fBusinessOrder_2eProto() {
    protobuf_AddDesc_center_2fBusinessOrder_2eProto();
  }
} static_descriptor_initializer_center_2fBusinessOrder_2eProto_;


// ===================================================================

#ifndef _MSC_VER
const int BusinessOrder::kIdFieldNumber;
const int BusinessOrder::kInputRegionIdFieldNumber;
const int BusinessOrder::kNUserIdFieldNumber;
const int BusinessOrder::kClientIdFieldNumber;
const int BusinessOrder::kProductTypeIdFieldNumber;
const int BusinessOrder::kProductIdFieldNumber;
const int BusinessOrder::kCreditCodeFieldNumber;
const int BusinessOrder::kStatusFieldNumber;
const int BusinessOrder::kNProIdFieldNumber;
const int BusinessOrder::kBusinessTimeFieldNumber;
const int BusinessOrder::kCustomerNameFieldNumber;
const int BusinessOrder::kCreditIdFieldNumber;
const int BusinessOrder::kProductTypeNameFieldNumber;
const int BusinessOrder::kProductNameFieldNumber;
const int BusinessOrder::kProductCodeFieldNumber;
const int BusinessOrder::kStrEndDateFieldNumber;
const int BusinessOrder::kGuaranteeYearsFieldNumber;
const int BusinessOrder::kProductSaveMonthFieldNumber;
const int BusinessOrder::kStrGradeFieldNumber;
const int BusinessOrder::kStrRisklevelFieldNumber;
const int BusinessOrder::kStrBankNoFieldNumber;
const int BusinessOrder::kStrBuyMoneyFieldNumber;
const int BusinessOrder::kStrCreditPhoneFieldNumber;
const int BusinessOrder::kStrRemarksFieldNumber;
const int BusinessOrder::kCompReasonFieldNumber;
const int BusinessOrder::kComplainTimeFieldNumber;
const int BusinessOrder::kProNameFieldNumber;
const int BusinessOrder::kProUserNoFieldNumber;
#endif  // !_MSC_VER

BusinessOrder::BusinessOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BusinessOrder::InitAsDefaultInstance() {
}

BusinessOrder::BusinessOrder(const BusinessOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BusinessOrder::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  inputregionid_ = 0;
  nuserid_ = 0;
  clientid_ = 0;
  producttypeid_ = 0;
  productid_ = 0;
  creditcode_ = 0;
  status_ = 0;
  nproid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  businesstime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creditid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  producttypename_ = 0;
  productname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  productcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strenddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  guaranteeyears_ = 0;
  productsavemonth_ = 0;
  strgrade_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrisklevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbankno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbuymoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcreditphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strremarks_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  compreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  complaintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  proname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  prouserno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusinessOrder::~BusinessOrder() {
  SharedDtor();
}

void BusinessOrder::SharedDtor() {
  if (nproid_ != &::google::protobuf::internal::kEmptyString) {
    delete nproid_;
  }
  if (businesstime_ != &::google::protobuf::internal::kEmptyString) {
    delete businesstime_;
  }
  if (customername_ != &::google::protobuf::internal::kEmptyString) {
    delete customername_;
  }
  if (creditid_ != &::google::protobuf::internal::kEmptyString) {
    delete creditid_;
  }
  if (productname_ != &::google::protobuf::internal::kEmptyString) {
    delete productname_;
  }
  if (productcode_ != &::google::protobuf::internal::kEmptyString) {
    delete productcode_;
  }
  if (strenddate_ != &::google::protobuf::internal::kEmptyString) {
    delete strenddate_;
  }
  if (strgrade_ != &::google::protobuf::internal::kEmptyString) {
    delete strgrade_;
  }
  if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
    delete strrisklevel_;
  }
  if (strbankno_ != &::google::protobuf::internal::kEmptyString) {
    delete strbankno_;
  }
  if (strbuymoney_ != &::google::protobuf::internal::kEmptyString) {
    delete strbuymoney_;
  }
  if (strcreditphone_ != &::google::protobuf::internal::kEmptyString) {
    delete strcreditphone_;
  }
  if (strremarks_ != &::google::protobuf::internal::kEmptyString) {
    delete strremarks_;
  }
  if (compreason_ != &::google::protobuf::internal::kEmptyString) {
    delete compreason_;
  }
  if (complaintime_ != &::google::protobuf::internal::kEmptyString) {
    delete complaintime_;
  }
  if (proname_ != &::google::protobuf::internal::kEmptyString) {
    delete proname_;
  }
  if (prouserno_ != &::google::protobuf::internal::kEmptyString) {
    delete prouserno_;
  }
  if (this != default_instance_) {
  }
}

void BusinessOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusinessOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusinessOrder_descriptor_;
}

const BusinessOrder& BusinessOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_center_2fBusinessOrder_2eProto();  return *default_instance_;
}

BusinessOrder* BusinessOrder::default_instance_ = NULL;

BusinessOrder* BusinessOrder::New() const {
  return new BusinessOrder;
}

void BusinessOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    inputregionid_ = 0;
    nuserid_ = 0;
    clientid_ = 0;
    producttypeid_ = 0;
    productid_ = 0;
    creditcode_ = 0;
    status_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_nproid()) {
      if (nproid_ != &::google::protobuf::internal::kEmptyString) {
        nproid_->clear();
      }
    }
    if (has_businesstime()) {
      if (businesstime_ != &::google::protobuf::internal::kEmptyString) {
        businesstime_->clear();
      }
    }
    if (has_customername()) {
      if (customername_ != &::google::protobuf::internal::kEmptyString) {
        customername_->clear();
      }
    }
    if (has_creditid()) {
      if (creditid_ != &::google::protobuf::internal::kEmptyString) {
        creditid_->clear();
      }
    }
    producttypename_ = 0;
    if (has_productname()) {
      if (productname_ != &::google::protobuf::internal::kEmptyString) {
        productname_->clear();
      }
    }
    if (has_productcode()) {
      if (productcode_ != &::google::protobuf::internal::kEmptyString) {
        productcode_->clear();
      }
    }
    if (has_strenddate()) {
      if (strenddate_ != &::google::protobuf::internal::kEmptyString) {
        strenddate_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    guaranteeyears_ = 0;
    productsavemonth_ = 0;
    if (has_strgrade()) {
      if (strgrade_ != &::google::protobuf::internal::kEmptyString) {
        strgrade_->clear();
      }
    }
    if (has_strrisklevel()) {
      if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
        strrisklevel_->clear();
      }
    }
    if (has_strbankno()) {
      if (strbankno_ != &::google::protobuf::internal::kEmptyString) {
        strbankno_->clear();
      }
    }
    if (has_strbuymoney()) {
      if (strbuymoney_ != &::google::protobuf::internal::kEmptyString) {
        strbuymoney_->clear();
      }
    }
    if (has_strcreditphone()) {
      if (strcreditphone_ != &::google::protobuf::internal::kEmptyString) {
        strcreditphone_->clear();
      }
    }
    if (has_strremarks()) {
      if (strremarks_ != &::google::protobuf::internal::kEmptyString) {
        strremarks_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_compreason()) {
      if (compreason_ != &::google::protobuf::internal::kEmptyString) {
        compreason_->clear();
      }
    }
    if (has_complaintime()) {
      if (complaintime_ != &::google::protobuf::internal::kEmptyString) {
        complaintime_->clear();
      }
    }
    if (has_proname()) {
      if (proname_ != &::google::protobuf::internal::kEmptyString) {
        proname_->clear();
      }
    }
    if (has_prouserno()) {
      if (prouserno_ != &::google::protobuf::internal::kEmptyString) {
        prouserno_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusinessOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_inputRegionId;
        break;
      }
      
      // optional int32 inputRegionId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inputRegionId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inputregionid_)));
          set_has_inputregionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nUserId;
        break;
      }
      
      // optional int32 nUserId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nUserId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nuserid_)));
          set_has_nuserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_clientId;
        break;
      }
      
      // optional int32 clientId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clientId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
          set_has_clientid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_productTypeId;
        break;
      }
      
      // optional int32 productTypeId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_productTypeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttypeid_)));
          set_has_producttypeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_productId;
        break;
      }
      
      // optional int32 productId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_productId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_creditCode;
        break;
      }
      
      // optional int32 creditCode = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_creditCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &creditcode_)));
          set_has_creditcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_status;
        break;
      }
      
      // optional int32 status = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_nProId;
        break;
      }
      
      // optional string nProId = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nProId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nproid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nproid().data(), this->nproid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_businessTime;
        break;
      }
      
      // optional string businessTime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_businessTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_businesstime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->businesstime().data(), this->businesstime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_customerName;
        break;
      }
      
      // optional string customerName = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_customerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customername().data(), this->customername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_creditId;
        break;
      }
      
      // optional string creditId = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creditId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creditid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creditid().data(), this->creditid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_productTypeName;
        break;
      }
      
      // optional int32 productTypeName = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_productTypeName:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttypename_)));
          set_has_producttypename();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_productName;
        break;
      }
      
      // optional string productName = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_productName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->productname().data(), this->productname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_productCode;
        break;
      }
      
      // optional string productCode = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_productCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->productcode().data(), this->productcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_strEndDate;
        break;
      }
      
      // optional string strEndDate = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strenddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strenddate().data(), this->strenddate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_guaranteeYears;
        break;
      }
      
      // optional int32 guaranteeYears = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guaranteeYears:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guaranteeyears_)));
          set_has_guaranteeyears();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_productSaveMonth;
        break;
      }
      
      // optional int32 productSaveMonth = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_productSaveMonth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &productsavemonth_)));
          set_has_productsavemonth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_strGrade;
        break;
      }
      
      // optional string strGrade = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strGrade:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strgrade()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strgrade().data(), this->strgrade().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_strRisklevel;
        break;
      }
      
      // optional string strRisklevel = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRisklevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrisklevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrisklevel().data(), this->strrisklevel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_strBankNo;
        break;
      }
      
      // optional string strBankNo = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBankNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbankno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbankno().data(), this->strbankno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_strBuyMoney;
        break;
      }
      
      // optional string strBuyMoney = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBuyMoney:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbuymoney()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbuymoney().data(), this->strbuymoney().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_strCreditPhone;
        break;
      }
      
      // optional string strCreditPhone = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCreditPhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcreditphone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcreditphone().data(), this->strcreditphone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_strRemarks;
        break;
      }
      
      // optional string strRemarks = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRemarks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strremarks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strremarks().data(), this->strremarks().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_compReason;
        break;
      }
      
      // optional string compReason = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compReason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compreason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->compreason().data(), this->compreason().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(282)) goto parse_complainTime;
        break;
      }
      
      // optional string complainTime = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_complainTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_complaintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->complaintime().data(), this->complaintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_proName;
        break;
      }
      
      // optional string proName = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_proName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->proname().data(), this->proname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_proUserNo;
        break;
      }
      
      // optional string proUserNo = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_proUserNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prouserno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->prouserno().data(), this->prouserno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BusinessOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 inputRegionId = 2;
  if (has_inputregionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->inputregionid(), output);
  }
  
  // optional int32 nUserId = 3;
  if (has_nuserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nuserid(), output);
  }
  
  // optional int32 clientId = 4;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clientid(), output);
  }
  
  // optional int32 productTypeId = 5;
  if (has_producttypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->producttypeid(), output);
  }
  
  // optional int32 productId = 6;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->productid(), output);
  }
  
  // optional int32 creditCode = 7;
  if (has_creditcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->creditcode(), output);
  }
  
  // optional int32 status = 8;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->status(), output);
  }
  
  // optional string nProId = 9;
  if (has_nproid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nproid().data(), this->nproid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->nproid(), output);
  }
  
  // optional string businessTime = 10;
  if (has_businesstime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->businesstime().data(), this->businesstime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->businesstime(), output);
  }
  
  // optional string customerName = 11;
  if (has_customername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customername().data(), this->customername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->customername(), output);
  }
  
  // optional string creditId = 12;
  if (has_creditid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creditid().data(), this->creditid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->creditid(), output);
  }
  
  // optional int32 productTypeName = 13;
  if (has_producttypename()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->producttypename(), output);
  }
  
  // optional string productName = 14;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->productname(), output);
  }
  
  // optional string productCode = 15;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->productcode(), output);
  }
  
  // optional string strEndDate = 16;
  if (has_strenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->strenddate(), output);
  }
  
  // optional int32 guaranteeYears = 17;
  if (has_guaranteeyears()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->guaranteeyears(), output);
  }
  
  // optional int32 productSaveMonth = 18;
  if (has_productsavemonth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->productsavemonth(), output);
  }
  
  // optional string strGrade = 19;
  if (has_strgrade()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strgrade().data(), this->strgrade().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->strgrade(), output);
  }
  
  // optional string strRisklevel = 20;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->strrisklevel(), output);
  }
  
  // optional string strBankNo = 21;
  if (has_strbankno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbankno().data(), this->strbankno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->strbankno(), output);
  }
  
  // optional string strBuyMoney = 22;
  if (has_strbuymoney()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbuymoney().data(), this->strbuymoney().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->strbuymoney(), output);
  }
  
  // optional string strCreditPhone = 23;
  if (has_strcreditphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcreditphone().data(), this->strcreditphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->strcreditphone(), output);
  }
  
  // optional string strRemarks = 33;
  if (has_strremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strremarks().data(), this->strremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->strremarks(), output);
  }
  
  // optional string compReason = 34;
  if (has_compreason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->compreason().data(), this->compreason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      34, this->compreason(), output);
  }
  
  // optional string complainTime = 35;
  if (has_complaintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->complaintime().data(), this->complaintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      35, this->complaintime(), output);
  }
  
  // optional string proName = 36;
  if (has_proname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->proname().data(), this->proname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      36, this->proname(), output);
  }
  
  // optional string proUserNo = 37;
  if (has_prouserno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->prouserno().data(), this->prouserno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->prouserno(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BusinessOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 inputRegionId = 2;
  if (has_inputregionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->inputregionid(), target);
  }
  
  // optional int32 nUserId = 3;
  if (has_nuserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nuserid(), target);
  }
  
  // optional int32 clientId = 4;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clientid(), target);
  }
  
  // optional int32 productTypeId = 5;
  if (has_producttypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->producttypeid(), target);
  }
  
  // optional int32 productId = 6;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->productid(), target);
  }
  
  // optional int32 creditCode = 7;
  if (has_creditcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->creditcode(), target);
  }
  
  // optional int32 status = 8;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->status(), target);
  }
  
  // optional string nProId = 9;
  if (has_nproid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nproid().data(), this->nproid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->nproid(), target);
  }
  
  // optional string businessTime = 10;
  if (has_businesstime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->businesstime().data(), this->businesstime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->businesstime(), target);
  }
  
  // optional string customerName = 11;
  if (has_customername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customername().data(), this->customername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->customername(), target);
  }
  
  // optional string creditId = 12;
  if (has_creditid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creditid().data(), this->creditid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->creditid(), target);
  }
  
  // optional int32 productTypeName = 13;
  if (has_producttypename()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->producttypename(), target);
  }
  
  // optional string productName = 14;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->productname(), target);
  }
  
  // optional string productCode = 15;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->productcode(), target);
  }
  
  // optional string strEndDate = 16;
  if (has_strenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strenddate().data(), this->strenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strenddate(), target);
  }
  
  // optional int32 guaranteeYears = 17;
  if (has_guaranteeyears()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->guaranteeyears(), target);
  }
  
  // optional int32 productSaveMonth = 18;
  if (has_productsavemonth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->productsavemonth(), target);
  }
  
  // optional string strGrade = 19;
  if (has_strgrade()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strgrade().data(), this->strgrade().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strgrade(), target);
  }
  
  // optional string strRisklevel = 20;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strrisklevel(), target);
  }
  
  // optional string strBankNo = 21;
  if (has_strbankno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbankno().data(), this->strbankno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->strbankno(), target);
  }
  
  // optional string strBuyMoney = 22;
  if (has_strbuymoney()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbuymoney().data(), this->strbuymoney().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->strbuymoney(), target);
  }
  
  // optional string strCreditPhone = 23;
  if (has_strcreditphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcreditphone().data(), this->strcreditphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->strcreditphone(), target);
  }
  
  // optional string strRemarks = 33;
  if (has_strremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strremarks().data(), this->strremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->strremarks(), target);
  }
  
  // optional string compReason = 34;
  if (has_compreason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->compreason().data(), this->compreason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->compreason(), target);
  }
  
  // optional string complainTime = 35;
  if (has_complaintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->complaintime().data(), this->complaintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->complaintime(), target);
  }
  
  // optional string proName = 36;
  if (has_proname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->proname().data(), this->proname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->proname(), target);
  }
  
  // optional string proUserNo = 37;
  if (has_prouserno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->prouserno().data(), this->prouserno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->prouserno(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BusinessOrder::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 inputRegionId = 2;
    if (has_inputregionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inputregionid());
    }
    
    // optional int32 nUserId = 3;
    if (has_nuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nuserid());
    }
    
    // optional int32 clientId = 4;
    if (has_clientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clientid());
    }
    
    // optional int32 productTypeId = 5;
    if (has_producttypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->producttypeid());
    }
    
    // optional int32 productId = 6;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->productid());
    }
    
    // optional int32 creditCode = 7;
    if (has_creditcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->creditcode());
    }
    
    // optional int32 status = 8;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string nProId = 9;
    if (has_nproid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nproid());
    }
    
    // optional string businessTime = 10;
    if (has_businesstime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->businesstime());
    }
    
    // optional string customerName = 11;
    if (has_customername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customername());
    }
    
    // optional string creditId = 12;
    if (has_creditid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creditid());
    }
    
    // optional int32 productTypeName = 13;
    if (has_producttypename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->producttypename());
    }
    
    // optional string productName = 14;
    if (has_productname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productname());
    }
    
    // optional string productCode = 15;
    if (has_productcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productcode());
    }
    
    // optional string strEndDate = 16;
    if (has_strenddate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strenddate());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 guaranteeYears = 17;
    if (has_guaranteeyears()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guaranteeyears());
    }
    
    // optional int32 productSaveMonth = 18;
    if (has_productsavemonth()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->productsavemonth());
    }
    
    // optional string strGrade = 19;
    if (has_strgrade()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strgrade());
    }
    
    // optional string strRisklevel = 20;
    if (has_strrisklevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrisklevel());
    }
    
    // optional string strBankNo = 21;
    if (has_strbankno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbankno());
    }
    
    // optional string strBuyMoney = 22;
    if (has_strbuymoney()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbuymoney());
    }
    
    // optional string strCreditPhone = 23;
    if (has_strcreditphone()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcreditphone());
    }
    
    // optional string strRemarks = 33;
    if (has_strremarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strremarks());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string compReason = 34;
    if (has_compreason()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compreason());
    }
    
    // optional string complainTime = 35;
    if (has_complaintime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->complaintime());
    }
    
    // optional string proName = 36;
    if (has_proname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->proname());
    }
    
    // optional string proUserNo = 37;
    if (has_prouserno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prouserno());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusinessOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusinessOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusinessOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusinessOrder::MergeFrom(const BusinessOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_inputregionid()) {
      set_inputregionid(from.inputregionid());
    }
    if (from.has_nuserid()) {
      set_nuserid(from.nuserid());
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
    if (from.has_producttypeid()) {
      set_producttypeid(from.producttypeid());
    }
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_creditcode()) {
      set_creditcode(from.creditcode());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_nproid()) {
      set_nproid(from.nproid());
    }
    if (from.has_businesstime()) {
      set_businesstime(from.businesstime());
    }
    if (from.has_customername()) {
      set_customername(from.customername());
    }
    if (from.has_creditid()) {
      set_creditid(from.creditid());
    }
    if (from.has_producttypename()) {
      set_producttypename(from.producttypename());
    }
    if (from.has_productname()) {
      set_productname(from.productname());
    }
    if (from.has_productcode()) {
      set_productcode(from.productcode());
    }
    if (from.has_strenddate()) {
      set_strenddate(from.strenddate());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_guaranteeyears()) {
      set_guaranteeyears(from.guaranteeyears());
    }
    if (from.has_productsavemonth()) {
      set_productsavemonth(from.productsavemonth());
    }
    if (from.has_strgrade()) {
      set_strgrade(from.strgrade());
    }
    if (from.has_strrisklevel()) {
      set_strrisklevel(from.strrisklevel());
    }
    if (from.has_strbankno()) {
      set_strbankno(from.strbankno());
    }
    if (from.has_strbuymoney()) {
      set_strbuymoney(from.strbuymoney());
    }
    if (from.has_strcreditphone()) {
      set_strcreditphone(from.strcreditphone());
    }
    if (from.has_strremarks()) {
      set_strremarks(from.strremarks());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_compreason()) {
      set_compreason(from.compreason());
    }
    if (from.has_complaintime()) {
      set_complaintime(from.complaintime());
    }
    if (from.has_proname()) {
      set_proname(from.proname());
    }
    if (from.has_prouserno()) {
      set_prouserno(from.prouserno());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusinessOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusinessOrder::CopyFrom(const BusinessOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusinessOrder::IsInitialized() const {
  
  return true;
}

void BusinessOrder::Swap(BusinessOrder* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(inputregionid_, other->inputregionid_);
    std::swap(nuserid_, other->nuserid_);
    std::swap(clientid_, other->clientid_);
    std::swap(producttypeid_, other->producttypeid_);
    std::swap(productid_, other->productid_);
    std::swap(creditcode_, other->creditcode_);
    std::swap(status_, other->status_);
    std::swap(nproid_, other->nproid_);
    std::swap(businesstime_, other->businesstime_);
    std::swap(customername_, other->customername_);
    std::swap(creditid_, other->creditid_);
    std::swap(producttypename_, other->producttypename_);
    std::swap(productname_, other->productname_);
    std::swap(productcode_, other->productcode_);
    std::swap(strenddate_, other->strenddate_);
    std::swap(guaranteeyears_, other->guaranteeyears_);
    std::swap(productsavemonth_, other->productsavemonth_);
    std::swap(strgrade_, other->strgrade_);
    std::swap(strrisklevel_, other->strrisklevel_);
    std::swap(strbankno_, other->strbankno_);
    std::swap(strbuymoney_, other->strbuymoney_);
    std::swap(strcreditphone_, other->strcreditphone_);
    std::swap(strremarks_, other->strremarks_);
    std::swap(compreason_, other->compreason_);
    std::swap(complaintime_, other->complaintime_);
    std::swap(proname_, other->proname_);
    std::swap(prouserno_, other->prouserno_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusinessOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusinessOrder_descriptor_;
  metadata.reflection = BusinessOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BusinessOrderInfo::kCmdFieldNumber;
const int BusinessOrderInfo::kBusinessOrderFieldNumber;
#endif  // !_MSC_VER

BusinessOrderInfo::BusinessOrderInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BusinessOrderInfo::InitAsDefaultInstance() {
  businessorder_ = const_cast< ::cms_8120::BusinessOrder*>(&::cms_8120::BusinessOrder::default_instance());
}

BusinessOrderInfo::BusinessOrderInfo(const BusinessOrderInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BusinessOrderInfo::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  businessorder_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusinessOrderInfo::~BusinessOrderInfo() {
  SharedDtor();
}

void BusinessOrderInfo::SharedDtor() {
  if (this != default_instance_) {
    delete businessorder_;
  }
}

void BusinessOrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusinessOrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusinessOrderInfo_descriptor_;
}

const BusinessOrderInfo& BusinessOrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_center_2fBusinessOrder_2eProto();  return *default_instance_;
}

BusinessOrderInfo* BusinessOrderInfo::default_instance_ = NULL;

BusinessOrderInfo* BusinessOrderInfo::New() const {
  return new BusinessOrderInfo;
}

void BusinessOrderInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    if (has_businessorder()) {
      if (businessorder_ != NULL) businessorder_->::cms_8120::BusinessOrder::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusinessOrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_businessOrder;
        break;
      }
      
      // optional .cms_8120.BusinessOrder businessOrder = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_businessOrder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_businessorder()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BusinessOrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }
  
  // optional .cms_8120.BusinessOrder businessOrder = 2;
  if (has_businessorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->businessorder(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BusinessOrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }
  
  // optional .cms_8120.BusinessOrder businessOrder = 2;
  if (has_businessorder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->businessorder(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BusinessOrderInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }
    
    // optional .cms_8120.BusinessOrder businessOrder = 2;
    if (has_businessorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->businessorder());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusinessOrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusinessOrderInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusinessOrderInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusinessOrderInfo::MergeFrom(const BusinessOrderInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_businessorder()) {
      mutable_businessorder()->::cms_8120::BusinessOrder::MergeFrom(from.businessorder());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusinessOrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusinessOrderInfo::CopyFrom(const BusinessOrderInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusinessOrderInfo::IsInitialized() const {
  
  return true;
}

void BusinessOrderInfo::Swap(BusinessOrderInfo* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(businessorder_, other->businessorder_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusinessOrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusinessOrderInfo_descriptor_;
  metadata.reflection = BusinessOrderInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

// @@protoc_insertion_point(global_scope)
