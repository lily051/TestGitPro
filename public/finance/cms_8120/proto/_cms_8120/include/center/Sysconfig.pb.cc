// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "center/Sysconfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cms_8120 {

namespace {

const ::google::protobuf::Descriptor* Sysconfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sysconfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* SysconfigList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SysconfigList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_center_2fSysconfig_2eproto() {
  protobuf_AddDesc_center_2fSysconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "center/Sysconfig.proto");
  GOOGLE_CHECK(file != NULL);
  Sysconfig_descriptor_ = file->message_type(0);
  static const int Sysconfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, nkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, strvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, strcomment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, nenabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, ntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, strdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, strupdatetime_),
  };
  Sysconfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sysconfig_descriptor_,
      Sysconfig::default_instance_,
      Sysconfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sysconfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sysconfig));
  SysconfigList_descriptor_ = file->message_type(1);
  static const int SysconfigList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysconfigList, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysconfigList, sysconfig_),
  };
  SysconfigList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SysconfigList_descriptor_,
      SysconfigList::default_instance_,
      SysconfigList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysconfigList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysconfigList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SysconfigList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_center_2fSysconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sysconfig_descriptor_, &Sysconfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SysconfigList_descriptor_, &SysconfigList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_center_2fSysconfig_2eproto() {
  delete Sysconfig::default_instance_;
  delete Sysconfig_reflection_;
  delete SysconfigList::default_instance_;
  delete SysconfigList_reflection_;
}

void protobuf_AddDesc_center_2fSysconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::cms_8120::protobuf_AddDesc_type_2fcmd_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026center/Sysconfig.proto\022\010cms_8120\032\016type"
    "/cmd.proto\"\230\001\n\tSysconfig\022\n\n\002id\030\001 \001(\005\022\014\n\004"
    "nKey\030\002 \001(\005\022\020\n\010strValue\030\003 \001(\t\022\022\n\nstrComme"
    "nt\030\004 \001(\t\022\020\n\010nEnabled\030\005 \001(\005\022\r\n\005nType\030\006 \001("
    "\005\022\023\n\013strDescribe\030\007 \001(\t\022\025\n\rstrUpdatetime\030"
    "\010 \001(\t\"D\n\rSysconfigList\022\013\n\003cmd\030\001 \001(\005\022&\n\ts"
    "ysconfig\030\002 \003(\0132\023.cms_8120.Sysconfig2c\n\026M"
    "odifySysconfigService\022I\n\031QyerySysconfigS"
    "ervicetime\022\023.cms_8120.Sysconfig\032\027.cms_81"
    "20.SysconfigListB=\n(com.hikvision.financ"
    "e.fms.cms.hpp.centerB\016SysconfigProto\210\001\001", 439);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "center/Sysconfig.proto", &protobuf_RegisterTypes);
  Sysconfig::default_instance_ = new Sysconfig();
  SysconfigList::default_instance_ = new SysconfigList();
  Sysconfig::default_instance_->InitAsDefaultInstance();
  SysconfigList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_center_2fSysconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_center_2fSysconfig_2eproto {
  StaticDescriptorInitializer_center_2fSysconfig_2eproto() {
    protobuf_AddDesc_center_2fSysconfig_2eproto();
  }
} static_descriptor_initializer_center_2fSysconfig_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Sysconfig::kIdFieldNumber;
const int Sysconfig::kNKeyFieldNumber;
const int Sysconfig::kStrValueFieldNumber;
const int Sysconfig::kStrCommentFieldNumber;
const int Sysconfig::kNEnabledFieldNumber;
const int Sysconfig::kNTypeFieldNumber;
const int Sysconfig::kStrDescribeFieldNumber;
const int Sysconfig::kStrUpdatetimeFieldNumber;
#endif  // !_MSC_VER

Sysconfig::Sysconfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sysconfig::InitAsDefaultInstance() {
}

Sysconfig::Sysconfig(const Sysconfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sysconfig::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  nkey_ = 0;
  strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcomment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nenabled_ = 0;
  ntype_ = 0;
  strdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strupdatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sysconfig::~Sysconfig() {
  SharedDtor();
}

void Sysconfig::SharedDtor() {
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete strvalue_;
  }
  if (strcomment_ != &::google::protobuf::internal::kEmptyString) {
    delete strcomment_;
  }
  if (strdescribe_ != &::google::protobuf::internal::kEmptyString) {
    delete strdescribe_;
  }
  if (strupdatetime_ != &::google::protobuf::internal::kEmptyString) {
    delete strupdatetime_;
  }
  if (this != default_instance_) {
  }
}

void Sysconfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sysconfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sysconfig_descriptor_;
}

const Sysconfig& Sysconfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_center_2fSysconfig_2eproto();  return *default_instance_;
}

Sysconfig* Sysconfig::default_instance_ = NULL;

Sysconfig* Sysconfig::New() const {
  return new Sysconfig;
}

void Sysconfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    nkey_ = 0;
    if (has_strvalue()) {
      if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
        strvalue_->clear();
      }
    }
    if (has_strcomment()) {
      if (strcomment_ != &::google::protobuf::internal::kEmptyString) {
        strcomment_->clear();
      }
    }
    nenabled_ = 0;
    ntype_ = 0;
    if (has_strdescribe()) {
      if (strdescribe_ != &::google::protobuf::internal::kEmptyString) {
        strdescribe_->clear();
      }
    }
    if (has_strupdatetime()) {
      if (strupdatetime_ != &::google::protobuf::internal::kEmptyString) {
        strupdatetime_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sysconfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nKey;
        break;
      }
      
      // optional int32 nKey = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nKey:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nkey_)));
          set_has_nkey();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strValue;
        break;
      }
      
      // optional string strValue = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strComment;
        break;
      }
      
      // optional string strComment = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strComment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcomment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcomment().data(), this->strcomment().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_nEnabled;
        break;
      }
      
      // optional int32 nEnabled = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nEnabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nenabled_)));
          set_has_nenabled();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_nType;
        break;
      }
      
      // optional int32 nType = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
          set_has_ntype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strDescribe;
        break;
      }
      
      // optional string strDescribe = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdescribe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strdescribe().data(), this->strdescribe().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strUpdatetime;
        break;
      }
      
      // optional string strUpdatetime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strUpdatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strupdatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strupdatetime().data(), this->strupdatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sysconfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 nKey = 2;
  if (has_nkey()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nkey(), output);
  }
  
  // optional string strValue = 3;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strvalue(), output);
  }
  
  // optional string strComment = 4;
  if (has_strcomment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcomment().data(), this->strcomment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strcomment(), output);
  }
  
  // optional int32 nEnabled = 5;
  if (has_nenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nenabled(), output);
  }
  
  // optional int32 nType = 6;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ntype(), output);
  }
  
  // optional string strDescribe = 7;
  if (has_strdescribe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdescribe().data(), this->strdescribe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strdescribe(), output);
  }
  
  // optional string strUpdatetime = 8;
  if (has_strupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strupdatetime().data(), this->strupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strupdatetime(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sysconfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 nKey = 2;
  if (has_nkey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nkey(), target);
  }
  
  // optional string strValue = 3;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }
  
  // optional string strComment = 4;
  if (has_strcomment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcomment().data(), this->strcomment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strcomment(), target);
  }
  
  // optional int32 nEnabled = 5;
  if (has_nenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nenabled(), target);
  }
  
  // optional int32 nType = 6;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ntype(), target);
  }
  
  // optional string strDescribe = 7;
  if (has_strdescribe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdescribe().data(), this->strdescribe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strdescribe(), target);
  }
  
  // optional string strUpdatetime = 8;
  if (has_strupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strupdatetime().data(), this->strupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strupdatetime(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sysconfig::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 nKey = 2;
    if (has_nkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nkey());
    }
    
    // optional string strValue = 3;
    if (has_strvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strvalue());
    }
    
    // optional string strComment = 4;
    if (has_strcomment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcomment());
    }
    
    // optional int32 nEnabled = 5;
    if (has_nenabled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nenabled());
    }
    
    // optional int32 nType = 6;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntype());
    }
    
    // optional string strDescribe = 7;
    if (has_strdescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strdescribe());
    }
    
    // optional string strUpdatetime = 8;
    if (has_strupdatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strupdatetime());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sysconfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sysconfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sysconfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sysconfig::MergeFrom(const Sysconfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_nkey()) {
      set_nkey(from.nkey());
    }
    if (from.has_strvalue()) {
      set_strvalue(from.strvalue());
    }
    if (from.has_strcomment()) {
      set_strcomment(from.strcomment());
    }
    if (from.has_nenabled()) {
      set_nenabled(from.nenabled());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
    if (from.has_strdescribe()) {
      set_strdescribe(from.strdescribe());
    }
    if (from.has_strupdatetime()) {
      set_strupdatetime(from.strupdatetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sysconfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sysconfig::CopyFrom(const Sysconfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sysconfig::IsInitialized() const {
  
  return true;
}

void Sysconfig::Swap(Sysconfig* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(nkey_, other->nkey_);
    std::swap(strvalue_, other->strvalue_);
    std::swap(strcomment_, other->strcomment_);
    std::swap(nenabled_, other->nenabled_);
    std::swap(ntype_, other->ntype_);
    std::swap(strdescribe_, other->strdescribe_);
    std::swap(strupdatetime_, other->strupdatetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sysconfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sysconfig_descriptor_;
  metadata.reflection = Sysconfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SysconfigList::kCmdFieldNumber;
const int SysconfigList::kSysconfigFieldNumber;
#endif  // !_MSC_VER

SysconfigList::SysconfigList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SysconfigList::InitAsDefaultInstance() {
}

SysconfigList::SysconfigList(const SysconfigList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SysconfigList::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SysconfigList::~SysconfigList() {
  SharedDtor();
}

void SysconfigList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SysconfigList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SysconfigList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SysconfigList_descriptor_;
}

const SysconfigList& SysconfigList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_center_2fSysconfig_2eproto();  return *default_instance_;
}

SysconfigList* SysconfigList::default_instance_ = NULL;

SysconfigList* SysconfigList::New() const {
  return new SysconfigList;
}

void SysconfigList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
  }
  sysconfig_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SysconfigList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sysconfig;
        break;
      }
      
      // repeated .cms_8120.Sysconfig sysconfig = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sysconfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sysconfig()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sysconfig;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SysconfigList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }
  
  // repeated .cms_8120.Sysconfig sysconfig = 2;
  for (int i = 0; i < this->sysconfig_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sysconfig(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SysconfigList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }
  
  // repeated .cms_8120.Sysconfig sysconfig = 2;
  for (int i = 0; i < this->sysconfig_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->sysconfig(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SysconfigList::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }
    
  }
  // repeated .cms_8120.Sysconfig sysconfig = 2;
  total_size += 1 * this->sysconfig_size();
  for (int i = 0; i < this->sysconfig_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sysconfig(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SysconfigList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SysconfigList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SysconfigList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SysconfigList::MergeFrom(const SysconfigList& from) {
  GOOGLE_CHECK_NE(&from, this);
  sysconfig_.MergeFrom(from.sysconfig_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SysconfigList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysconfigList::CopyFrom(const SysconfigList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysconfigList::IsInitialized() const {
  
  return true;
}

void SysconfigList::Swap(SysconfigList* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    sysconfig_.Swap(&other->sysconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SysconfigList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SysconfigList_descriptor_;
  metadata.reflection = SysconfigList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

// @@protoc_insertion_point(global_scope)
