// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center/Sysconfig.proto

#ifndef PROTOBUF_center_2fSysconfig_2eproto__INCLUDED
#define PROTOBUF_center_2fSysconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "type/cmd.pb.h"
// @@protoc_insertion_point(includes)

namespace cms_8120 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_center_2fSysconfig_2eproto();
void protobuf_AssignDesc_center_2fSysconfig_2eproto();
void protobuf_ShutdownFile_center_2fSysconfig_2eproto();

class Sysconfig;
class SysconfigList;

// ===================================================================

class Sysconfig : public ::google::protobuf::Message {
 public:
  Sysconfig();
  virtual ~Sysconfig();
  
  Sysconfig(const Sysconfig& from);
  
  inline Sysconfig& operator=(const Sysconfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Sysconfig& default_instance();
  
  void Swap(Sysconfig* other);
  
  // implements Message ----------------------------------------------
  
  Sysconfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sysconfig& from);
  void MergeFrom(const Sysconfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 nKey = 2;
  inline bool has_nkey() const;
  inline void clear_nkey();
  static const int kNKeyFieldNumber = 2;
  inline ::google::protobuf::int32 nkey() const;
  inline void set_nkey(::google::protobuf::int32 value);
  
  // optional string strValue = 3;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  
  // optional string strComment = 4;
  inline bool has_strcomment() const;
  inline void clear_strcomment();
  static const int kStrCommentFieldNumber = 4;
  inline const ::std::string& strcomment() const;
  inline void set_strcomment(const ::std::string& value);
  inline void set_strcomment(const char* value);
  inline void set_strcomment(const char* value, size_t size);
  inline ::std::string* mutable_strcomment();
  inline ::std::string* release_strcomment();
  
  // optional int32 nEnabled = 5;
  inline bool has_nenabled() const;
  inline void clear_nenabled();
  static const int kNEnabledFieldNumber = 5;
  inline ::google::protobuf::int32 nenabled() const;
  inline void set_nenabled(::google::protobuf::int32 value);
  
  // optional int32 nType = 6;
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNTypeFieldNumber = 6;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);
  
  // optional string strDescribe = 7;
  inline bool has_strdescribe() const;
  inline void clear_strdescribe();
  static const int kStrDescribeFieldNumber = 7;
  inline const ::std::string& strdescribe() const;
  inline void set_strdescribe(const ::std::string& value);
  inline void set_strdescribe(const char* value);
  inline void set_strdescribe(const char* value, size_t size);
  inline ::std::string* mutable_strdescribe();
  inline ::std::string* release_strdescribe();
  
  // optional string strUpdatetime = 8;
  inline bool has_strupdatetime() const;
  inline void clear_strupdatetime();
  static const int kStrUpdatetimeFieldNumber = 8;
  inline const ::std::string& strupdatetime() const;
  inline void set_strupdatetime(const ::std::string& value);
  inline void set_strupdatetime(const char* value);
  inline void set_strupdatetime(const char* value, size_t size);
  inline ::std::string* mutable_strupdatetime();
  inline ::std::string* release_strupdatetime();
  
  // @@protoc_insertion_point(class_scope:cms_8120.Sysconfig)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_nkey();
  inline void clear_has_nkey();
  inline void set_has_strvalue();
  inline void clear_has_strvalue();
  inline void set_has_strcomment();
  inline void clear_has_strcomment();
  inline void set_has_nenabled();
  inline void clear_has_nenabled();
  inline void set_has_ntype();
  inline void clear_has_ntype();
  inline void set_has_strdescribe();
  inline void clear_has_strdescribe();
  inline void set_has_strupdatetime();
  inline void clear_has_strupdatetime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 nkey_;
  ::std::string* strvalue_;
  ::std::string* strcomment_;
  ::google::protobuf::int32 nenabled_;
  ::google::protobuf::int32 ntype_;
  ::std::string* strdescribe_;
  ::std::string* strupdatetime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_center_2fSysconfig_2eproto();
  friend void protobuf_AssignDesc_center_2fSysconfig_2eproto();
  friend void protobuf_ShutdownFile_center_2fSysconfig_2eproto();
  
  void InitAsDefaultInstance();
  static Sysconfig* default_instance_;
};
// -------------------------------------------------------------------

class SysconfigList : public ::google::protobuf::Message {
 public:
  SysconfigList();
  virtual ~SysconfigList();
  
  SysconfigList(const SysconfigList& from);
  
  inline SysconfigList& operator=(const SysconfigList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SysconfigList& default_instance();
  
  void Swap(SysconfigList* other);
  
  // implements Message ----------------------------------------------
  
  SysconfigList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysconfigList& from);
  void MergeFrom(const SysconfigList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);
  
  // repeated .cms_8120.Sysconfig sysconfig = 2;
  inline int sysconfig_size() const;
  inline void clear_sysconfig();
  static const int kSysconfigFieldNumber = 2;
  inline const ::cms_8120::Sysconfig& sysconfig(int index) const;
  inline ::cms_8120::Sysconfig* mutable_sysconfig(int index);
  inline ::cms_8120::Sysconfig* add_sysconfig();
  inline const ::google::protobuf::RepeatedPtrField< ::cms_8120::Sysconfig >&
      sysconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::cms_8120::Sysconfig >*
      mutable_sysconfig();
  
  // @@protoc_insertion_point(class_scope:cms_8120.SysconfigList)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::cms_8120::Sysconfig > sysconfig_;
  ::google::protobuf::int32 cmd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_center_2fSysconfig_2eproto();
  friend void protobuf_AssignDesc_center_2fSysconfig_2eproto();
  friend void protobuf_ShutdownFile_center_2fSysconfig_2eproto();
  
  void InitAsDefaultInstance();
  static SysconfigList* default_instance_;
};
// ===================================================================


// ===================================================================

// Sysconfig

// optional int32 id = 1;
inline bool Sysconfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sysconfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sysconfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sysconfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Sysconfig::id() const {
  return id_;
}
inline void Sysconfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 nKey = 2;
inline bool Sysconfig::has_nkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sysconfig::set_has_nkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sysconfig::clear_has_nkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sysconfig::clear_nkey() {
  nkey_ = 0;
  clear_has_nkey();
}
inline ::google::protobuf::int32 Sysconfig::nkey() const {
  return nkey_;
}
inline void Sysconfig::set_nkey(::google::protobuf::int32 value) {
  set_has_nkey();
  nkey_ = value;
}

// optional string strValue = 3;
inline bool Sysconfig::has_strvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Sysconfig::set_has_strvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Sysconfig::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Sysconfig::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& Sysconfig::strvalue() const {
  return *strvalue_;
}
inline void Sysconfig::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void Sysconfig::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void Sysconfig::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Sysconfig::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  return strvalue_;
}
inline ::std::string* Sysconfig::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strComment = 4;
inline bool Sysconfig::has_strcomment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Sysconfig::set_has_strcomment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Sysconfig::clear_has_strcomment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Sysconfig::clear_strcomment() {
  if (strcomment_ != &::google::protobuf::internal::kEmptyString) {
    strcomment_->clear();
  }
  clear_has_strcomment();
}
inline const ::std::string& Sysconfig::strcomment() const {
  return *strcomment_;
}
inline void Sysconfig::set_strcomment(const ::std::string& value) {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  strcomment_->assign(value);
}
inline void Sysconfig::set_strcomment(const char* value) {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  strcomment_->assign(value);
}
inline void Sysconfig::set_strcomment(const char* value, size_t size) {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  strcomment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Sysconfig::mutable_strcomment() {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  return strcomment_;
}
inline ::std::string* Sysconfig::release_strcomment() {
  clear_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcomment_;
    strcomment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 nEnabled = 5;
inline bool Sysconfig::has_nenabled() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Sysconfig::set_has_nenabled() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Sysconfig::clear_has_nenabled() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Sysconfig::clear_nenabled() {
  nenabled_ = 0;
  clear_has_nenabled();
}
inline ::google::protobuf::int32 Sysconfig::nenabled() const {
  return nenabled_;
}
inline void Sysconfig::set_nenabled(::google::protobuf::int32 value) {
  set_has_nenabled();
  nenabled_ = value;
}

// optional int32 nType = 6;
inline bool Sysconfig::has_ntype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Sysconfig::set_has_ntype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Sysconfig::clear_has_ntype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Sysconfig::clear_ntype() {
  ntype_ = 0;
  clear_has_ntype();
}
inline ::google::protobuf::int32 Sysconfig::ntype() const {
  return ntype_;
}
inline void Sysconfig::set_ntype(::google::protobuf::int32 value) {
  set_has_ntype();
  ntype_ = value;
}

// optional string strDescribe = 7;
inline bool Sysconfig::has_strdescribe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Sysconfig::set_has_strdescribe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Sysconfig::clear_has_strdescribe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Sysconfig::clear_strdescribe() {
  if (strdescribe_ != &::google::protobuf::internal::kEmptyString) {
    strdescribe_->clear();
  }
  clear_has_strdescribe();
}
inline const ::std::string& Sysconfig::strdescribe() const {
  return *strdescribe_;
}
inline void Sysconfig::set_strdescribe(const ::std::string& value) {
  set_has_strdescribe();
  if (strdescribe_ == &::google::protobuf::internal::kEmptyString) {
    strdescribe_ = new ::std::string;
  }
  strdescribe_->assign(value);
}
inline void Sysconfig::set_strdescribe(const char* value) {
  set_has_strdescribe();
  if (strdescribe_ == &::google::protobuf::internal::kEmptyString) {
    strdescribe_ = new ::std::string;
  }
  strdescribe_->assign(value);
}
inline void Sysconfig::set_strdescribe(const char* value, size_t size) {
  set_has_strdescribe();
  if (strdescribe_ == &::google::protobuf::internal::kEmptyString) {
    strdescribe_ = new ::std::string;
  }
  strdescribe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Sysconfig::mutable_strdescribe() {
  set_has_strdescribe();
  if (strdescribe_ == &::google::protobuf::internal::kEmptyString) {
    strdescribe_ = new ::std::string;
  }
  return strdescribe_;
}
inline ::std::string* Sysconfig::release_strdescribe() {
  clear_has_strdescribe();
  if (strdescribe_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdescribe_;
    strdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strUpdatetime = 8;
inline bool Sysconfig::has_strupdatetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Sysconfig::set_has_strupdatetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Sysconfig::clear_has_strupdatetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Sysconfig::clear_strupdatetime() {
  if (strupdatetime_ != &::google::protobuf::internal::kEmptyString) {
    strupdatetime_->clear();
  }
  clear_has_strupdatetime();
}
inline const ::std::string& Sysconfig::strupdatetime() const {
  return *strupdatetime_;
}
inline void Sysconfig::set_strupdatetime(const ::std::string& value) {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  strupdatetime_->assign(value);
}
inline void Sysconfig::set_strupdatetime(const char* value) {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  strupdatetime_->assign(value);
}
inline void Sysconfig::set_strupdatetime(const char* value, size_t size) {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  strupdatetime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Sysconfig::mutable_strupdatetime() {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  return strupdatetime_;
}
inline ::std::string* Sysconfig::release_strupdatetime() {
  clear_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strupdatetime_;
    strupdatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SysconfigList

// optional int32 cmd = 1;
inline bool SysconfigList::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysconfigList::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysconfigList::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysconfigList::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 SysconfigList::cmd() const {
  return cmd_;
}
inline void SysconfigList::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// repeated .cms_8120.Sysconfig sysconfig = 2;
inline int SysconfigList::sysconfig_size() const {
  return sysconfig_.size();
}
inline void SysconfigList::clear_sysconfig() {
  sysconfig_.Clear();
}
inline const ::cms_8120::Sysconfig& SysconfigList::sysconfig(int index) const {
  return sysconfig_.Get(index);
}
inline ::cms_8120::Sysconfig* SysconfigList::mutable_sysconfig(int index) {
  return sysconfig_.Mutable(index);
}
inline ::cms_8120::Sysconfig* SysconfigList::add_sysconfig() {
  return sysconfig_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cms_8120::Sysconfig >&
SysconfigList::sysconfig() const {
  return sysconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::cms_8120::Sysconfig >*
SysconfigList::mutable_sysconfig() {
  return &sysconfig_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_center_2fSysconfig_2eproto__INCLUDED
