// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "type/cmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cms_8120 {

namespace {

const ::google::protobuf::EnumDescriptor* CMD_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_type_2fcmd_2eproto() {
  protobuf_AddDesc_type_2fcmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "type/cmd.proto");
  GOOGLE_CHECK(file != NULL);
  CMD_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_type_2fcmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_type_2fcmd_2eproto() {
}

void protobuf_AddDesc_type_2fcmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016type/cmd.proto\022\010cms_8120*\370\t\n\003CMD\022\031\n\024CM"
    "D_REQ_SERVER_LOGIN\020\220N\022\031\n\024CMD_RSP_SERVER_"
    "LOGIN\020\221N\022\032\n\025CMD_MSG_SERVER_LOGOUT\020\222N\022\030\n\023"
    "CMD_REQ_SERVER_DATA\020\223N\022\030\n\023CMD_RSP_SERVER"
    "_DATA\020\224N\022\030\n\023CMD_DT_RECORDS_LIST\020\370U\022\030\n\023CM"
    "D_DT_STORAGE_INFO\020\371U\022\033\n\026CMD_MDT_RECORDS_"
    "STATUS\020\372U\022\033\n\026CMD_DT_RECORDS_LIST_EX\020\373U\022\032"
    "\n\025CMD_WDT_ALARMLOG_INFO\020\340]\022\024\n\017CMD_DT_ALA"
    "RMLOG\020\341]\022\026\n\021CMD_MDT_ALARMTIME\020\342]\022\032\n\025CMD_"
    "DT_DVRDEVICE_LIST\020\343]\022\036\n\031CMD_DT_STORAGEDE"
    "VICE_LIST\020\344]\022\032\n\025CMD_MDT_DEVIDE_STATUS\020\345]"
    "\022\031\n\024CMD_MDT_DEVIDE_SPACE\020\346]\022\032\n\025CMD_MDT_S"
    "ERVER_STATUS\020\347]\022\032\n\025CMD_DT_SYSCONFIG_LIST"
    "\020\310e\022\037\n\032CMD_DT_OVERTIMERECORD_LIST\020\311e\022\027\n\022"
    "CMD_DT_RECORD_LIST\020\312e\022\036\n\031CMD_DT_STORAGED"
    "EVICE_INFO\020\313e\022\030\n\023CMD_DDT_RECORD_INFO\020\314e\022"
    "\033\n\026CMD_MDT_OVERTIMERECORD\020\315e\022\030\n\023CMD_DDT_"
    "OVERTIMELOG\020\316e\022\030\n\023CMD_DT_CLIENT_LOGIN\020\260m"
    "\022\032\n\025CMD_MSG_CLIENT_LOGOUT\020\262m\022\035\n\030CMD_REQ_"
    "CLIENT_PWD_CHECK\020\263m\022\035\n\030CMD_RSP_CLIENT_PW"
    "D_CHECK\020\264m\022\033\n\026CMD_DT_CHANGE_PASSWORD\020\266m\022"
    "\027\n\022CMD_DT_REGION_LIST\020\230u\022 \n\033CMD_DT_PARAM"
    "DICTIONARY_LIST\020\200}\022\035\n\027CMD_DT_PRODUCTTYPE"
    "_LIST\020\350\204\001\022\031\n\023CMD_DT_PRODUCT_LIST\020\352\204\001\022\031\n\023"
    "CMD_DT_PRODUCT_INFO\020\354\204\001\022\"\n\034CMD_DT_PRODUC"
    "T_WORD_TEMPLATE\020\356\204\001\022\033\n\025CMD_WDT_CLIENT_RE"
    "CORD\020\270\224\001\022\033\n\025CMD_MDT_CLIENT_RECORD\020\271\224\001\022\032\n"
    "\024CMD_DT_CLIENT_RECORD\020\272\224\001\022\032\n\024CMD_DDT_ERR"
    "OR_RECORD\020\273\224\001\022\031\n\023CMD_DT_ERROR_RECORD\020\274\224\001"
    "\022\032\n\024CMD_MDT_ERROR_RECORD\020\275\224\001\022\031\n\023CMD_DT_P"
    "RINT_RECORD\020\276\224\001\022\034\n\026CMD_DT_HIS_CLIENTINPU"
    "T\020\240\234\001\022\032\n\024CMD_DT_SYSTEM_CONFIG\020\210\244\001\022\032\n\024CMD"
    "_WRITE_WORK_STATE\020\360\253\001B2\n&com.hikvision.f"
    "inance.fms.cms.hpp.typeB\010CmdProto", 1353);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "type/cmd.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_type_2fcmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_type_2fcmd_2eproto {
  StaticDescriptorInitializer_type_2fcmd_2eproto() {
    protobuf_AddDesc_type_2fcmd_2eproto();
  }
} static_descriptor_initializer_type_2fcmd_2eproto_;

const ::google::protobuf::EnumDescriptor* CMD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMD_descriptor_;
}
bool CMD_IsValid(int value) {
  switch(value) {
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 11000:
    case 11001:
    case 11002:
    case 11003:
    case 12000:
    case 12001:
    case 12002:
    case 12003:
    case 12004:
    case 12005:
    case 12006:
    case 12007:
    case 13000:
    case 13001:
    case 13002:
    case 13003:
    case 13004:
    case 13005:
    case 13006:
    case 14000:
    case 14002:
    case 14003:
    case 14004:
    case 14006:
    case 15000:
    case 16000:
    case 17000:
    case 17002:
    case 17004:
    case 17006:
    case 19000:
    case 19001:
    case 19002:
    case 19003:
    case 19004:
    case 19005:
    case 19006:
    case 20000:
    case 21000:
    case 22000:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

// @@protoc_insertion_point(global_scope)
