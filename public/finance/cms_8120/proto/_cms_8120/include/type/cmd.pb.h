// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: type/cmd.proto

#ifndef PROTOBUF_type_2fcmd_2eproto__INCLUDED
#define PROTOBUF_type_2fcmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace cms_8120 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_type_2fcmd_2eproto();
void protobuf_AssignDesc_type_2fcmd_2eproto();
void protobuf_ShutdownFile_type_2fcmd_2eproto();


enum CMD {
  CMD_REQ_SERVER_LOGIN = 10000,
  CMD_RSP_SERVER_LOGIN = 10001,
  CMD_MSG_SERVER_LOGOUT = 10002,
  CMD_REQ_SERVER_DATA = 10003,
  CMD_RSP_SERVER_DATA = 10004,
  CMD_DT_RECORDS_LIST = 11000,
  CMD_DT_STORAGE_INFO = 11001,
  CMD_MDT_RECORDS_STATUS = 11002,
  CMD_DT_RECORDS_LIST_EX = 11003,
  CMD_WDT_ALARMLOG_INFO = 12000,
  CMD_DT_ALARMLOG = 12001,
  CMD_MDT_ALARMTIME = 12002,
  CMD_DT_DVRDEVICE_LIST = 12003,
  CMD_DT_STORAGEDEVICE_LIST = 12004,
  CMD_MDT_DEVIDE_STATUS = 12005,
  CMD_MDT_DEVIDE_SPACE = 12006,
  CMD_MDT_SERVER_STATUS = 12007,
  CMD_DT_SYSCONFIG_LIST = 13000,
  CMD_DT_OVERTIMERECORD_LIST = 13001,
  CMD_DT_RECORD_LIST = 13002,
  CMD_DT_STORAGEDEVICE_INFO = 13003,
  CMD_DDT_RECORD_INFO = 13004,
  CMD_MDT_OVERTIMERECORD = 13005,
  CMD_DDT_OVERTIMELOG = 13006,
  CMD_DT_CLIENT_LOGIN = 14000,
  CMD_MSG_CLIENT_LOGOUT = 14002,
  CMD_REQ_CLIENT_PWD_CHECK = 14003,
  CMD_RSP_CLIENT_PWD_CHECK = 14004,
  CMD_DT_CHANGE_PASSWORD = 14006,
  CMD_DT_REGION_LIST = 15000,
  CMD_DT_PARAMDICTIONARY_LIST = 16000,
  CMD_DT_PRODUCTTYPE_LIST = 17000,
  CMD_DT_PRODUCT_LIST = 17002,
  CMD_DT_PRODUCT_INFO = 17004,
  CMD_DT_PRODUCT_WORD_TEMPLATE = 17006,
  CMD_WDT_CLIENT_RECORD = 19000,
  CMD_MDT_CLIENT_RECORD = 19001,
  CMD_DT_CLIENT_RECORD = 19002,
  CMD_DDT_ERROR_RECORD = 19003,
  CMD_DT_ERROR_RECORD = 19004,
  CMD_MDT_ERROR_RECORD = 19005,
  CMD_DT_PRINT_RECORD = 19006,
  CMD_DT_HIS_CLIENTINPUT = 20000,
  CMD_DT_SYSTEM_CONFIG = 21000,
  CMD_WRITE_WORK_STATE = 22000
};
bool CMD_IsValid(int value);
const CMD CMD_MIN = CMD_REQ_SERVER_LOGIN;
const CMD CMD_MAX = CMD_WRITE_WORK_STATE;
const int CMD_ARRAYSIZE = CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMD_descriptor();
inline const ::std::string& CMD_Name(CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMD_descriptor(), value);
}
inline bool CMD_Parse(
    const ::std::string& name, CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMD>(
    CMD_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< cms_8120::CMD>() {
  return cms_8120::CMD_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_type_2fcmd_2eproto__INCLUDED
