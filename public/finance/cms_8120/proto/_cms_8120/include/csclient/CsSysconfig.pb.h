// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csclient/CsSysconfig.proto

#ifndef PROTOBUF_csclient_2fCsSysconfig_2eproto__INCLUDED
#define PROTOBUF_csclient_2fCsSysconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace cms_8120 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_csclient_2fCsSysconfig_2eproto();
void protobuf_AssignDesc_csclient_2fCsSysconfig_2eproto();
void protobuf_ShutdownFile_csclient_2fCsSysconfig_2eproto();

class SysconfigInfo;
class ReqSysconfig;
class RspSysconfig;

// ===================================================================

class SysconfigInfo : public ::google::protobuf::Message {
 public:
  SysconfigInfo();
  virtual ~SysconfigInfo();
  
  SysconfigInfo(const SysconfigInfo& from);
  
  inline SysconfigInfo& operator=(const SysconfigInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SysconfigInfo& default_instance();
  
  void Swap(SysconfigInfo* other);
  
  // implements Message ----------------------------------------------
  
  SysconfigInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysconfigInfo& from);
  void MergeFrom(const SysconfigInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 nKey = 1;
  inline bool has_nkey() const;
  inline void clear_nkey();
  static const int kNKeyFieldNumber = 1;
  inline ::google::protobuf::int32 nkey() const;
  inline void set_nkey(::google::protobuf::int32 value);
  
  // optional string strValue = 2;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  
  // optional string strComment = 3;
  inline bool has_strcomment() const;
  inline void clear_strcomment();
  static const int kStrCommentFieldNumber = 3;
  inline const ::std::string& strcomment() const;
  inline void set_strcomment(const ::std::string& value);
  inline void set_strcomment(const char* value);
  inline void set_strcomment(const char* value, size_t size);
  inline ::std::string* mutable_strcomment();
  inline ::std::string* release_strcomment();
  
  // @@protoc_insertion_point(class_scope:cms_8120.SysconfigInfo)
 private:
  inline void set_has_nkey();
  inline void clear_has_nkey();
  inline void set_has_strvalue();
  inline void clear_has_strvalue();
  inline void set_has_strcomment();
  inline void clear_has_strcomment();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* strvalue_;
  ::std::string* strcomment_;
  ::google::protobuf::int32 nkey_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_csclient_2fCsSysconfig_2eproto();
  friend void protobuf_AssignDesc_csclient_2fCsSysconfig_2eproto();
  friend void protobuf_ShutdownFile_csclient_2fCsSysconfig_2eproto();
  
  void InitAsDefaultInstance();
  static SysconfigInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqSysconfig : public ::google::protobuf::Message {
 public:
  ReqSysconfig();
  virtual ~ReqSysconfig();
  
  ReqSysconfig(const ReqSysconfig& from);
  
  inline ReqSysconfig& operator=(const ReqSysconfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSysconfig& default_instance();
  
  void Swap(ReqSysconfig* other);
  
  // implements Message ----------------------------------------------
  
  ReqSysconfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSysconfig& from);
  void MergeFrom(const ReqSysconfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:cms_8120.ReqSysconfig)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 cmd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_csclient_2fCsSysconfig_2eproto();
  friend void protobuf_AssignDesc_csclient_2fCsSysconfig_2eproto();
  friend void protobuf_ShutdownFile_csclient_2fCsSysconfig_2eproto();
  
  void InitAsDefaultInstance();
  static ReqSysconfig* default_instance_;
};
// -------------------------------------------------------------------

class RspSysconfig : public ::google::protobuf::Message {
 public:
  RspSysconfig();
  virtual ~RspSysconfig();
  
  RspSysconfig(const RspSysconfig& from);
  
  inline RspSysconfig& operator=(const RspSysconfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspSysconfig& default_instance();
  
  void Swap(RspSysconfig* other);
  
  // implements Message ----------------------------------------------
  
  RspSysconfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspSysconfig& from);
  void MergeFrom(const RspSysconfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);
  
  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional string result_info = 3;
  inline bool has_result_info() const;
  inline void clear_result_info();
  static const int kResultInfoFieldNumber = 3;
  inline const ::std::string& result_info() const;
  inline void set_result_info(const ::std::string& value);
  inline void set_result_info(const char* value);
  inline void set_result_info(const char* value, size_t size);
  inline ::std::string* mutable_result_info();
  inline ::std::string* release_result_info();
  
  // repeated .cms_8120.SysconfigInfo sysconfigInfo = 4;
  inline int sysconfiginfo_size() const;
  inline void clear_sysconfiginfo();
  static const int kSysconfigInfoFieldNumber = 4;
  inline const ::cms_8120::SysconfigInfo& sysconfiginfo(int index) const;
  inline ::cms_8120::SysconfigInfo* mutable_sysconfiginfo(int index);
  inline ::cms_8120::SysconfigInfo* add_sysconfiginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::cms_8120::SysconfigInfo >&
      sysconfiginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::cms_8120::SysconfigInfo >*
      mutable_sysconfiginfo();
  
  // @@protoc_insertion_point(class_scope:cms_8120.RspSysconfig)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_result_info();
  inline void clear_has_result_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 result_;
  ::std::string* result_info_;
  ::google::protobuf::RepeatedPtrField< ::cms_8120::SysconfigInfo > sysconfiginfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_csclient_2fCsSysconfig_2eproto();
  friend void protobuf_AssignDesc_csclient_2fCsSysconfig_2eproto();
  friend void protobuf_ShutdownFile_csclient_2fCsSysconfig_2eproto();
  
  void InitAsDefaultInstance();
  static RspSysconfig* default_instance_;
};
// ===================================================================


// ===================================================================

// SysconfigInfo

// optional int32 nKey = 1;
inline bool SysconfigInfo::has_nkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysconfigInfo::set_has_nkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysconfigInfo::clear_has_nkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysconfigInfo::clear_nkey() {
  nkey_ = 0;
  clear_has_nkey();
}
inline ::google::protobuf::int32 SysconfigInfo::nkey() const {
  return nkey_;
}
inline void SysconfigInfo::set_nkey(::google::protobuf::int32 value) {
  set_has_nkey();
  nkey_ = value;
}

// optional string strValue = 2;
inline bool SysconfigInfo::has_strvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SysconfigInfo::set_has_strvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SysconfigInfo::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SysconfigInfo::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& SysconfigInfo::strvalue() const {
  return *strvalue_;
}
inline void SysconfigInfo::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void SysconfigInfo::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void SysconfigInfo::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SysconfigInfo::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  return strvalue_;
}
inline ::std::string* SysconfigInfo::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strComment = 3;
inline bool SysconfigInfo::has_strcomment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SysconfigInfo::set_has_strcomment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SysconfigInfo::clear_has_strcomment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SysconfigInfo::clear_strcomment() {
  if (strcomment_ != &::google::protobuf::internal::kEmptyString) {
    strcomment_->clear();
  }
  clear_has_strcomment();
}
inline const ::std::string& SysconfigInfo::strcomment() const {
  return *strcomment_;
}
inline void SysconfigInfo::set_strcomment(const ::std::string& value) {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  strcomment_->assign(value);
}
inline void SysconfigInfo::set_strcomment(const char* value) {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  strcomment_->assign(value);
}
inline void SysconfigInfo::set_strcomment(const char* value, size_t size) {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  strcomment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SysconfigInfo::mutable_strcomment() {
  set_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    strcomment_ = new ::std::string;
  }
  return strcomment_;
}
inline ::std::string* SysconfigInfo::release_strcomment() {
  clear_has_strcomment();
  if (strcomment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcomment_;
    strcomment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqSysconfig

// optional int32 cmd = 1;
inline bool ReqSysconfig::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSysconfig::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSysconfig::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSysconfig::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 ReqSysconfig::cmd() const {
  return cmd_;
}
inline void ReqSysconfig::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// -------------------------------------------------------------------

// RspSysconfig

// optional int32 cmd = 1;
inline bool RspSysconfig::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspSysconfig::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspSysconfig::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspSysconfig::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 RspSysconfig::cmd() const {
  return cmd_;
}
inline void RspSysconfig::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional int32 result = 2;
inline bool RspSysconfig::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspSysconfig::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspSysconfig::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspSysconfig::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 RspSysconfig::result() const {
  return result_;
}
inline void RspSysconfig::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string result_info = 3;
inline bool RspSysconfig::has_result_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspSysconfig::set_has_result_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspSysconfig::clear_has_result_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspSysconfig::clear_result_info() {
  if (result_info_ != &::google::protobuf::internal::kEmptyString) {
    result_info_->clear();
  }
  clear_has_result_info();
}
inline const ::std::string& RspSysconfig::result_info() const {
  return *result_info_;
}
inline void RspSysconfig::set_result_info(const ::std::string& value) {
  set_has_result_info();
  if (result_info_ == &::google::protobuf::internal::kEmptyString) {
    result_info_ = new ::std::string;
  }
  result_info_->assign(value);
}
inline void RspSysconfig::set_result_info(const char* value) {
  set_has_result_info();
  if (result_info_ == &::google::protobuf::internal::kEmptyString) {
    result_info_ = new ::std::string;
  }
  result_info_->assign(value);
}
inline void RspSysconfig::set_result_info(const char* value, size_t size) {
  set_has_result_info();
  if (result_info_ == &::google::protobuf::internal::kEmptyString) {
    result_info_ = new ::std::string;
  }
  result_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspSysconfig::mutable_result_info() {
  set_has_result_info();
  if (result_info_ == &::google::protobuf::internal::kEmptyString) {
    result_info_ = new ::std::string;
  }
  return result_info_;
}
inline ::std::string* RspSysconfig::release_result_info() {
  clear_has_result_info();
  if (result_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = result_info_;
    result_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .cms_8120.SysconfigInfo sysconfigInfo = 4;
inline int RspSysconfig::sysconfiginfo_size() const {
  return sysconfiginfo_.size();
}
inline void RspSysconfig::clear_sysconfiginfo() {
  sysconfiginfo_.Clear();
}
inline const ::cms_8120::SysconfigInfo& RspSysconfig::sysconfiginfo(int index) const {
  return sysconfiginfo_.Get(index);
}
inline ::cms_8120::SysconfigInfo* RspSysconfig::mutable_sysconfiginfo(int index) {
  return sysconfiginfo_.Mutable(index);
}
inline ::cms_8120::SysconfigInfo* RspSysconfig::add_sysconfiginfo() {
  return sysconfiginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cms_8120::SysconfigInfo >&
RspSysconfig::sysconfiginfo() const {
  return sysconfiginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::cms_8120::SysconfigInfo >*
RspSysconfig::mutable_sysconfiginfo() {
  return &sysconfiginfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_csclient_2fCsSysconfig_2eproto__INCLUDED
