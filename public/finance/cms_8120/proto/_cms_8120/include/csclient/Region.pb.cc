// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "csclient/Region.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cms_8120 {

namespace {

const ::google::protobuf::Descriptor* ReqRegion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqRegion_reflection_ = NULL;
const ::google::protobuf::Descriptor* Region_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Region_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_csclient_2fRegion_2eproto() {
  protobuf_AddDesc_csclient_2fRegion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "csclient/Region.proto");
  GOOGLE_CHECK(file != NULL);
  ReqRegion_descriptor_ = file->message_type(0);
  static const int ReqRegion_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, nparentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, strname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, strcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, strinterareacode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, strpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, nsortid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, strtxt_),
  };
  ReqRegion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqRegion_descriptor_,
      ReqRegion::default_instance_,
      ReqRegion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqRegion));
  Region_descriptor_ = file->message_type(1);
  static const int Region_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, nparentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, strname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, strcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, strinterareacode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, strpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, nsortid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, strtxt_),
  };
  Region_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Region_descriptor_,
      Region::default_instance_,
      Region_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Region, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Region));
  RegionList_descriptor_ = file->message_type(2);
  static const int RegionList_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionList, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionList, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionList, result_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionList, region_),
  };
  RegionList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RegionList_descriptor_,
      RegionList::default_instance_,
      RegionList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RegionList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_csclient_2fRegion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqRegion_descriptor_, &ReqRegion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Region_descriptor_, &Region::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RegionList_descriptor_, &RegionList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_csclient_2fRegion_2eproto() {
  delete ReqRegion::default_instance_;
  delete ReqRegion_reflection_;
  delete Region::default_instance_;
  delete Region_reflection_;
  delete RegionList::default_instance_;
  delete RegionList_reflection_;
}

void protobuf_AddDesc_csclient_2fRegion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025csclient/Region.proto\022\010cms_8120\"\245\001\n\tRe"
    "qRegion\022\013\n\003cmd\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022\021\n\tnPar"
    "entId\030\003 \001(\005\022\017\n\007strName\030\004 \001(\t\022\017\n\007strCode\030"
    "\005 \001(\t\022\030\n\020strInterAreaCode\030\006 \001(\t\022\017\n\007strPa"
    "th\030\007 \001(\t\022\017\n\007nSortId\030\010 \001(\005\022\016\n\006strTxt\030\t \001("
    "\t\"\225\001\n\006Region\022\n\n\002id\030\001 \001(\005\022\021\n\tnParentId\030\002 "
    "\001(\005\022\017\n\007strName\030\003 \001(\t\022\017\n\007strCode\030\004 \001(\t\022\030\n"
    "\020strInterAreaCode\030\005 \001(\t\022\017\n\007strPath\030\006 \001(\t"
    "\022\017\n\007nSortId\030\007 \001(\005\022\016\n\006strTxt\030\010 \001(\t\"`\n\nReg"
    "ionList\022\013\n\003cmd\030\001 \001(\005\022\016\n\006result\030\002 \001(\005\022\023\n\013"
    "result_info\030\003 \001(\t\022 \n\006region\030\004 \003(\0132\020.cms_"
    "8120.Region2K\n\rRegionService\022:\n\rGetRegio"
    "nList\022\023.cms_8120.ReqRegion\032\024.cms_8120.Re"
    "gionListB<\n*com.hikvision.finance.fms.cm"
    "s.hpp.csclientB\013RegionProto\210\001\001", 590);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "csclient/Region.proto", &protobuf_RegisterTypes);
  ReqRegion::default_instance_ = new ReqRegion();
  Region::default_instance_ = new Region();
  RegionList::default_instance_ = new RegionList();
  ReqRegion::default_instance_->InitAsDefaultInstance();
  Region::default_instance_->InitAsDefaultInstance();
  RegionList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_csclient_2fRegion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_csclient_2fRegion_2eproto {
  StaticDescriptorInitializer_csclient_2fRegion_2eproto() {
    protobuf_AddDesc_csclient_2fRegion_2eproto();
  }
} static_descriptor_initializer_csclient_2fRegion_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int ReqRegion::kCmdFieldNumber;
const int ReqRegion::kIdFieldNumber;
const int ReqRegion::kNParentIdFieldNumber;
const int ReqRegion::kStrNameFieldNumber;
const int ReqRegion::kStrCodeFieldNumber;
const int ReqRegion::kStrInterAreaCodeFieldNumber;
const int ReqRegion::kStrPathFieldNumber;
const int ReqRegion::kNSortIdFieldNumber;
const int ReqRegion::kStrTxtFieldNumber;
#endif  // !_MSC_VER

ReqRegion::ReqRegion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqRegion::InitAsDefaultInstance() {
}

ReqRegion::ReqRegion(const ReqRegion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqRegion::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  id_ = 0;
  nparentid_ = 0;
  strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strinterareacode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nsortid_ = 0;
  strtxt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqRegion::~ReqRegion() {
  SharedDtor();
}

void ReqRegion::SharedDtor() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strcode_ != &::google::protobuf::internal::kEmptyString) {
    delete strcode_;
  }
  if (strinterareacode_ != &::google::protobuf::internal::kEmptyString) {
    delete strinterareacode_;
  }
  if (strpath_ != &::google::protobuf::internal::kEmptyString) {
    delete strpath_;
  }
  if (strtxt_ != &::google::protobuf::internal::kEmptyString) {
    delete strtxt_;
  }
  if (this != default_instance_) {
  }
}

void ReqRegion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqRegion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqRegion_descriptor_;
}

const ReqRegion& ReqRegion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_csclient_2fRegion_2eproto();  return *default_instance_;
}

ReqRegion* ReqRegion::default_instance_ = NULL;

ReqRegion* ReqRegion::New() const {
  return new ReqRegion;
}

void ReqRegion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    id_ = 0;
    nparentid_ = 0;
    if (has_strname()) {
      if (strname_ != &::google::protobuf::internal::kEmptyString) {
        strname_->clear();
      }
    }
    if (has_strcode()) {
      if (strcode_ != &::google::protobuf::internal::kEmptyString) {
        strcode_->clear();
      }
    }
    if (has_strinterareacode()) {
      if (strinterareacode_ != &::google::protobuf::internal::kEmptyString) {
        strinterareacode_->clear();
      }
    }
    if (has_strpath()) {
      if (strpath_ != &::google::protobuf::internal::kEmptyString) {
        strpath_->clear();
      }
    }
    nsortid_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strtxt()) {
      if (strtxt_ != &::google::protobuf::internal::kEmptyString) {
        strtxt_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqRegion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }
      
      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nParentId;
        break;
      }
      
      // optional int32 nParentId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nParentId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nparentid_)));
          set_has_nparentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strName;
        break;
      }
      
      // optional string strName = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strname().data(), this->strname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strCode;
        break;
      }
      
      // optional string strCode = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcode().data(), this->strcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strInterAreaCode;
        break;
      }
      
      // optional string strInterAreaCode = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strInterAreaCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strinterareacode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strinterareacode().data(), this->strinterareacode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strPath;
        break;
      }
      
      // optional string strPath = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpath().data(), this->strpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_nSortId;
        break;
      }
      
      // optional int32 nSortId = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nSortId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsortid_)));
          set_has_nsortid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strTxt;
        break;
      }
      
      // optional string strTxt = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTxt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtxt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtxt().data(), this->strtxt().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqRegion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }
  
  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }
  
  // optional int32 nParentId = 3;
  if (has_nparentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nparentid(), output);
  }
  
  // optional string strName = 4;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strname(), output);
  }
  
  // optional string strCode = 5;
  if (has_strcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strcode(), output);
  }
  
  // optional string strInterAreaCode = 6;
  if (has_strinterareacode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strinterareacode().data(), this->strinterareacode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strinterareacode(), output);
  }
  
  // optional string strPath = 7;
  if (has_strpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpath().data(), this->strpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strpath(), output);
  }
  
  // optional int32 nSortId = 8;
  if (has_nsortid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nsortid(), output);
  }
  
  // optional string strTxt = 9;
  if (has_strtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtxt().data(), this->strtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strtxt(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqRegion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }
  
  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }
  
  // optional int32 nParentId = 3;
  if (has_nparentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nparentid(), target);
  }
  
  // optional string strName = 4;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strname(), target);
  }
  
  // optional string strCode = 5;
  if (has_strcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcode(), target);
  }
  
  // optional string strInterAreaCode = 6;
  if (has_strinterareacode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strinterareacode().data(), this->strinterareacode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strinterareacode(), target);
  }
  
  // optional string strPath = 7;
  if (has_strpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpath().data(), this->strpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strpath(), target);
  }
  
  // optional int32 nSortId = 8;
  if (has_nsortid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nsortid(), target);
  }
  
  // optional string strTxt = 9;
  if (has_strtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtxt().data(), this->strtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strtxt(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqRegion::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }
    
    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 nParentId = 3;
    if (has_nparentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nparentid());
    }
    
    // optional string strName = 4;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }
    
    // optional string strCode = 5;
    if (has_strcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcode());
    }
    
    // optional string strInterAreaCode = 6;
    if (has_strinterareacode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strinterareacode());
    }
    
    // optional string strPath = 7;
    if (has_strpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpath());
    }
    
    // optional int32 nSortId = 8;
    if (has_nsortid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nsortid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string strTxt = 9;
    if (has_strtxt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtxt());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqRegion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqRegion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqRegion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqRegion::MergeFrom(const ReqRegion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_nparentid()) {
      set_nparentid(from.nparentid());
    }
    if (from.has_strname()) {
      set_strname(from.strname());
    }
    if (from.has_strcode()) {
      set_strcode(from.strcode());
    }
    if (from.has_strinterareacode()) {
      set_strinterareacode(from.strinterareacode());
    }
    if (from.has_strpath()) {
      set_strpath(from.strpath());
    }
    if (from.has_nsortid()) {
      set_nsortid(from.nsortid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strtxt()) {
      set_strtxt(from.strtxt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqRegion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRegion::CopyFrom(const ReqRegion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRegion::IsInitialized() const {
  
  return true;
}

void ReqRegion::Swap(ReqRegion* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(id_, other->id_);
    std::swap(nparentid_, other->nparentid_);
    std::swap(strname_, other->strname_);
    std::swap(strcode_, other->strcode_);
    std::swap(strinterareacode_, other->strinterareacode_);
    std::swap(strpath_, other->strpath_);
    std::swap(nsortid_, other->nsortid_);
    std::swap(strtxt_, other->strtxt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqRegion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqRegion_descriptor_;
  metadata.reflection = ReqRegion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Region::kIdFieldNumber;
const int Region::kNParentIdFieldNumber;
const int Region::kStrNameFieldNumber;
const int Region::kStrCodeFieldNumber;
const int Region::kStrInterAreaCodeFieldNumber;
const int Region::kStrPathFieldNumber;
const int Region::kNSortIdFieldNumber;
const int Region::kStrTxtFieldNumber;
#endif  // !_MSC_VER

Region::Region()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Region::InitAsDefaultInstance() {
}

Region::Region(const Region& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Region::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  nparentid_ = 0;
  strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strinterareacode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nsortid_ = 0;
  strtxt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Region::~Region() {
  SharedDtor();
}

void Region::SharedDtor() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strcode_ != &::google::protobuf::internal::kEmptyString) {
    delete strcode_;
  }
  if (strinterareacode_ != &::google::protobuf::internal::kEmptyString) {
    delete strinterareacode_;
  }
  if (strpath_ != &::google::protobuf::internal::kEmptyString) {
    delete strpath_;
  }
  if (strtxt_ != &::google::protobuf::internal::kEmptyString) {
    delete strtxt_;
  }
  if (this != default_instance_) {
  }
}

void Region::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Region::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Region_descriptor_;
}

const Region& Region::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_csclient_2fRegion_2eproto();  return *default_instance_;
}

Region* Region::default_instance_ = NULL;

Region* Region::New() const {
  return new Region;
}

void Region::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    nparentid_ = 0;
    if (has_strname()) {
      if (strname_ != &::google::protobuf::internal::kEmptyString) {
        strname_->clear();
      }
    }
    if (has_strcode()) {
      if (strcode_ != &::google::protobuf::internal::kEmptyString) {
        strcode_->clear();
      }
    }
    if (has_strinterareacode()) {
      if (strinterareacode_ != &::google::protobuf::internal::kEmptyString) {
        strinterareacode_->clear();
      }
    }
    if (has_strpath()) {
      if (strpath_ != &::google::protobuf::internal::kEmptyString) {
        strpath_->clear();
      }
    }
    nsortid_ = 0;
    if (has_strtxt()) {
      if (strtxt_ != &::google::protobuf::internal::kEmptyString) {
        strtxt_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Region::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nParentId;
        break;
      }
      
      // optional int32 nParentId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nParentId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nparentid_)));
          set_has_nparentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strName;
        break;
      }
      
      // optional string strName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strname().data(), this->strname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strCode;
        break;
      }
      
      // optional string strCode = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcode().data(), this->strcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strInterAreaCode;
        break;
      }
      
      // optional string strInterAreaCode = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strInterAreaCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strinterareacode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strinterareacode().data(), this->strinterareacode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strPath;
        break;
      }
      
      // optional string strPath = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpath().data(), this->strpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_nSortId;
        break;
      }
      
      // optional int32 nSortId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nSortId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsortid_)));
          set_has_nsortid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strTxt;
        break;
      }
      
      // optional string strTxt = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTxt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtxt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtxt().data(), this->strtxt().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Region::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 nParentId = 2;
  if (has_nparentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nparentid(), output);
  }
  
  // optional string strName = 3;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strname(), output);
  }
  
  // optional string strCode = 4;
  if (has_strcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strcode(), output);
  }
  
  // optional string strInterAreaCode = 5;
  if (has_strinterareacode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strinterareacode().data(), this->strinterareacode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strinterareacode(), output);
  }
  
  // optional string strPath = 6;
  if (has_strpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpath().data(), this->strpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strpath(), output);
  }
  
  // optional int32 nSortId = 7;
  if (has_nsortid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->nsortid(), output);
  }
  
  // optional string strTxt = 8;
  if (has_strtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtxt().data(), this->strtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strtxt(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Region::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 nParentId = 2;
  if (has_nparentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nparentid(), target);
  }
  
  // optional string strName = 3;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strname(), target);
  }
  
  // optional string strCode = 4;
  if (has_strcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strcode(), target);
  }
  
  // optional string strInterAreaCode = 5;
  if (has_strinterareacode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strinterareacode().data(), this->strinterareacode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strinterareacode(), target);
  }
  
  // optional string strPath = 6;
  if (has_strpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpath().data(), this->strpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strpath(), target);
  }
  
  // optional int32 nSortId = 7;
  if (has_nsortid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->nsortid(), target);
  }
  
  // optional string strTxt = 8;
  if (has_strtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtxt().data(), this->strtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strtxt(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Region::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 nParentId = 2;
    if (has_nparentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nparentid());
    }
    
    // optional string strName = 3;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }
    
    // optional string strCode = 4;
    if (has_strcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcode());
    }
    
    // optional string strInterAreaCode = 5;
    if (has_strinterareacode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strinterareacode());
    }
    
    // optional string strPath = 6;
    if (has_strpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpath());
    }
    
    // optional int32 nSortId = 7;
    if (has_nsortid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nsortid());
    }
    
    // optional string strTxt = 8;
    if (has_strtxt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtxt());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Region::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Region* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Region*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Region::MergeFrom(const Region& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_nparentid()) {
      set_nparentid(from.nparentid());
    }
    if (from.has_strname()) {
      set_strname(from.strname());
    }
    if (from.has_strcode()) {
      set_strcode(from.strcode());
    }
    if (from.has_strinterareacode()) {
      set_strinterareacode(from.strinterareacode());
    }
    if (from.has_strpath()) {
      set_strpath(from.strpath());
    }
    if (from.has_nsortid()) {
      set_nsortid(from.nsortid());
    }
    if (from.has_strtxt()) {
      set_strtxt(from.strtxt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Region::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Region::CopyFrom(const Region& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Region::IsInitialized() const {
  
  return true;
}

void Region::Swap(Region* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(nparentid_, other->nparentid_);
    std::swap(strname_, other->strname_);
    std::swap(strcode_, other->strcode_);
    std::swap(strinterareacode_, other->strinterareacode_);
    std::swap(strpath_, other->strpath_);
    std::swap(nsortid_, other->nsortid_);
    std::swap(strtxt_, other->strtxt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Region::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Region_descriptor_;
  metadata.reflection = Region_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RegionList::kCmdFieldNumber;
const int RegionList::kResultFieldNumber;
const int RegionList::kResultInfoFieldNumber;
const int RegionList::kRegionFieldNumber;
#endif  // !_MSC_VER

RegionList::RegionList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RegionList::InitAsDefaultInstance() {
}

RegionList::RegionList(const RegionList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RegionList::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  result_ = 0;
  result_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegionList::~RegionList() {
  SharedDtor();
}

void RegionList::SharedDtor() {
  if (result_info_ != &::google::protobuf::internal::kEmptyString) {
    delete result_info_;
  }
  if (this != default_instance_) {
  }
}

void RegionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionList_descriptor_;
}

const RegionList& RegionList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_csclient_2fRegion_2eproto();  return *default_instance_;
}

RegionList* RegionList::default_instance_ = NULL;

RegionList* RegionList::New() const {
  return new RegionList;
}

void RegionList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    result_ = 0;
    if (has_result_info()) {
      if (result_info_ != &::google::protobuf::internal::kEmptyString) {
        result_info_->clear();
      }
    }
  }
  region_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RegionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }
      
      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_result_info;
        break;
      }
      
      // optional string result_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result_info().data(), this->result_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_region;
        break;
      }
      
      // repeated .cms_8120.Region region = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_region()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_region;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RegionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }
  
  // optional string result_info = 3;
  if (has_result_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_info().data(), this->result_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->result_info(), output);
  }
  
  // repeated .cms_8120.Region region = 4;
  for (int i = 0; i < this->region_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->region(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RegionList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }
  
  // optional string result_info = 3;
  if (has_result_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_info().data(), this->result_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->result_info(), target);
  }
  
  // repeated .cms_8120.Region region = 4;
  for (int i = 0; i < this->region_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->region(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RegionList::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }
    
    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional string result_info = 3;
    if (has_result_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_info());
    }
    
  }
  // repeated .cms_8120.Region region = 4;
  total_size += 1 * this->region_size();
  for (int i = 0; i < this->region_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->region(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RegionList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RegionList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RegionList::MergeFrom(const RegionList& from) {
  GOOGLE_CHECK_NE(&from, this);
  region_.MergeFrom(from.region_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_result_info()) {
      set_result_info(from.result_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RegionList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionList::CopyFrom(const RegionList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionList::IsInitialized() const {
  
  return true;
}

void RegionList::Swap(RegionList* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(result_, other->result_);
    std::swap(result_info_, other->result_info_);
    region_.Swap(&other->region_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RegionList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionList_descriptor_;
  metadata.reflection = RegionList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cms_8120

// @@protoc_insertion_point(global_scope)
