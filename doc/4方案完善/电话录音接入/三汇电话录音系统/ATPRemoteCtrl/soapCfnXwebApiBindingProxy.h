/* soapCfnXwebApiBindingProxy.h
   Generated by gSOAP 2.8.3 from CfnXwebApi.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapCfnXwebApiBindingProxy_H
#define soapCfnXwebApiBindingProxy_H
#include "soapH.h"

class SOAP_CMAC CfnXwebApiBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'CfnXwebApiBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	CfnXwebApiBindingProxy();
	/// Constructor with copy of another engine state
	CfnXwebApiBindingProxy(const struct soap&);
	/// Constructor with endpoint URL
	CfnXwebApiBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	CfnXwebApiBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	CfnXwebApiBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	CfnXwebApiBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~CfnXwebApiBindingProxy();
	/// Initializer used by constructors
	virtual	void CfnXwebApiBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'DeleteFile' (returns error code or SOAP_OK)
	virtual	int DeleteFile(char *filename, bool &DeleteFileReturn) { return DeleteFile(NULL, NULL, filename, DeleteFileReturn); }
	virtual	int DeleteFile(const char *endpoint, const char *soap_action, char *filename, bool &DeleteFileReturn);

	/// Web service operation 'DelRecordFile' (returns error code or SOAP_OK)
	virtual	int DelRecordFile(char *StartDate, char *StartTime, char *EndDate, char *EndTime, int StartChnl, int EndChnl, int &DelRecordFileReturn) { return DelRecordFile(NULL, NULL, StartDate, StartTime, EndDate, EndTime, StartChnl, EndChnl, DelRecordFileReturn); }
	virtual	int DelRecordFile(const char *endpoint, const char *soap_action, char *StartDate, char *StartTime, char *EndDate, char *EndTime, int StartChnl, int EndChnl, int &DelRecordFileReturn);

	/// Web service operation 'ExecuteSQL' (returns error code or SOAP_OK)
	virtual	int ExecuteSQL(char *SqlQuerymsg, struct ns1__ExecuteSQLResponse &_param_1) { return ExecuteSQL(NULL, NULL, SqlQuerymsg, _param_1); }
	virtual	int ExecuteSQL(const char *endpoint, const char *soap_action, char *SqlQuerymsg, struct ns1__ExecuteSQLResponse &_param_1);

	/// Web service operation 'GetChannelCfg' (returns error code or SOAP_OK)
	virtual	int GetChannelCfg(int ChID, struct ns1__GetChannelCfgResponse &_param_2) { return GetChannelCfg(NULL, NULL, ChID, _param_2); }
	virtual	int GetChannelCfg(const char *endpoint, const char *soap_action, int ChID, struct ns1__GetChannelCfgResponse &_param_2);

	/// Web service operation 'GetChannelRunningStatus' (returns error code or SOAP_OK)
	virtual	int GetChannelRunningStatus(int ChID, struct ns1__GetChannelRunningStatusResponse &_param_3) { return GetChannelRunningStatus(NULL, NULL, ChID, _param_3); }
	virtual	int GetChannelRunningStatus(const char *endpoint, const char *soap_action, int ChID, struct ns1__GetChannelRunningStatusResponse &_param_3);

	/// Web service operation 'GetChannelStatus' (returns error code or SOAP_OK)
	virtual	int GetChannelStatus(struct ns1__GetChannelStatusResponse &_param_4) { return GetChannelStatus(NULL, NULL, _param_4); }
	virtual	int GetChannelStatus(const char *endpoint, const char *soap_action, struct ns1__GetChannelStatusResponse &_param_4);

	/// Web service operation 'GetDeviceTime' (returns error code or SOAP_OK)
	virtual	int GetDeviceTime(char *&GetDeviceTimeReturn) { return GetDeviceTime(NULL, NULL, GetDeviceTimeReturn); }
	virtual	int GetDeviceTime(const char *endpoint, const char *soap_action, char *&GetDeviceTimeReturn);

	/// Web service operation 'GetDevID' (returns error code or SOAP_OK)
	virtual	int GetDevID(char *&GetDevIDReturn) { return GetDevID(NULL, NULL, GetDevIDReturn); }
	virtual	int GetDevID(const char *endpoint, const char *soap_action, char *&GetDevIDReturn);

	/// Web service operation 'GetDiskFreeSpace' (returns error code or SOAP_OK)
	virtual	int GetDiskFreeSpace(struct ns1__GetDiskFreeSpaceResponse &_param_5) { return GetDiskFreeSpace(NULL, NULL, _param_5); }
	virtual	int GetDiskFreeSpace(const char *endpoint, const char *soap_action, struct ns1__GetDiskFreeSpaceResponse &_param_5);

	/// Web service operation 'GetGlobalCfg' (returns error code or SOAP_OK)
	virtual	int GetGlobalCfg(struct ns1__GetGlobalCfgResponse &_param_6) { return GetGlobalCfg(NULL, NULL, _param_6); }
	virtual	int GetGlobalCfg(const char *endpoint, const char *soap_action, struct ns1__GetGlobalCfgResponse &_param_6);

	/// Web service operation 'GetHardwareInfo' (returns error code or SOAP_OK)
	virtual	int GetHardwareInfo(struct ns1__GetHardwareInfoResponse &_param_7) { return GetHardwareInfo(NULL, NULL, _param_7); }
	virtual	int GetHardwareInfo(const char *endpoint, const char *soap_action, struct ns1__GetHardwareInfoResponse &_param_7);

	/// Web service operation 'GetLineVol' (returns error code or SOAP_OK)
	virtual	int GetLineVol(struct ns1__GetLineVolResponse &_param_8) { return GetLineVol(NULL, NULL, _param_8); }
	virtual	int GetLineVol(const char *endpoint, const char *soap_action, struct ns1__GetLineVolResponse &_param_8);

	/// Web service operation 'QueryRecord' (returns error code or SOAP_OK)
	virtual	int QueryRecord(char *StartDate, char *StartTime, char *EndDate, char *EndTime, int StartChnl, int EndChnl, int startindex, struct ns1__QueryRecordResponse &_param_9) { return QueryRecord(NULL, NULL, StartDate, StartTime, EndDate, EndTime, StartChnl, EndChnl, startindex, _param_9); }
	virtual	int QueryRecord(const char *endpoint, const char *soap_action, char *StartDate, char *StartTime, char *EndDate, char *EndTime, int StartChnl, int EndChnl, int startindex, struct ns1__QueryRecordResponse &_param_9);

	/// Web service operation 'RebootDevice' (returns error code or SOAP_OK)
	virtual	int RebootDevice(int cmd, bool &RebootDeviceReturn) { return RebootDevice(NULL, NULL, cmd, RebootDeviceReturn); }
	virtual	int RebootDevice(const char *endpoint, const char *soap_action, int cmd, bool &RebootDeviceReturn);

	/// Web service operation 'SetAdminPassword' (returns error code or SOAP_OK)
	virtual	int SetAdminPassword(char *OldPassword, char *NewPassword, bool &SetAdminPasswordReturn) { return SetAdminPassword(NULL, NULL, OldPassword, NewPassword, SetAdminPasswordReturn); }
	virtual	int SetAdminPassword(const char *endpoint, const char *soap_action, char *OldPassword, char *NewPassword, bool &SetAdminPasswordReturn);

	/// Web service operation 'SetChannelCfg' (returns error code or SOAP_OK)
	virtual	int SetChannelCfg(ns1__ChannelCfg *channelcfg, bool &SetChannelCfgReturn) { return SetChannelCfg(NULL, NULL, channelcfg, SetChannelCfgReturn); }
	virtual	int SetChannelCfg(const char *endpoint, const char *soap_action, ns1__ChannelCfg *channelcfg, bool &SetChannelCfgReturn);

	/// Web service operation 'SetDateTime' (returns error code or SOAP_OK)
	virtual	int SetDateTime(char *time, bool &SetDateTimeReturn) { return SetDateTime(NULL, NULL, time, SetDateTimeReturn); }
	virtual	int SetDateTime(const char *endpoint, const char *soap_action, char *time, bool &SetDateTimeReturn);

	/// Web service operation 'SetGlobalCfg' (returns error code or SOAP_OK)
	virtual	int SetGlobalCfg(ns1__GlobalCfg *globalset, bool &SetGlobalCfgReturn) { return SetGlobalCfg(NULL, NULL, globalset, SetGlobalCfgReturn); }
	virtual	int SetGlobalCfg(const char *endpoint, const char *soap_action, ns1__GlobalCfg *globalset, bool &SetGlobalCfgReturn);

	/// Web service operation 'SetNetCfg' (returns error code or SOAP_OK)
	virtual	int SetNetCfg(ns1__NetCfg *NetCfg, bool &SetNetCfgReturn) { return SetNetCfg(NULL, NULL, NetCfg, SetNetCfgReturn); }
	virtual	int SetNetCfg(const char *endpoint, const char *soap_action, ns1__NetCfg *NetCfg, bool &SetNetCfgReturn);

	/// Web service operation 'StartMonitor' (returns error code or SOAP_OK)
	virtual	int StartMonitor(ns1__MonitorInfo *monitorInfo, bool &StartMonitorReturn) { return StartMonitor(NULL, NULL, monitorInfo, StartMonitorReturn); }
	virtual	int StartMonitor(const char *endpoint, const char *soap_action, ns1__MonitorInfo *monitorInfo, bool &StartMonitorReturn);

	/// Web service operation 'StopMonitor' (returns error code or SOAP_OK)
	virtual	int StopMonitor(ns1__MonitorInfo *monitorInfo, bool &StopMonitorReturn) { return StopMonitor(NULL, NULL, monitorInfo, StopMonitorReturn); }
	virtual	int StopMonitor(const char *endpoint, const char *soap_action, ns1__MonitorInfo *monitorInfo, bool &StopMonitorReturn);

	/// Web service operation 'CheckMediaConnected' (returns error code or SOAP_OK)
	virtual	int CheckMediaConnected(int &CheckMediaConnectedResponse) { return CheckMediaConnected(NULL, NULL, CheckMediaConnectedResponse); }
	virtual	int CheckMediaConnected(const char *endpoint, const char *soap_action, int &CheckMediaConnectedResponse);

	/// Web service operation 'CheckMediaAvailable' (returns error code or SOAP_OK)
	virtual	int CheckMediaAvailable(int &CheckMediaAvailableResponse) { return CheckMediaAvailable(NULL, NULL, CheckMediaAvailableResponse); }
	virtual	int CheckMediaAvailable(const char *endpoint, const char *soap_action, int &CheckMediaAvailableResponse);

	/// Web service operation 'CalculateData' (returns error code or SOAP_OK)
	virtual	int CalculateData(ns1__CalculateInput *calInput, struct ns1__CalculateDataResponse &_param_10) { return CalculateData(NULL, NULL, calInput, _param_10); }
	virtual	int CalculateData(const char *endpoint, const char *soap_action, ns1__CalculateInput *calInput, struct ns1__CalculateDataResponse &_param_10);

	/// Web service operation 'WriteDVD' (returns error code or SOAP_OK)
	virtual	int WriteDVD(int &WriteDVDResponse) { return WriteDVD(NULL, NULL, WriteDVDResponse); }
	virtual	int WriteDVD(const char *endpoint, const char *soap_action, int &WriteDVDResponse);

	/// Web service operation 'SetWebPort' (returns error code or SOAP_OK)
	virtual	int SetWebPort(int WebPort, bool &SetWebPortResponse) { return SetWebPort(NULL, NULL, WebPort, SetWebPortResponse); }
	virtual	int SetWebPort(const char *endpoint, const char *soap_action, int WebPort, bool &SetWebPortResponse);

	/// Web service operation 'GetWebPort' (returns error code or SOAP_OK)
	virtual	int GetWebPort(int &GetWebPortResponse) { return GetWebPort(NULL, NULL, GetWebPortResponse); }
	virtual	int GetWebPort(const char *endpoint, const char *soap_action, int &GetWebPortResponse);
};
#endif
