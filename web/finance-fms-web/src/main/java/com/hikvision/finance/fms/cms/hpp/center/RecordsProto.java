// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center/Records.proto

package com.hikvision.finance.fms.cms.hpp.center;

public final class RecordsProto {
  private RecordsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RecordsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int32 nCollectRegionId = 2;
    boolean hasNCollectRegionId();
    int getNCollectRegionId();
    
    // optional int32 nUserID = 3;
    boolean hasNUserID();
    int getNUserID();
    
    // optional string strRecordName = 4;
    boolean hasStrRecordName();
    String getStrRecordName();
    
    // optional int32 nRecordType = 5;
    boolean hasNRecordType();
    int getNRecordType();
    
    // optional int32 nRecordFileType = 6;
    boolean hasNRecordFileType();
    int getNRecordFileType();
    
    // optional int32 nRecordStatus = 7;
    boolean hasNRecordStatus();
    int getNRecordStatus();
    
    // optional int32 nUploadPercent = 8;
    boolean hasNUploadPercent();
    int getNUploadPercent();
    
    // optional string startTime = 9 [default = "1970-01-01 00:00:00"];
    boolean hasStartTime();
    String getStartTime();
    
    // optional string endTime = 10 [default = "1970-01-01 00:00:00"];
    boolean hasEndTime();
    String getEndTime();
    
    // optional int32 nRecordBeginTime = 11;
    boolean hasNRecordBeginTime();
    int getNRecordBeginTime();
    
    // optional int32 nRecordEndTime = 12;
    boolean hasNRecordEndTime();
    int getNRecordEndTime();
    
    // optional string streamNo = 13;
    boolean hasStreamNo();
    String getStreamNo();
    
    // optional int32 nRepairDevId = 14;
    boolean hasNRepairDevId();
    int getNRepairDevId();
    
    // optional string strCollectIp = 15;
    boolean hasStrCollectIp();
    String getStrCollectIp();
    
    // optional int32 dvrPort = 16;
    boolean hasDvrPort();
    int getDvrPort();
    
    // optional string dvrUserName = 17;
    boolean hasDvrUserName();
    String getDvrUserName();
    
    // optional string dvrPwd = 18;
    boolean hasDvrPwd();
    String getDvrPwd();
    
    // optional int32 nCollectChan = 19;
    boolean hasNCollectChan();
    int getNCollectChan();
    
    // optional string strUrl = 20;
    boolean hasStrUrl();
    String getStrUrl();
    
    // optional string screenshotSrc = 21;
    boolean hasScreenshotSrc();
    String getScreenshotSrc();
    
    // optional string dtBusinessTime = 22 [default = "1970-01-01 00:00:00"];
    boolean hasDtBusinessTime();
    String getDtBusinessTime();
    
    // optional int32 nRecordLocalTime = 23;
    boolean hasNRecordLocalTime();
    int getNRecordLocalTime();
    
    // optional int32 nFileHeadLen = 24;
    boolean hasNFileHeadLen();
    int getNFileHeadLen();
    
    // optional int32 nCallerType = 25;
    boolean hasNCallerType();
    int getNCallerType();
    
    // optional string strCallerId = 26;
    boolean hasStrCallerId();
    String getStrCallerId();
    
    // optional int32 nRepairType = 27;
    boolean hasNRepairType();
    int getNRepairType();
    
    // optional int32 nRepairTime = 28;
    boolean hasNRepairTime();
    int getNRepairTime();
    
    // optional int32 nLinkOrderId = 29;
    boolean hasNLinkOrderId();
    int getNLinkOrderId();
    
    // optional int32 nLinkType = 30;
    boolean hasNLinkType();
    int getNLinkType();
    
    // optional int32 nManufacturerType = 31;
    boolean hasNManufacturerType();
    int getNManufacturerType();
    
    // optional int32 nFileSize = 32;
    boolean hasNFileSize();
    int getNFileSize();
    
    // optional int32 nTaskId = 33;
    boolean hasNTaskId();
    int getNTaskId();
    
    // optional string strIp = 34;
    boolean hasStrIp();
    String getStrIp();
    
    // optional string strCloudIp = 35;
    boolean hasStrCloudIp();
    String getStrCloudIp();
    
    // optional int32 nCloudPort = 36;
    boolean hasNCloudPort();
    int getNCloudPort();
    
    // optional string strAccessKey = 37;
    boolean hasStrAccessKey();
    String getStrAccessKey();
    
    // optional string strSecretKey = 38;
    boolean hasStrSecretKey();
    String getStrSecretKey();
    
    // optional string strBucket = 39;
    boolean hasStrBucket();
    String getStrBucket();
  }
  public static final class Records extends
      com.google.protobuf.GeneratedMessage
      implements RecordsOrBuilder {
    // Use Records.newBuilder() to construct.
    private Records(Builder builder) {
      super(builder);
    }
    private Records(boolean noInit) {}
    
    private static final Records defaultInstance;
    public static Records getDefaultInstance() {
      return defaultInstance;
    }
    
    public Records getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_Records_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_Records_fieldAccessorTable;
    }
    
    private int bitField0_;
    private int bitField1_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 nCollectRegionId = 2;
    public static final int NCOLLECTREGIONID_FIELD_NUMBER = 2;
    private int nCollectRegionId_;
    public boolean hasNCollectRegionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNCollectRegionId() {
      return nCollectRegionId_;
    }
    
    // optional int32 nUserID = 3;
    public static final int NUSERID_FIELD_NUMBER = 3;
    private int nUserID_;
    public boolean hasNUserID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getNUserID() {
      return nUserID_;
    }
    
    // optional string strRecordName = 4;
    public static final int STRRECORDNAME_FIELD_NUMBER = 4;
    private java.lang.Object strRecordName_;
    public boolean hasStrRecordName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getStrRecordName() {
      java.lang.Object ref = strRecordName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strRecordName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrRecordNameBytes() {
      java.lang.Object ref = strRecordName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strRecordName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nRecordType = 5;
    public static final int NRECORDTYPE_FIELD_NUMBER = 5;
    private int nRecordType_;
    public boolean hasNRecordType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getNRecordType() {
      return nRecordType_;
    }
    
    // optional int32 nRecordFileType = 6;
    public static final int NRECORDFILETYPE_FIELD_NUMBER = 6;
    private int nRecordFileType_;
    public boolean hasNRecordFileType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getNRecordFileType() {
      return nRecordFileType_;
    }
    
    // optional int32 nRecordStatus = 7;
    public static final int NRECORDSTATUS_FIELD_NUMBER = 7;
    private int nRecordStatus_;
    public boolean hasNRecordStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getNRecordStatus() {
      return nRecordStatus_;
    }
    
    // optional int32 nUploadPercent = 8;
    public static final int NUPLOADPERCENT_FIELD_NUMBER = 8;
    private int nUploadPercent_;
    public boolean hasNUploadPercent() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getNUploadPercent() {
      return nUploadPercent_;
    }
    
    // optional string startTime = 9 [default = "1970-01-01 00:00:00"];
    public static final int STARTTIME_FIELD_NUMBER = 9;
    private java.lang.Object startTime_;
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getStartTime() {
      java.lang.Object ref = startTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          startTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStartTimeBytes() {
      java.lang.Object ref = startTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        startTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string endTime = 10 [default = "1970-01-01 00:00:00"];
    public static final int ENDTIME_FIELD_NUMBER = 10;
    private java.lang.Object endTime_;
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getEndTime() {
      java.lang.Object ref = endTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          endTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEndTimeBytes() {
      java.lang.Object ref = endTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nRecordBeginTime = 11;
    public static final int NRECORDBEGINTIME_FIELD_NUMBER = 11;
    private int nRecordBeginTime_;
    public boolean hasNRecordBeginTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getNRecordBeginTime() {
      return nRecordBeginTime_;
    }
    
    // optional int32 nRecordEndTime = 12;
    public static final int NRECORDENDTIME_FIELD_NUMBER = 12;
    private int nRecordEndTime_;
    public boolean hasNRecordEndTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getNRecordEndTime() {
      return nRecordEndTime_;
    }
    
    // optional string streamNo = 13;
    public static final int STREAMNO_FIELD_NUMBER = 13;
    private java.lang.Object streamNo_;
    public boolean hasStreamNo() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public String getStreamNo() {
      java.lang.Object ref = streamNo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          streamNo_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStreamNoBytes() {
      java.lang.Object ref = streamNo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        streamNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nRepairDevId = 14;
    public static final int NREPAIRDEVID_FIELD_NUMBER = 14;
    private int nRepairDevId_;
    public boolean hasNRepairDevId() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getNRepairDevId() {
      return nRepairDevId_;
    }
    
    // optional string strCollectIp = 15;
    public static final int STRCOLLECTIP_FIELD_NUMBER = 15;
    private java.lang.Object strCollectIp_;
    public boolean hasStrCollectIp() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public String getStrCollectIp() {
      java.lang.Object ref = strCollectIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strCollectIp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrCollectIpBytes() {
      java.lang.Object ref = strCollectIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strCollectIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 dvrPort = 16;
    public static final int DVRPORT_FIELD_NUMBER = 16;
    private int dvrPort_;
    public boolean hasDvrPort() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getDvrPort() {
      return dvrPort_;
    }
    
    // optional string dvrUserName = 17;
    public static final int DVRUSERNAME_FIELD_NUMBER = 17;
    private java.lang.Object dvrUserName_;
    public boolean hasDvrUserName() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public String getDvrUserName() {
      java.lang.Object ref = dvrUserName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dvrUserName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDvrUserNameBytes() {
      java.lang.Object ref = dvrUserName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dvrUserName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string dvrPwd = 18;
    public static final int DVRPWD_FIELD_NUMBER = 18;
    private java.lang.Object dvrPwd_;
    public boolean hasDvrPwd() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public String getDvrPwd() {
      java.lang.Object ref = dvrPwd_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dvrPwd_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDvrPwdBytes() {
      java.lang.Object ref = dvrPwd_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dvrPwd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nCollectChan = 19;
    public static final int NCOLLECTCHAN_FIELD_NUMBER = 19;
    private int nCollectChan_;
    public boolean hasNCollectChan() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getNCollectChan() {
      return nCollectChan_;
    }
    
    // optional string strUrl = 20;
    public static final int STRURL_FIELD_NUMBER = 20;
    private java.lang.Object strUrl_;
    public boolean hasStrUrl() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public String getStrUrl() {
      java.lang.Object ref = strUrl_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strUrl_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrUrlBytes() {
      java.lang.Object ref = strUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string screenshotSrc = 21;
    public static final int SCREENSHOTSRC_FIELD_NUMBER = 21;
    private java.lang.Object screenshotSrc_;
    public boolean hasScreenshotSrc() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public String getScreenshotSrc() {
      java.lang.Object ref = screenshotSrc_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          screenshotSrc_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getScreenshotSrcBytes() {
      java.lang.Object ref = screenshotSrc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        screenshotSrc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string dtBusinessTime = 22 [default = "1970-01-01 00:00:00"];
    public static final int DTBUSINESSTIME_FIELD_NUMBER = 22;
    private java.lang.Object dtBusinessTime_;
    public boolean hasDtBusinessTime() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public String getDtBusinessTime() {
      java.lang.Object ref = dtBusinessTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dtBusinessTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDtBusinessTimeBytes() {
      java.lang.Object ref = dtBusinessTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dtBusinessTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nRecordLocalTime = 23;
    public static final int NRECORDLOCALTIME_FIELD_NUMBER = 23;
    private int nRecordLocalTime_;
    public boolean hasNRecordLocalTime() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public int getNRecordLocalTime() {
      return nRecordLocalTime_;
    }
    
    // optional int32 nFileHeadLen = 24;
    public static final int NFILEHEADLEN_FIELD_NUMBER = 24;
    private int nFileHeadLen_;
    public boolean hasNFileHeadLen() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public int getNFileHeadLen() {
      return nFileHeadLen_;
    }
    
    // optional int32 nCallerType = 25;
    public static final int NCALLERTYPE_FIELD_NUMBER = 25;
    private int nCallerType_;
    public boolean hasNCallerType() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public int getNCallerType() {
      return nCallerType_;
    }
    
    // optional string strCallerId = 26;
    public static final int STRCALLERID_FIELD_NUMBER = 26;
    private java.lang.Object strCallerId_;
    public boolean hasStrCallerId() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public String getStrCallerId() {
      java.lang.Object ref = strCallerId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strCallerId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrCallerIdBytes() {
      java.lang.Object ref = strCallerId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strCallerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nRepairType = 27;
    public static final int NREPAIRTYPE_FIELD_NUMBER = 27;
    private int nRepairType_;
    public boolean hasNRepairType() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    public int getNRepairType() {
      return nRepairType_;
    }
    
    // optional int32 nRepairTime = 28;
    public static final int NREPAIRTIME_FIELD_NUMBER = 28;
    private int nRepairTime_;
    public boolean hasNRepairTime() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    public int getNRepairTime() {
      return nRepairTime_;
    }
    
    // optional int32 nLinkOrderId = 29;
    public static final int NLINKORDERID_FIELD_NUMBER = 29;
    private int nLinkOrderId_;
    public boolean hasNLinkOrderId() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    public int getNLinkOrderId() {
      return nLinkOrderId_;
    }
    
    // optional int32 nLinkType = 30;
    public static final int NLINKTYPE_FIELD_NUMBER = 30;
    private int nLinkType_;
    public boolean hasNLinkType() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    public int getNLinkType() {
      return nLinkType_;
    }
    
    // optional int32 nManufacturerType = 31;
    public static final int NMANUFACTURERTYPE_FIELD_NUMBER = 31;
    private int nManufacturerType_;
    public boolean hasNManufacturerType() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    public int getNManufacturerType() {
      return nManufacturerType_;
    }
    
    // optional int32 nFileSize = 32;
    public static final int NFILESIZE_FIELD_NUMBER = 32;
    private int nFileSize_;
    public boolean hasNFileSize() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    public int getNFileSize() {
      return nFileSize_;
    }
    
    // optional int32 nTaskId = 33;
    public static final int NTASKID_FIELD_NUMBER = 33;
    private int nTaskId_;
    public boolean hasNTaskId() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    public int getNTaskId() {
      return nTaskId_;
    }
    
    // optional string strIp = 34;
    public static final int STRIP_FIELD_NUMBER = 34;
    private java.lang.Object strIp_;
    public boolean hasStrIp() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    public String getStrIp() {
      java.lang.Object ref = strIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strIp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrIpBytes() {
      java.lang.Object ref = strIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string strCloudIp = 35;
    public static final int STRCLOUDIP_FIELD_NUMBER = 35;
    private java.lang.Object strCloudIp_;
    public boolean hasStrCloudIp() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    public String getStrCloudIp() {
      java.lang.Object ref = strCloudIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strCloudIp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrCloudIpBytes() {
      java.lang.Object ref = strCloudIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strCloudIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nCloudPort = 36;
    public static final int NCLOUDPORT_FIELD_NUMBER = 36;
    private int nCloudPort_;
    public boolean hasNCloudPort() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    public int getNCloudPort() {
      return nCloudPort_;
    }
    
    // optional string strAccessKey = 37;
    public static final int STRACCESSKEY_FIELD_NUMBER = 37;
    private java.lang.Object strAccessKey_;
    public boolean hasStrAccessKey() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    public String getStrAccessKey() {
      java.lang.Object ref = strAccessKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strAccessKey_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrAccessKeyBytes() {
      java.lang.Object ref = strAccessKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strAccessKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string strSecretKey = 38;
    public static final int STRSECRETKEY_FIELD_NUMBER = 38;
    private java.lang.Object strSecretKey_;
    public boolean hasStrSecretKey() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    public String getStrSecretKey() {
      java.lang.Object ref = strSecretKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strSecretKey_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrSecretKeyBytes() {
      java.lang.Object ref = strSecretKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strSecretKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string strBucket = 39;
    public static final int STRBUCKET_FIELD_NUMBER = 39;
    private java.lang.Object strBucket_;
    public boolean hasStrBucket() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    public String getStrBucket() {
      java.lang.Object ref = strBucket_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strBucket_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrBucketBytes() {
      java.lang.Object ref = strBucket_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strBucket_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      id_ = 0;
      nCollectRegionId_ = 0;
      nUserID_ = 0;
      strRecordName_ = "";
      nRecordType_ = 0;
      nRecordFileType_ = 0;
      nRecordStatus_ = 0;
      nUploadPercent_ = 0;
      startTime_ = "1970-01-01 00:00:00";
      endTime_ = "1970-01-01 00:00:00";
      nRecordBeginTime_ = 0;
      nRecordEndTime_ = 0;
      streamNo_ = "";
      nRepairDevId_ = 0;
      strCollectIp_ = "";
      dvrPort_ = 0;
      dvrUserName_ = "";
      dvrPwd_ = "";
      nCollectChan_ = 0;
      strUrl_ = "";
      screenshotSrc_ = "";
      dtBusinessTime_ = "1970-01-01 00:00:00";
      nRecordLocalTime_ = 0;
      nFileHeadLen_ = 0;
      nCallerType_ = 0;
      strCallerId_ = "";
      nRepairType_ = 0;
      nRepairTime_ = 0;
      nLinkOrderId_ = 0;
      nLinkType_ = 0;
      nManufacturerType_ = 0;
      nFileSize_ = 0;
      nTaskId_ = 0;
      strIp_ = "";
      strCloudIp_ = "";
      nCloudPort_ = 0;
      strAccessKey_ = "";
      strSecretKey_ = "";
      strBucket_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, nCollectRegionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, nUserID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getStrRecordNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, nRecordType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, nRecordFileType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, nRecordStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, nUploadPercent_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, nRecordBeginTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, nRecordEndTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getStreamNoBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, nRepairDevId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getStrCollectIpBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, dvrPort_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(17, getDvrUserNameBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(18, getDvrPwdBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, nCollectChan_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(20, getStrUrlBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBytes(21, getScreenshotSrcBytes());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(22, getDtBusinessTimeBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, nRecordLocalTime_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, nFileHeadLen_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, nCallerType_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBytes(26, getStrCallerIdBytes());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, nRepairType_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, nRepairTime_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, nLinkOrderId_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, nLinkType_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, nManufacturerType_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(32, nFileSize_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, nTaskId_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(34, getStrIpBytes());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(35, getStrCloudIpBytes());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, nCloudPort_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(37, getStrAccessKeyBytes());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(38, getStrSecretKeyBytes());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(39, getStrBucketBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nCollectRegionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, nUserID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getStrRecordNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nRecordType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, nRecordFileType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, nRecordStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, nUploadPercent_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, nRecordBeginTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, nRecordEndTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getStreamNoBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, nRepairDevId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getStrCollectIpBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, dvrPort_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getDvrUserNameBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getDvrPwdBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, nCollectChan_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, getStrUrlBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getScreenshotSrcBytes());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(22, getDtBusinessTimeBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, nRecordLocalTime_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, nFileHeadLen_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, nCallerType_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(26, getStrCallerIdBytes());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, nRepairType_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, nRepairTime_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, nLinkOrderId_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, nLinkType_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, nManufacturerType_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, nFileSize_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, nTaskId_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(34, getStrIpBytes());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(35, getStrCloudIpBytes());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, nCloudPort_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(37, getStrAccessKeyBytes());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(38, getStrSecretKeyBytes());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(39, getStrBucketBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_Records_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_Records_fieldAccessorTable;
      }
      
      // Construct using com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nCollectRegionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        nUserID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        strRecordName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        nRecordType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        nRecordFileType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        nRecordStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        nUploadPercent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        startTime_ = "1970-01-01 00:00:00";
        bitField0_ = (bitField0_ & ~0x00000100);
        endTime_ = "1970-01-01 00:00:00";
        bitField0_ = (bitField0_ & ~0x00000200);
        nRecordBeginTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        nRecordEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        streamNo_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        nRepairDevId_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        strCollectIp_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        dvrPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        dvrUserName_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        dvrPwd_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        nCollectChan_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        strUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        screenshotSrc_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        dtBusinessTime_ = "1970-01-01 00:00:00";
        bitField0_ = (bitField0_ & ~0x00200000);
        nRecordLocalTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        nFileHeadLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        nCallerType_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        strCallerId_ = "";
        bitField0_ = (bitField0_ & ~0x02000000);
        nRepairType_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        nRepairTime_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        nLinkOrderId_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        nLinkType_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        nManufacturerType_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        nFileSize_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        nTaskId_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        strIp_ = "";
        bitField1_ = (bitField1_ & ~0x00000002);
        strCloudIp_ = "";
        bitField1_ = (bitField1_ & ~0x00000004);
        nCloudPort_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        strAccessKey_ = "";
        bitField1_ = (bitField1_ & ~0x00000010);
        strSecretKey_ = "";
        bitField1_ = (bitField1_ & ~0x00000020);
        strBucket_ = "";
        bitField1_ = (bitField1_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.getDescriptor();
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records getDefaultInstanceForType() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.getDefaultInstance();
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records build() {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records buildPartial() {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records result = new com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nCollectRegionId_ = nCollectRegionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nUserID_ = nUserID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.strRecordName_ = strRecordName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nRecordType_ = nRecordType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nRecordFileType_ = nRecordFileType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.nRecordStatus_ = nRecordStatus_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.nUploadPercent_ = nUploadPercent_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.nRecordBeginTime_ = nRecordBeginTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.nRecordEndTime_ = nRecordEndTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.streamNo_ = streamNo_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.nRepairDevId_ = nRepairDevId_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.strCollectIp_ = strCollectIp_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.dvrPort_ = dvrPort_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.dvrUserName_ = dvrUserName_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.dvrPwd_ = dvrPwd_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.nCollectChan_ = nCollectChan_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.strUrl_ = strUrl_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.screenshotSrc_ = screenshotSrc_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.dtBusinessTime_ = dtBusinessTime_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.nRecordLocalTime_ = nRecordLocalTime_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.nFileHeadLen_ = nFileHeadLen_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.nCallerType_ = nCallerType_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.strCallerId_ = strCallerId_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.nRepairType_ = nRepairType_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.nRepairTime_ = nRepairTime_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.nLinkOrderId_ = nLinkOrderId_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.nLinkType_ = nLinkType_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.nManufacturerType_ = nManufacturerType_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.nFileSize_ = nFileSize_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.nTaskId_ = nTaskId_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.strIp_ = strIp_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.strCloudIp_ = strCloudIp_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.nCloudPort_ = nCloudPort_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.strAccessKey_ = strAccessKey_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.strSecretKey_ = strSecretKey_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.strBucket_ = strBucket_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records) {
          return mergeFrom((com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records other) {
        if (other == com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasNCollectRegionId()) {
          setNCollectRegionId(other.getNCollectRegionId());
        }
        if (other.hasNUserID()) {
          setNUserID(other.getNUserID());
        }
        if (other.hasStrRecordName()) {
          setStrRecordName(other.getStrRecordName());
        }
        if (other.hasNRecordType()) {
          setNRecordType(other.getNRecordType());
        }
        if (other.hasNRecordFileType()) {
          setNRecordFileType(other.getNRecordFileType());
        }
        if (other.hasNRecordStatus()) {
          setNRecordStatus(other.getNRecordStatus());
        }
        if (other.hasNUploadPercent()) {
          setNUploadPercent(other.getNUploadPercent());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasNRecordBeginTime()) {
          setNRecordBeginTime(other.getNRecordBeginTime());
        }
        if (other.hasNRecordEndTime()) {
          setNRecordEndTime(other.getNRecordEndTime());
        }
        if (other.hasStreamNo()) {
          setStreamNo(other.getStreamNo());
        }
        if (other.hasNRepairDevId()) {
          setNRepairDevId(other.getNRepairDevId());
        }
        if (other.hasStrCollectIp()) {
          setStrCollectIp(other.getStrCollectIp());
        }
        if (other.hasDvrPort()) {
          setDvrPort(other.getDvrPort());
        }
        if (other.hasDvrUserName()) {
          setDvrUserName(other.getDvrUserName());
        }
        if (other.hasDvrPwd()) {
          setDvrPwd(other.getDvrPwd());
        }
        if (other.hasNCollectChan()) {
          setNCollectChan(other.getNCollectChan());
        }
        if (other.hasStrUrl()) {
          setStrUrl(other.getStrUrl());
        }
        if (other.hasScreenshotSrc()) {
          setScreenshotSrc(other.getScreenshotSrc());
        }
        if (other.hasDtBusinessTime()) {
          setDtBusinessTime(other.getDtBusinessTime());
        }
        if (other.hasNRecordLocalTime()) {
          setNRecordLocalTime(other.getNRecordLocalTime());
        }
        if (other.hasNFileHeadLen()) {
          setNFileHeadLen(other.getNFileHeadLen());
        }
        if (other.hasNCallerType()) {
          setNCallerType(other.getNCallerType());
        }
        if (other.hasStrCallerId()) {
          setStrCallerId(other.getStrCallerId());
        }
        if (other.hasNRepairType()) {
          setNRepairType(other.getNRepairType());
        }
        if (other.hasNRepairTime()) {
          setNRepairTime(other.getNRepairTime());
        }
        if (other.hasNLinkOrderId()) {
          setNLinkOrderId(other.getNLinkOrderId());
        }
        if (other.hasNLinkType()) {
          setNLinkType(other.getNLinkType());
        }
        if (other.hasNManufacturerType()) {
          setNManufacturerType(other.getNManufacturerType());
        }
        if (other.hasNFileSize()) {
          setNFileSize(other.getNFileSize());
        }
        if (other.hasNTaskId()) {
          setNTaskId(other.getNTaskId());
        }
        if (other.hasStrIp()) {
          setStrIp(other.getStrIp());
        }
        if (other.hasStrCloudIp()) {
          setStrCloudIp(other.getStrCloudIp());
        }
        if (other.hasNCloudPort()) {
          setNCloudPort(other.getNCloudPort());
        }
        if (other.hasStrAccessKey()) {
          setStrAccessKey(other.getStrAccessKey());
        }
        if (other.hasStrSecretKey()) {
          setStrSecretKey(other.getStrSecretKey());
        }
        if (other.hasStrBucket()) {
          setStrBucket(other.getStrBucket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nCollectRegionId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              nUserID_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              strRecordName_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nRecordType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              nRecordFileType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              nRecordStatus_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              nUploadPercent_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              startTime_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              endTime_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              nRecordBeginTime_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              nRecordEndTime_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              streamNo_ = input.readBytes();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              nRepairDevId_ = input.readInt32();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              strCollectIp_ = input.readBytes();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              dvrPort_ = input.readInt32();
              break;
            }
            case 138: {
              bitField0_ |= 0x00010000;
              dvrUserName_ = input.readBytes();
              break;
            }
            case 146: {
              bitField0_ |= 0x00020000;
              dvrPwd_ = input.readBytes();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              nCollectChan_ = input.readInt32();
              break;
            }
            case 162: {
              bitField0_ |= 0x00080000;
              strUrl_ = input.readBytes();
              break;
            }
            case 170: {
              bitField0_ |= 0x00100000;
              screenshotSrc_ = input.readBytes();
              break;
            }
            case 178: {
              bitField0_ |= 0x00200000;
              dtBusinessTime_ = input.readBytes();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              nRecordLocalTime_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              nFileHeadLen_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              nCallerType_ = input.readInt32();
              break;
            }
            case 210: {
              bitField0_ |= 0x02000000;
              strCallerId_ = input.readBytes();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              nRepairType_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              nRepairTime_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              nLinkOrderId_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              nLinkType_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              nManufacturerType_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              nFileSize_ = input.readInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              nTaskId_ = input.readInt32();
              break;
            }
            case 274: {
              bitField1_ |= 0x00000002;
              strIp_ = input.readBytes();
              break;
            }
            case 282: {
              bitField1_ |= 0x00000004;
              strCloudIp_ = input.readBytes();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              nCloudPort_ = input.readInt32();
              break;
            }
            case 298: {
              bitField1_ |= 0x00000010;
              strAccessKey_ = input.readBytes();
              break;
            }
            case 306: {
              bitField1_ |= 0x00000020;
              strSecretKey_ = input.readBytes();
              break;
            }
            case 314: {
              bitField1_ |= 0x00000040;
              strBucket_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      private int bitField1_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nCollectRegionId = 2;
      private int nCollectRegionId_ ;
      public boolean hasNCollectRegionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNCollectRegionId() {
        return nCollectRegionId_;
      }
      public Builder setNCollectRegionId(int value) {
        bitField0_ |= 0x00000002;
        nCollectRegionId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNCollectRegionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nCollectRegionId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nUserID = 3;
      private int nUserID_ ;
      public boolean hasNUserID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getNUserID() {
        return nUserID_;
      }
      public Builder setNUserID(int value) {
        bitField0_ |= 0x00000004;
        nUserID_ = value;
        onChanged();
        return this;
      }
      public Builder clearNUserID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nUserID_ = 0;
        onChanged();
        return this;
      }
      
      // optional string strRecordName = 4;
      private java.lang.Object strRecordName_ = "";
      public boolean hasStrRecordName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getStrRecordName() {
        java.lang.Object ref = strRecordName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strRecordName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrRecordName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        strRecordName_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrRecordName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        strRecordName_ = getDefaultInstance().getStrRecordName();
        onChanged();
        return this;
      }
      void setStrRecordName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        strRecordName_ = value;
        onChanged();
      }
      
      // optional int32 nRecordType = 5;
      private int nRecordType_ ;
      public boolean hasNRecordType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getNRecordType() {
        return nRecordType_;
      }
      public Builder setNRecordType(int value) {
        bitField0_ |= 0x00000010;
        nRecordType_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRecordType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nRecordType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nRecordFileType = 6;
      private int nRecordFileType_ ;
      public boolean hasNRecordFileType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getNRecordFileType() {
        return nRecordFileType_;
      }
      public Builder setNRecordFileType(int value) {
        bitField0_ |= 0x00000020;
        nRecordFileType_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRecordFileType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nRecordFileType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nRecordStatus = 7;
      private int nRecordStatus_ ;
      public boolean hasNRecordStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getNRecordStatus() {
        return nRecordStatus_;
      }
      public Builder setNRecordStatus(int value) {
        bitField0_ |= 0x00000040;
        nRecordStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRecordStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        nRecordStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nUploadPercent = 8;
      private int nUploadPercent_ ;
      public boolean hasNUploadPercent() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getNUploadPercent() {
        return nUploadPercent_;
      }
      public Builder setNUploadPercent(int value) {
        bitField0_ |= 0x00000080;
        nUploadPercent_ = value;
        onChanged();
        return this;
      }
      public Builder clearNUploadPercent() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nUploadPercent_ = 0;
        onChanged();
        return this;
      }
      
      // optional string startTime = 9 [default = "1970-01-01 00:00:00"];
      private java.lang.Object startTime_ = "1970-01-01 00:00:00";
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getStartTime() {
        java.lang.Object ref = startTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          startTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStartTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        startTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        startTime_ = getDefaultInstance().getStartTime();
        onChanged();
        return this;
      }
      void setStartTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        startTime_ = value;
        onChanged();
      }
      
      // optional string endTime = 10 [default = "1970-01-01 00:00:00"];
      private java.lang.Object endTime_ = "1970-01-01 00:00:00";
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getEndTime() {
        java.lang.Object ref = endTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          endTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEndTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        endTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        endTime_ = getDefaultInstance().getEndTime();
        onChanged();
        return this;
      }
      void setEndTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        endTime_ = value;
        onChanged();
      }
      
      // optional int32 nRecordBeginTime = 11;
      private int nRecordBeginTime_ ;
      public boolean hasNRecordBeginTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getNRecordBeginTime() {
        return nRecordBeginTime_;
      }
      public Builder setNRecordBeginTime(int value) {
        bitField0_ |= 0x00000400;
        nRecordBeginTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRecordBeginTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        nRecordBeginTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nRecordEndTime = 12;
      private int nRecordEndTime_ ;
      public boolean hasNRecordEndTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getNRecordEndTime() {
        return nRecordEndTime_;
      }
      public Builder setNRecordEndTime(int value) {
        bitField0_ |= 0x00000800;
        nRecordEndTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRecordEndTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        nRecordEndTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional string streamNo = 13;
      private java.lang.Object streamNo_ = "";
      public boolean hasStreamNo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getStreamNo() {
        java.lang.Object ref = streamNo_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          streamNo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStreamNo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        streamNo_ = value;
        onChanged();
        return this;
      }
      public Builder clearStreamNo() {
        bitField0_ = (bitField0_ & ~0x00001000);
        streamNo_ = getDefaultInstance().getStreamNo();
        onChanged();
        return this;
      }
      void setStreamNo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        streamNo_ = value;
        onChanged();
      }
      
      // optional int32 nRepairDevId = 14;
      private int nRepairDevId_ ;
      public boolean hasNRepairDevId() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getNRepairDevId() {
        return nRepairDevId_;
      }
      public Builder setNRepairDevId(int value) {
        bitField0_ |= 0x00002000;
        nRepairDevId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRepairDevId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        nRepairDevId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string strCollectIp = 15;
      private java.lang.Object strCollectIp_ = "";
      public boolean hasStrCollectIp() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getStrCollectIp() {
        java.lang.Object ref = strCollectIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strCollectIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrCollectIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        strCollectIp_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrCollectIp() {
        bitField0_ = (bitField0_ & ~0x00004000);
        strCollectIp_ = getDefaultInstance().getStrCollectIp();
        onChanged();
        return this;
      }
      void setStrCollectIp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        strCollectIp_ = value;
        onChanged();
      }
      
      // optional int32 dvrPort = 16;
      private int dvrPort_ ;
      public boolean hasDvrPort() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getDvrPort() {
        return dvrPort_;
      }
      public Builder setDvrPort(int value) {
        bitField0_ |= 0x00008000;
        dvrPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearDvrPort() {
        bitField0_ = (bitField0_ & ~0x00008000);
        dvrPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional string dvrUserName = 17;
      private java.lang.Object dvrUserName_ = "";
      public boolean hasDvrUserName() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public String getDvrUserName() {
        java.lang.Object ref = dvrUserName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dvrUserName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDvrUserName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        dvrUserName_ = value;
        onChanged();
        return this;
      }
      public Builder clearDvrUserName() {
        bitField0_ = (bitField0_ & ~0x00010000);
        dvrUserName_ = getDefaultInstance().getDvrUserName();
        onChanged();
        return this;
      }
      void setDvrUserName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00010000;
        dvrUserName_ = value;
        onChanged();
      }
      
      // optional string dvrPwd = 18;
      private java.lang.Object dvrPwd_ = "";
      public boolean hasDvrPwd() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public String getDvrPwd() {
        java.lang.Object ref = dvrPwd_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dvrPwd_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDvrPwd(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        dvrPwd_ = value;
        onChanged();
        return this;
      }
      public Builder clearDvrPwd() {
        bitField0_ = (bitField0_ & ~0x00020000);
        dvrPwd_ = getDefaultInstance().getDvrPwd();
        onChanged();
        return this;
      }
      void setDvrPwd(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00020000;
        dvrPwd_ = value;
        onChanged();
      }
      
      // optional int32 nCollectChan = 19;
      private int nCollectChan_ ;
      public boolean hasNCollectChan() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getNCollectChan() {
        return nCollectChan_;
      }
      public Builder setNCollectChan(int value) {
        bitField0_ |= 0x00040000;
        nCollectChan_ = value;
        onChanged();
        return this;
      }
      public Builder clearNCollectChan() {
        bitField0_ = (bitField0_ & ~0x00040000);
        nCollectChan_ = 0;
        onChanged();
        return this;
      }
      
      // optional string strUrl = 20;
      private java.lang.Object strUrl_ = "";
      public boolean hasStrUrl() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public String getStrUrl() {
        java.lang.Object ref = strUrl_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strUrl_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrUrl(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        strUrl_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrUrl() {
        bitField0_ = (bitField0_ & ~0x00080000);
        strUrl_ = getDefaultInstance().getStrUrl();
        onChanged();
        return this;
      }
      void setStrUrl(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00080000;
        strUrl_ = value;
        onChanged();
      }
      
      // optional string screenshotSrc = 21;
      private java.lang.Object screenshotSrc_ = "";
      public boolean hasScreenshotSrc() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public String getScreenshotSrc() {
        java.lang.Object ref = screenshotSrc_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          screenshotSrc_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setScreenshotSrc(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        screenshotSrc_ = value;
        onChanged();
        return this;
      }
      public Builder clearScreenshotSrc() {
        bitField0_ = (bitField0_ & ~0x00100000);
        screenshotSrc_ = getDefaultInstance().getScreenshotSrc();
        onChanged();
        return this;
      }
      void setScreenshotSrc(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00100000;
        screenshotSrc_ = value;
        onChanged();
      }
      
      // optional string dtBusinessTime = 22 [default = "1970-01-01 00:00:00"];
      private java.lang.Object dtBusinessTime_ = "1970-01-01 00:00:00";
      public boolean hasDtBusinessTime() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public String getDtBusinessTime() {
        java.lang.Object ref = dtBusinessTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dtBusinessTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDtBusinessTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        dtBusinessTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearDtBusinessTime() {
        bitField0_ = (bitField0_ & ~0x00200000);
        dtBusinessTime_ = getDefaultInstance().getDtBusinessTime();
        onChanged();
        return this;
      }
      void setDtBusinessTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00200000;
        dtBusinessTime_ = value;
        onChanged();
      }
      
      // optional int32 nRecordLocalTime = 23;
      private int nRecordLocalTime_ ;
      public boolean hasNRecordLocalTime() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getNRecordLocalTime() {
        return nRecordLocalTime_;
      }
      public Builder setNRecordLocalTime(int value) {
        bitField0_ |= 0x00400000;
        nRecordLocalTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRecordLocalTime() {
        bitField0_ = (bitField0_ & ~0x00400000);
        nRecordLocalTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nFileHeadLen = 24;
      private int nFileHeadLen_ ;
      public boolean hasNFileHeadLen() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public int getNFileHeadLen() {
        return nFileHeadLen_;
      }
      public Builder setNFileHeadLen(int value) {
        bitField0_ |= 0x00800000;
        nFileHeadLen_ = value;
        onChanged();
        return this;
      }
      public Builder clearNFileHeadLen() {
        bitField0_ = (bitField0_ & ~0x00800000);
        nFileHeadLen_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nCallerType = 25;
      private int nCallerType_ ;
      public boolean hasNCallerType() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public int getNCallerType() {
        return nCallerType_;
      }
      public Builder setNCallerType(int value) {
        bitField0_ |= 0x01000000;
        nCallerType_ = value;
        onChanged();
        return this;
      }
      public Builder clearNCallerType() {
        bitField0_ = (bitField0_ & ~0x01000000);
        nCallerType_ = 0;
        onChanged();
        return this;
      }
      
      // optional string strCallerId = 26;
      private java.lang.Object strCallerId_ = "";
      public boolean hasStrCallerId() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      public String getStrCallerId() {
        java.lang.Object ref = strCallerId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strCallerId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrCallerId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
        strCallerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrCallerId() {
        bitField0_ = (bitField0_ & ~0x02000000);
        strCallerId_ = getDefaultInstance().getStrCallerId();
        onChanged();
        return this;
      }
      void setStrCallerId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x02000000;
        strCallerId_ = value;
        onChanged();
      }
      
      // optional int32 nRepairType = 27;
      private int nRepairType_ ;
      public boolean hasNRepairType() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      public int getNRepairType() {
        return nRepairType_;
      }
      public Builder setNRepairType(int value) {
        bitField0_ |= 0x04000000;
        nRepairType_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRepairType() {
        bitField0_ = (bitField0_ & ~0x04000000);
        nRepairType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nRepairTime = 28;
      private int nRepairTime_ ;
      public boolean hasNRepairTime() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      public int getNRepairTime() {
        return nRepairTime_;
      }
      public Builder setNRepairTime(int value) {
        bitField0_ |= 0x08000000;
        nRepairTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRepairTime() {
        bitField0_ = (bitField0_ & ~0x08000000);
        nRepairTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nLinkOrderId = 29;
      private int nLinkOrderId_ ;
      public boolean hasNLinkOrderId() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      public int getNLinkOrderId() {
        return nLinkOrderId_;
      }
      public Builder setNLinkOrderId(int value) {
        bitField0_ |= 0x10000000;
        nLinkOrderId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNLinkOrderId() {
        bitField0_ = (bitField0_ & ~0x10000000);
        nLinkOrderId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nLinkType = 30;
      private int nLinkType_ ;
      public boolean hasNLinkType() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      public int getNLinkType() {
        return nLinkType_;
      }
      public Builder setNLinkType(int value) {
        bitField0_ |= 0x20000000;
        nLinkType_ = value;
        onChanged();
        return this;
      }
      public Builder clearNLinkType() {
        bitField0_ = (bitField0_ & ~0x20000000);
        nLinkType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nManufacturerType = 31;
      private int nManufacturerType_ ;
      public boolean hasNManufacturerType() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      public int getNManufacturerType() {
        return nManufacturerType_;
      }
      public Builder setNManufacturerType(int value) {
        bitField0_ |= 0x40000000;
        nManufacturerType_ = value;
        onChanged();
        return this;
      }
      public Builder clearNManufacturerType() {
        bitField0_ = (bitField0_ & ~0x40000000);
        nManufacturerType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nFileSize = 32;
      private int nFileSize_ ;
      public boolean hasNFileSize() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      public int getNFileSize() {
        return nFileSize_;
      }
      public Builder setNFileSize(int value) {
        bitField0_ |= 0x80000000;
        nFileSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearNFileSize() {
        bitField0_ = (bitField0_ & ~0x80000000);
        nFileSize_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nTaskId = 33;
      private int nTaskId_ ;
      public boolean hasNTaskId() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      public int getNTaskId() {
        return nTaskId_;
      }
      public Builder setNTaskId(int value) {
        bitField1_ |= 0x00000001;
        nTaskId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNTaskId() {
        bitField1_ = (bitField1_ & ~0x00000001);
        nTaskId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string strIp = 34;
      private java.lang.Object strIp_ = "";
      public boolean hasStrIp() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      public String getStrIp() {
        java.lang.Object ref = strIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
        strIp_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrIp() {
        bitField1_ = (bitField1_ & ~0x00000002);
        strIp_ = getDefaultInstance().getStrIp();
        onChanged();
        return this;
      }
      void setStrIp(com.google.protobuf.ByteString value) {
        bitField1_ |= 0x00000002;
        strIp_ = value;
        onChanged();
      }
      
      // optional string strCloudIp = 35;
      private java.lang.Object strCloudIp_ = "";
      public boolean hasStrCloudIp() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      public String getStrCloudIp() {
        java.lang.Object ref = strCloudIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strCloudIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrCloudIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
        strCloudIp_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrCloudIp() {
        bitField1_ = (bitField1_ & ~0x00000004);
        strCloudIp_ = getDefaultInstance().getStrCloudIp();
        onChanged();
        return this;
      }
      void setStrCloudIp(com.google.protobuf.ByteString value) {
        bitField1_ |= 0x00000004;
        strCloudIp_ = value;
        onChanged();
      }
      
      // optional int32 nCloudPort = 36;
      private int nCloudPort_ ;
      public boolean hasNCloudPort() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      public int getNCloudPort() {
        return nCloudPort_;
      }
      public Builder setNCloudPort(int value) {
        bitField1_ |= 0x00000008;
        nCloudPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearNCloudPort() {
        bitField1_ = (bitField1_ & ~0x00000008);
        nCloudPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional string strAccessKey = 37;
      private java.lang.Object strAccessKey_ = "";
      public boolean hasStrAccessKey() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      public String getStrAccessKey() {
        java.lang.Object ref = strAccessKey_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strAccessKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrAccessKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
        strAccessKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrAccessKey() {
        bitField1_ = (bitField1_ & ~0x00000010);
        strAccessKey_ = getDefaultInstance().getStrAccessKey();
        onChanged();
        return this;
      }
      void setStrAccessKey(com.google.protobuf.ByteString value) {
        bitField1_ |= 0x00000010;
        strAccessKey_ = value;
        onChanged();
      }
      
      // optional string strSecretKey = 38;
      private java.lang.Object strSecretKey_ = "";
      public boolean hasStrSecretKey() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      public String getStrSecretKey() {
        java.lang.Object ref = strSecretKey_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strSecretKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrSecretKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
        strSecretKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrSecretKey() {
        bitField1_ = (bitField1_ & ~0x00000020);
        strSecretKey_ = getDefaultInstance().getStrSecretKey();
        onChanged();
        return this;
      }
      void setStrSecretKey(com.google.protobuf.ByteString value) {
        bitField1_ |= 0x00000020;
        strSecretKey_ = value;
        onChanged();
      }
      
      // optional string strBucket = 39;
      private java.lang.Object strBucket_ = "";
      public boolean hasStrBucket() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      public String getStrBucket() {
        java.lang.Object ref = strBucket_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strBucket_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrBucket(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000040;
        strBucket_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrBucket() {
        bitField1_ = (bitField1_ & ~0x00000040);
        strBucket_ = getDefaultInstance().getStrBucket();
        onChanged();
        return this;
      }
      void setStrBucket(com.google.protobuf.ByteString value) {
        bitField1_ |= 0x00000040;
        strBucket_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:cms_8120.Records)
    }
    
    static {
      defaultInstance = new Records(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cms_8120.Records)
  }
  
  public interface ReqRecordsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 cmd = 1;
    boolean hasCmd();
    int getCmd();
    
    // optional int32 id = 2;
    boolean hasId();
    int getId();
    
    // optional int32 nRecordStatus = 3;
    boolean hasNRecordStatus();
    int getNRecordStatus();
    
    // optional int32 nUpLoadPercent = 4;
    boolean hasNUpLoadPercent();
    int getNUpLoadPercent();
    
    // optional int32 nTaskId = 5;
    boolean hasNTaskId();
    int getNTaskId();
    
    // optional string streamNo = 6;
    boolean hasStreamNo();
    String getStreamNo();
    
    // optional string rtspPath = 7;
    boolean hasRtspPath();
    String getRtspPath();
    
    // optional int32 nFileSize = 8;
    boolean hasNFileSize();
    int getNFileSize();
    
    // optional string errorMsg = 9;
    boolean hasErrorMsg();
    String getErrorMsg();
    
    // optional string startTime = 10;
    boolean hasStartTime();
    String getStartTime();
    
    // optional string endTime = 11;
    boolean hasEndTime();
    String getEndTime();
  }
  public static final class ReqRecords extends
      com.google.protobuf.GeneratedMessage
      implements ReqRecordsOrBuilder {
    // Use ReqRecords.newBuilder() to construct.
    private ReqRecords(Builder builder) {
      super(builder);
    }
    private ReqRecords(boolean noInit) {}
    
    private static final ReqRecords defaultInstance;
    public static ReqRecords getDefaultInstance() {
      return defaultInstance;
    }
    
    public ReqRecords getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_ReqRecords_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_ReqRecords_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 cmd = 1;
    public static final int CMD_FIELD_NUMBER = 1;
    private int cmd_;
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCmd() {
      return cmd_;
    }
    
    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 nRecordStatus = 3;
    public static final int NRECORDSTATUS_FIELD_NUMBER = 3;
    private int nRecordStatus_;
    public boolean hasNRecordStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getNRecordStatus() {
      return nRecordStatus_;
    }
    
    // optional int32 nUpLoadPercent = 4;
    public static final int NUPLOADPERCENT_FIELD_NUMBER = 4;
    private int nUpLoadPercent_;
    public boolean hasNUpLoadPercent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getNUpLoadPercent() {
      return nUpLoadPercent_;
    }
    
    // optional int32 nTaskId = 5;
    public static final int NTASKID_FIELD_NUMBER = 5;
    private int nTaskId_;
    public boolean hasNTaskId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getNTaskId() {
      return nTaskId_;
    }
    
    // optional string streamNo = 6;
    public static final int STREAMNO_FIELD_NUMBER = 6;
    private java.lang.Object streamNo_;
    public boolean hasStreamNo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getStreamNo() {
      java.lang.Object ref = streamNo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          streamNo_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStreamNoBytes() {
      java.lang.Object ref = streamNo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        streamNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string rtspPath = 7;
    public static final int RTSPPATH_FIELD_NUMBER = 7;
    private java.lang.Object rtspPath_;
    public boolean hasRtspPath() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getRtspPath() {
      java.lang.Object ref = rtspPath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          rtspPath_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRtspPathBytes() {
      java.lang.Object ref = rtspPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        rtspPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 nFileSize = 8;
    public static final int NFILESIZE_FIELD_NUMBER = 8;
    private int nFileSize_;
    public boolean hasNFileSize() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getNFileSize() {
      return nFileSize_;
    }
    
    // optional string errorMsg = 9;
    public static final int ERRORMSG_FIELD_NUMBER = 9;
    private java.lang.Object errorMsg_;
    public boolean hasErrorMsg() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getErrorMsg() {
      java.lang.Object ref = errorMsg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          errorMsg_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getErrorMsgBytes() {
      java.lang.Object ref = errorMsg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        errorMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string startTime = 10;
    public static final int STARTTIME_FIELD_NUMBER = 10;
    private java.lang.Object startTime_;
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getStartTime() {
      java.lang.Object ref = startTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          startTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStartTimeBytes() {
      java.lang.Object ref = startTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        startTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string endTime = 11;
    public static final int ENDTIME_FIELD_NUMBER = 11;
    private java.lang.Object endTime_;
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getEndTime() {
      java.lang.Object ref = endTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          endTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEndTimeBytes() {
      java.lang.Object ref = endTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      cmd_ = 0;
      id_ = 0;
      nRecordStatus_ = 0;
      nUpLoadPercent_ = 0;
      nTaskId_ = 0;
      streamNo_ = "";
      rtspPath_ = "";
      nFileSize_ = 0;
      errorMsg_ = "";
      startTime_ = "";
      endTime_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cmd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, nRecordStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, nUpLoadPercent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, nTaskId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getStreamNoBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getRtspPathBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, nFileSize_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getErrorMsgBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getEndTimeBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cmd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, nRecordStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, nUpLoadPercent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nTaskId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getStreamNoBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getRtspPathBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, nFileSize_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getErrorMsgBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getEndTimeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecordsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_ReqRecords_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_ReqRecords_fieldAccessorTable;
      }
      
      // Construct using com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cmd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        nRecordStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        nUpLoadPercent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        nTaskId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        streamNo_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        rtspPath_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        nFileSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        errorMsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        startTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        endTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDescriptor();
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords getDefaultInstanceForType() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords build() {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords buildPartial() {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords result = new com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nRecordStatus_ = nRecordStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nUpLoadPercent_ = nUpLoadPercent_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nTaskId_ = nTaskId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.streamNo_ = streamNo_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rtspPath_ = rtspPath_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.nFileSize_ = nFileSize_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.errorMsg_ = errorMsg_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords) {
          return mergeFrom((com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords other) {
        if (other == com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance()) return this;
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasNRecordStatus()) {
          setNRecordStatus(other.getNRecordStatus());
        }
        if (other.hasNUpLoadPercent()) {
          setNUpLoadPercent(other.getNUpLoadPercent());
        }
        if (other.hasNTaskId()) {
          setNTaskId(other.getNTaskId());
        }
        if (other.hasStreamNo()) {
          setStreamNo(other.getStreamNo());
        }
        if (other.hasRtspPath()) {
          setRtspPath(other.getRtspPath());
        }
        if (other.hasNFileSize()) {
          setNFileSize(other.getNFileSize());
        }
        if (other.hasErrorMsg()) {
          setErrorMsg(other.getErrorMsg());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cmd_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              nRecordStatus_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              nUpLoadPercent_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nTaskId_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              streamNo_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              rtspPath_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              nFileSize_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              errorMsg_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              startTime_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              endTime_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 cmd = 1;
      private int cmd_ ;
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCmd() {
        return cmd_;
      }
      public Builder setCmd(int value) {
        bitField0_ |= 0x00000001;
        cmd_ = value;
        onChanged();
        return this;
      }
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 id = 2;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nRecordStatus = 3;
      private int nRecordStatus_ ;
      public boolean hasNRecordStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getNRecordStatus() {
        return nRecordStatus_;
      }
      public Builder setNRecordStatus(int value) {
        bitField0_ |= 0x00000004;
        nRecordStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearNRecordStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nRecordStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nUpLoadPercent = 4;
      private int nUpLoadPercent_ ;
      public boolean hasNUpLoadPercent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getNUpLoadPercent() {
        return nUpLoadPercent_;
      }
      public Builder setNUpLoadPercent(int value) {
        bitField0_ |= 0x00000008;
        nUpLoadPercent_ = value;
        onChanged();
        return this;
      }
      public Builder clearNUpLoadPercent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nUpLoadPercent_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nTaskId = 5;
      private int nTaskId_ ;
      public boolean hasNTaskId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getNTaskId() {
        return nTaskId_;
      }
      public Builder setNTaskId(int value) {
        bitField0_ |= 0x00000010;
        nTaskId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNTaskId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nTaskId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string streamNo = 6;
      private java.lang.Object streamNo_ = "";
      public boolean hasStreamNo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getStreamNo() {
        java.lang.Object ref = streamNo_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          streamNo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStreamNo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        streamNo_ = value;
        onChanged();
        return this;
      }
      public Builder clearStreamNo() {
        bitField0_ = (bitField0_ & ~0x00000020);
        streamNo_ = getDefaultInstance().getStreamNo();
        onChanged();
        return this;
      }
      void setStreamNo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        streamNo_ = value;
        onChanged();
      }
      
      // optional string rtspPath = 7;
      private java.lang.Object rtspPath_ = "";
      public boolean hasRtspPath() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getRtspPath() {
        java.lang.Object ref = rtspPath_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          rtspPath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRtspPath(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        rtspPath_ = value;
        onChanged();
        return this;
      }
      public Builder clearRtspPath() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rtspPath_ = getDefaultInstance().getRtspPath();
        onChanged();
        return this;
      }
      void setRtspPath(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        rtspPath_ = value;
        onChanged();
      }
      
      // optional int32 nFileSize = 8;
      private int nFileSize_ ;
      public boolean hasNFileSize() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getNFileSize() {
        return nFileSize_;
      }
      public Builder setNFileSize(int value) {
        bitField0_ |= 0x00000080;
        nFileSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearNFileSize() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nFileSize_ = 0;
        onChanged();
        return this;
      }
      
      // optional string errorMsg = 9;
      private java.lang.Object errorMsg_ = "";
      public boolean hasErrorMsg() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getErrorMsg() {
        java.lang.Object ref = errorMsg_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          errorMsg_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setErrorMsg(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        errorMsg_ = value;
        onChanged();
        return this;
      }
      public Builder clearErrorMsg() {
        bitField0_ = (bitField0_ & ~0x00000100);
        errorMsg_ = getDefaultInstance().getErrorMsg();
        onChanged();
        return this;
      }
      void setErrorMsg(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        errorMsg_ = value;
        onChanged();
      }
      
      // optional string startTime = 10;
      private java.lang.Object startTime_ = "";
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getStartTime() {
        java.lang.Object ref = startTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          startTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStartTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        startTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        startTime_ = getDefaultInstance().getStartTime();
        onChanged();
        return this;
      }
      void setStartTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        startTime_ = value;
        onChanged();
      }
      
      // optional string endTime = 11;
      private java.lang.Object endTime_ = "";
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getEndTime() {
        java.lang.Object ref = endTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          endTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEndTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        endTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        endTime_ = getDefaultInstance().getEndTime();
        onChanged();
        return this;
      }
      void setEndTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        endTime_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:cms_8120.ReqRecords)
    }
    
    static {
      defaultInstance = new ReqRecords(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cms_8120.ReqRecords)
  }
  
  public interface RecordsListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 cmd = 1;
    boolean hasCmd();
    int getCmd();
    
    // repeated .cms_8120.Records record = 2;
    java.util.List<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records> 
        getRecordList();
    com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records getRecord(int index);
    int getRecordCount();
    java.util.List<? extends com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder> 
        getRecordOrBuilderList();
    com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder getRecordOrBuilder(
        int index);
  }
  public static final class RecordsList extends
      com.google.protobuf.GeneratedMessage
      implements RecordsListOrBuilder {
    // Use RecordsList.newBuilder() to construct.
    private RecordsList(Builder builder) {
      super(builder);
    }
    private RecordsList(boolean noInit) {}
    
    private static final RecordsList defaultInstance;
    public static RecordsList getDefaultInstance() {
      return defaultInstance;
    }
    
    public RecordsList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_RecordsList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_RecordsList_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 cmd = 1;
    public static final int CMD_FIELD_NUMBER = 1;
    private int cmd_;
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCmd() {
      return cmd_;
    }
    
    // repeated .cms_8120.Records record = 2;
    public static final int RECORD_FIELD_NUMBER = 2;
    private java.util.List<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records> record_;
    public java.util.List<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records> getRecordList() {
      return record_;
    }
    public java.util.List<? extends com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder> 
        getRecordOrBuilderList() {
      return record_;
    }
    public int getRecordCount() {
      return record_.size();
    }
    public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records getRecord(int index) {
      return record_.get(index);
    }
    public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder getRecordOrBuilder(
        int index) {
      return record_.get(index);
    }
    
    private void initFields() {
      cmd_ = 0;
      record_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cmd_);
      }
      for (int i = 0; i < record_.size(); i++) {
        output.writeMessage(2, record_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cmd_);
      }
      for (int i = 0; i < record_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, record_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_RecordsList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.internal_static_cms_8120_RecordsList_fieldAccessorTable;
      }
      
      // Construct using com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRecordFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cmd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (recordBuilder_ == null) {
          record_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          recordBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDescriptor();
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList getDefaultInstanceForType() {
        return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance();
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList build() {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList buildPartial() {
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList result = new com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmd_ = cmd_;
        if (recordBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            record_ = java.util.Collections.unmodifiableList(record_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.record_ = record_;
        } else {
          result.record_ = recordBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList) {
          return mergeFrom((com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList other) {
        if (other == com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance()) return this;
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (recordBuilder_ == null) {
          if (!other.record_.isEmpty()) {
            if (record_.isEmpty()) {
              record_ = other.record_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRecordIsMutable();
              record_.addAll(other.record_);
            }
            onChanged();
          }
        } else {
          if (!other.record_.isEmpty()) {
            if (recordBuilder_.isEmpty()) {
              recordBuilder_.dispose();
              recordBuilder_ = null;
              record_ = other.record_;
              bitField0_ = (bitField0_ & ~0x00000002);
              recordBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecordFieldBuilder() : null;
            } else {
              recordBuilder_.addAllMessages(other.record_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cmd_ = input.readInt32();
              break;
            }
            case 18: {
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder subBuilder = com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRecord(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 cmd = 1;
      private int cmd_ ;
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCmd() {
        return cmd_;
      }
      public Builder setCmd(int value) {
        bitField0_ |= 0x00000001;
        cmd_ = value;
        onChanged();
        return this;
      }
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .cms_8120.Records record = 2;
      private java.util.List<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records> record_ =
        java.util.Collections.emptyList();
      private void ensureRecordIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          record_ = new java.util.ArrayList<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records>(record_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder> recordBuilder_;
      
      public java.util.List<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records> getRecordList() {
        if (recordBuilder_ == null) {
          return java.util.Collections.unmodifiableList(record_);
        } else {
          return recordBuilder_.getMessageList();
        }
      }
      public int getRecordCount() {
        if (recordBuilder_ == null) {
          return record_.size();
        } else {
          return recordBuilder_.getCount();
        }
      }
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records getRecord(int index) {
        if (recordBuilder_ == null) {
          return record_.get(index);
        } else {
          return recordBuilder_.getMessage(index);
        }
      }
      public Builder setRecord(
          int index, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.set(index, value);
          onChanged();
        } else {
          recordBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRecord(
          int index, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRecord(com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.add(value);
          onChanged();
        } else {
          recordBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRecord(
          int index, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.add(index, value);
          onChanged();
        } else {
          recordBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRecord(
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.add(builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRecord(
          int index, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRecord(
          java.lang.Iterable<? extends com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records> values) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          super.addAll(values, record_);
          onChanged();
        } else {
          recordBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRecord() {
        if (recordBuilder_ == null) {
          record_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          recordBuilder_.clear();
        }
        return this;
      }
      public Builder removeRecord(int index) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.remove(index);
          onChanged();
        } else {
          recordBuilder_.remove(index);
        }
        return this;
      }
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder getRecordBuilder(
          int index) {
        return getRecordFieldBuilder().getBuilder(index);
      }
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder getRecordOrBuilder(
          int index) {
        if (recordBuilder_ == null) {
          return record_.get(index);  } else {
          return recordBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder> 
           getRecordOrBuilderList() {
        if (recordBuilder_ != null) {
          return recordBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(record_);
        }
      }
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder addRecordBuilder() {
        return getRecordFieldBuilder().addBuilder(
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.getDefaultInstance());
      }
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder addRecordBuilder(
          int index) {
        return getRecordFieldBuilder().addBuilder(
            index, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.getDefaultInstance());
      }
      public java.util.List<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder> 
           getRecordBuilderList() {
        return getRecordFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder> 
          getRecordFieldBuilder() {
        if (recordBuilder_ == null) {
          recordBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder, com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsOrBuilder>(
                  record_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          record_ = null;
        }
        return recordBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cms_8120.RecordsList)
    }
    
    static {
      defaultInstance = new RecordsList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cms_8120.RecordsList)
  }
  
  public static abstract class ModifyRecordsinfoService
      implements com.google.protobuf.Service {
    protected ModifyRecordsinfoService() {}
    
    public interface Interface {
      public abstract void qyeryRecordsInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done);
      
      public abstract void updateRecordsInfoBystatus(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done);
      
      public abstract void queryRecordsInfoByid(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done);
      
      public abstract void updateUpLoadPercent(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done);
      
      public abstract void queryRecordsFileInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new ModifyRecordsinfoService() {
        @java.lang.Override
        public  void qyeryRecordsInfo(
            com.google.protobuf.RpcController controller,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
            com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done) {
          impl.qyeryRecordsInfo(controller, request, done);
        }
        
        @java.lang.Override
        public  void updateRecordsInfoBystatus(
            com.google.protobuf.RpcController controller,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
            com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done) {
          impl.updateRecordsInfoBystatus(controller, request, done);
        }
        
        @java.lang.Override
        public  void queryRecordsInfoByid(
            com.google.protobuf.RpcController controller,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
            com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done) {
          impl.queryRecordsInfoByid(controller, request, done);
        }
        
        @java.lang.Override
        public  void updateUpLoadPercent(
            com.google.protobuf.RpcController controller,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
            com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done) {
          impl.updateUpLoadPercent(controller, request, done);
        }
        
        @java.lang.Override
        public  void queryRecordsFileInfo(
            com.google.protobuf.RpcController controller,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
            com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done) {
          impl.queryRecordsFileInfo(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.qyeryRecordsInfo(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request);
            case 1:
              return impl.updateRecordsInfoBystatus(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request);
            case 2:
              return impl.queryRecordsInfoByid(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request);
            case 3:
              return impl.updateUpLoadPercent(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request);
            case 4:
              return impl.queryRecordsFileInfo(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
            case 1:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
            case 2:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
            case 3:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
            case 4:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance();
            case 1:
              return com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance();
            case 2:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance();
            case 3:
              return com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance();
            case 4:
              return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void qyeryRecordsInfo(
        com.google.protobuf.RpcController controller,
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
        com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done);
    
    public abstract void updateRecordsInfoBystatus(
        com.google.protobuf.RpcController controller,
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
        com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done);
    
    public abstract void queryRecordsInfoByid(
        com.google.protobuf.RpcController controller,
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
        com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done);
    
    public abstract void updateUpLoadPercent(
        com.google.protobuf.RpcController controller,
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
        com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done);
    
    public abstract void queryRecordsFileInfo(
        com.google.protobuf.RpcController controller,
        com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
        com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.qyeryRecordsInfo(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request,
            com.google.protobuf.RpcUtil.<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList>specializeCallback(
              done));
          return;
        case 1:
          this.updateRecordsInfoBystatus(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request,
            com.google.protobuf.RpcUtil.<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData>specializeCallback(
              done));
          return;
        case 2:
          this.queryRecordsInfoByid(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request,
            com.google.protobuf.RpcUtil.<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList>specializeCallback(
              done));
          return;
        case 3:
          this.updateUpLoadPercent(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request,
            com.google.protobuf.RpcUtil.<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData>specializeCallback(
              done));
          return;
        case 4:
          this.queryRecordsFileInfo(controller, (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords)request,
            com.google.protobuf.RpcUtil.<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
        case 1:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
        case 2:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
        case 3:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
        case 4:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance();
        case 1:
          return com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance();
        case 2:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance();
        case 3:
          return com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance();
        case 4:
          return com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ModifyRecordsinfoService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void qyeryRecordsInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.class,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance()));
      }
      
      public  void updateRecordsInfoBystatus(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.class,
            com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance()));
      }
      
      public  void queryRecordsInfoByid(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.class,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance()));
      }
      
      public  void updateUpLoadPercent(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.class,
            com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance()));
      }
      
      public  void queryRecordsFileInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request,
          com.google.protobuf.RpcCallback<com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.class,
            com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList qyeryRecordsInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException;
      
      public com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData updateRecordsInfoBystatus(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException;
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList queryRecordsInfoByid(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException;
      
      public com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData updateUpLoadPercent(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException;
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList queryRecordsFileInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList qyeryRecordsInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException {
        return (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance());
      }
      
      
      public com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData updateRecordsInfoBystatus(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException {
        return (com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance());
      }
      
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList queryRecordsInfoByid(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException {
        return (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance());
      }
      
      
      public com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData updateUpLoadPercent(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException {
        return (com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.RspServerData.getDefaultInstance());
      }
      
      
      public com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList queryRecordsFileInfo(
          com.google.protobuf.RpcController controller,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords request)
          throws com.google.protobuf.ServiceException {
        return (com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cms_8120_Records_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cms_8120_Records_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cms_8120_ReqRecords_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cms_8120_ReqRecords_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cms_8120_RecordsList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cms_8120_RecordsList_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024center/Records.proto\022\010cms_8120\032\032server" +
      "/RspServerData.proto\"\364\006\n\007Records\022\n\n\002id\030\001" +
      " \001(\005\022\030\n\020nCollectRegionId\030\002 \001(\005\022\017\n\007nUserI" +
      "D\030\003 \001(\005\022\025\n\rstrRecordName\030\004 \001(\t\022\023\n\013nRecor" +
      "dType\030\005 \001(\005\022\027\n\017nRecordFileType\030\006 \001(\005\022\025\n\r" +
      "nRecordStatus\030\007 \001(\005\022\026\n\016nUploadPercent\030\010 " +
      "\001(\005\022&\n\tstartTime\030\t \001(\t:\0231970-01-01 00:00" +
      ":00\022$\n\007endTime\030\n \001(\t:\0231970-01-01 00:00:0" +
      "0\022\030\n\020nRecordBeginTime\030\013 \001(\005\022\026\n\016nRecordEn" +
      "dTime\030\014 \001(\005\022\020\n\010streamNo\030\r \001(\t\022\024\n\014nRepair",
      "DevId\030\016 \001(\005\022\024\n\014strCollectIp\030\017 \001(\t\022\017\n\007dvr" +
      "Port\030\020 \001(\005\022\023\n\013dvrUserName\030\021 \001(\t\022\016\n\006dvrPw" +
      "d\030\022 \001(\t\022\024\n\014nCollectChan\030\023 \001(\005\022\016\n\006strUrl\030" +
      "\024 \001(\t\022\025\n\rscreenshotSrc\030\025 \001(\t\022+\n\016dtBusine" +
      "ssTime\030\026 \001(\t:\0231970-01-01 00:00:00\022\030\n\020nRe" +
      "cordLocalTime\030\027 \001(\005\022\024\n\014nFileHeadLen\030\030 \001(" +
      "\005\022\023\n\013nCallerType\030\031 \001(\005\022\023\n\013strCallerId\030\032 " +
      "\001(\t\022\023\n\013nRepairType\030\033 \001(\005\022\023\n\013nRepairTime\030" +
      "\034 \001(\005\022\024\n\014nLinkOrderId\030\035 \001(\005\022\021\n\tnLinkType" +
      "\030\036 \001(\005\022\031\n\021nManufacturerType\030\037 \001(\005\022\021\n\tnFi",
      "leSize\030  \001(\005\022\017\n\007nTaskId\030! \001(\005\022\r\n\005strIp\030\"" +
      " \001(\t\022\022\n\nstrCloudIp\030# \001(\t\022\022\n\nnCloudPort\030$" +
      " \001(\005\022\024\n\014strAccessKey\030% \001(\t\022\024\n\014strSecretK" +
      "ey\030& \001(\t\022\021\n\tstrBucket\030\' \001(\t\"\322\001\n\nReqRecor" +
      "ds\022\013\n\003cmd\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022\025\n\rnRecordSt" +
      "atus\030\003 \001(\005\022\026\n\016nUpLoadPercent\030\004 \001(\005\022\017\n\007nT" +
      "askId\030\005 \001(\005\022\020\n\010streamNo\030\006 \001(\t\022\020\n\010rtspPat" +
      "h\030\007 \001(\t\022\021\n\tnFileSize\030\010 \001(\005\022\020\n\010errorMsg\030\t" +
      " \001(\t\022\021\n\tstartTime\030\n \001(\t\022\017\n\007endTime\030\013 \001(\t" +
      "\"=\n\013RecordsList\022\013\n\003cmd\030\001 \001(\005\022!\n\006record\030\002",
      " \003(\0132\021.cms_8120.Records2\367\002\n\030ModifyRecord" +
      "sinfoService\022?\n\020QyeryRecordsInfo\022\024.cms_8" +
      "120.ReqRecords\032\025.cms_8120.RecordsList\022J\n" +
      "\031UpdateRecordsInfoBystatus\022\024.cms_8120.Re" +
      "qRecords\032\027.cms_8120.RspServerData\022C\n\024Que" +
      "ryRecordsInfoByid\022\024.cms_8120.ReqRecords\032" +
      "\025.cms_8120.RecordsList\022D\n\023UpdateUpLoadPe" +
      "rcent\022\024.cms_8120.ReqRecords\032\027.cms_8120.R" +
      "spServerData\022C\n\024QueryRecordsFileInfo\022\024.c" +
      "ms_8120.ReqRecords\032\025.cms_8120.RecordsLis",
      "tB;\n(com.hikvision.finance.fms.cms.hpp.c" +
      "enterB\014RecordsProto\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_cms_8120_Records_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_cms_8120_Records_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cms_8120_Records_descriptor,
              new java.lang.String[] { "Id", "NCollectRegionId", "NUserID", "StrRecordName", "NRecordType", "NRecordFileType", "NRecordStatus", "NUploadPercent", "StartTime", "EndTime", "NRecordBeginTime", "NRecordEndTime", "StreamNo", "NRepairDevId", "StrCollectIp", "DvrPort", "DvrUserName", "DvrPwd", "NCollectChan", "StrUrl", "ScreenshotSrc", "DtBusinessTime", "NRecordLocalTime", "NFileHeadLen", "NCallerType", "StrCallerId", "NRepairType", "NRepairTime", "NLinkOrderId", "NLinkType", "NManufacturerType", "NFileSize", "NTaskId", "StrIp", "StrCloudIp", "NCloudPort", "StrAccessKey", "StrSecretKey", "StrBucket", },
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.class,
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.Records.Builder.class);
          internal_static_cms_8120_ReqRecords_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_cms_8120_ReqRecords_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cms_8120_ReqRecords_descriptor,
              new java.lang.String[] { "Cmd", "Id", "NRecordStatus", "NUpLoadPercent", "NTaskId", "StreamNo", "RtspPath", "NFileSize", "ErrorMsg", "StartTime", "EndTime", },
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.class,
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.ReqRecords.Builder.class);
          internal_static_cms_8120_RecordsList_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_cms_8120_RecordsList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cms_8120_RecordsList_descriptor,
              new java.lang.String[] { "Cmd", "Record", },
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.class,
              com.hikvision.finance.fms.cms.hpp.center.RecordsProto.RecordsList.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.hikvision.finance.fms.cms.hpp.server.RspServerDataProto.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
